test_name,source_db,queries
00040_array_enumerate_uniq.sql,clickhouse,"[{'query': 'SELECT max(arrayJoin(arr)) FROM (SELECT arrayEnumerateUniq(groupArray(intDiv(number, 54321)) AS nums, groupArray(toString(intDiv(number, 98765)))) AS arr FROM (SELECT number FROM system.numbers LIMIT 1000000) GROUP BY intHash32(number) % 100000);\n\nSELECT arrayEnumerateUniq([[1], [2], [34], [1]]);\nSELECT arrayEnumerateUniq([(1, 2), (3, 4), (1, 2)]);\n\n', 'source_success': True, 'source_exception': '', 'source_result': '   max(arrayJoin(arr))\n0                    6', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'SELECT max(arrayJoin(arr)) FROM (SELECT arrayEnumerateUniq(groupArray(intDiv(number, 54321)) AS nums, groupArray(toString(intDiv(number, 98765)))) AS arr FROM (SELECT number FROM system.numbers LIMIT 1000000) GROUP BY intHash32(number) % 100000);\n\nSELECT arrayEnumerateUniq([[1], [2], [34], [1]]);\nSELECT arrayEnumerateUniq([(1, 2), (3, 4), (1, 2)]);\n\n\': near ""AS"": syntax error', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
00067_replicate_segfault.sql,clickhouse,"[{'query': ""-- Tags: replica\n\nSELECT arrayFilter(x -> materialize(0), materialize([0])) AS p, arrayAll(y -> arrayExists(x -> y != x, p), p) AS test;\nSELECT arrayFilter(x -> materialize(0), materialize([''])) AS p, arrayAll(y -> arrayExists(x -> y != x, p), p) AS test;\n"", 'source_success': True, 'source_exception': '', 'source_result': '    p  test\n0  []     1', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql '-- Tags: replica\n\nSELECT arrayFilter(x -> materialize(0), materialize([0])) AS p, arrayAll(y -> arrayExists(x -> y != x, p), p) AS test;\nSELECT arrayFilter(x -> materialize(0), materialize([''])) AS p, arrayAll(y -> arrayExists(x -> y != x, p), p) AS test;\n': no such column: 0"", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
00098_f_union_all.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS data2013;\nDROP TABLE IF EXISTS data2015;\n\nCREATE TABLE data2013 (name String, value UInt32) ENGINE = Memory;\nCREATE TABLE data2015 (data_name String, data_value UInt32) ENGINE = Memory;\n\nINSERT INTO data2013(name,value) VALUES('Alice', 1000);\nINSERT INTO data2013(name,value) VALUES('Bob', 2000);\nINSERT INTO data2013(name,value) VALUES('Carol', 5000);\n\nINSERT INTO data2015(data_name, data_value) VALUES('Foo', 42);\nINSERT INTO data2015(data_name, data_value) VALUES('Bar', 1);\n\nSELECT name FROM (SELECT name FROM data2013 UNION ALL SELECT data_name AS name FROM data2015) ORDER BY name ASC;\n\nDROP TABLE data2013;\nDROP TABLE data2015;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS data2013;\nDROP TABLE IF EXISTS data2015;\n\nCREATE TABLE data2013 (name String, value UInt32) ENGINE = Memory;\nCREATE TABLE data2015 (data_name String, data_value UInt32) ENGINE = Memory;\n\nINSERT INTO data2013(name,value) VALUES('Alice', 1000);\nINSERT INTO data2013(name,value) VALUES('Bob', 2000);\nINSERT INTO data2013(name,value) VALUES('Carol', 5000);\n\nINSERT INTO data2015(data_name, data_value) VALUES('Foo', 42);\nINSERT INTO data2015(data_name, data_value) VALUES('Bar', 1);\n\nSELECT name FROM (SELECT name FROM data2013 UNION ALL SELECT data_name AS name FROM data2015) ORDER BY name ASC;\n\nDROP TABLE data2013;\nDROP TABLE data2015;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
00098_h_union_all.sql,clickhouse,"[{'query': 'SELECT X FROM (SELECT 1 AS X, 2 AS Y UNION ALL SELECT * FROM (SELECT 3, 4)) ORDER BY X ASC;\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 91 (end of query) (line 1, col 91): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': True, 'result': '   X\n0  1\n1  3', 'error': '', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
00124_shard_distributed_with_many_replicas.sql,clickhouse,"[{'query': ""-- Tags: replica, distributed\n\nSET allow_experimental_parallel_reading_from_replicas = 0;\nSET max_parallel_replicas = 2;\nDROP TABLE IF EXISTS report;\n\nset allow_deprecated_syntax_for_merge_tree=1;\nCREATE TABLE report(id UInt32, event_date Date, priority UInt32, description String) ENGINE = MergeTree(event_date, intHash32(id), (id, event_date, intHash32(id)), 8192);\n\nINSERT INTO report(id,event_date,priority,description) VALUES (1, '2015-01-01', 1, 'foo')(2, '2015-02-01', 2, 'bar')(3, '2015-03-01', 3, 'foo')(4, '2015-04-01', 4, 'bar')(5, '2015-05-01', 5, 'foo');\nSELECT * FROM (SELECT id, event_date, priority, description FROM remote('127.0.0.{2|3}', currentDatabase(), report)) ORDER BY id ASC;\n\nDROP TABLE report;\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 91 (line 4, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- Tags: replica, distributed\n\nSET allow_experimental_parallel_reading_from_replicas = 0;\nSET max_parallel_replicas = 2;\nDROP TABLE IF EXISTS report;\n\nset allow_deprecated_syntax_for_merge_tree=1;\nCREATE TABLE report(id UInt32, event_date Date, priority UInt32, description String) ENGINE = MergeTree(event_date, intHash32(id), (id, event_date, intHash32(id)), 8192);\n\nINSERT INTO report(id,event_date,priority,description) VALUES (1, \'2015-01-01\', 1, \'foo\')(2, \'2015-02-01\', 2, \'bar\')(3, \'2015-03-01\', 3, \'foo\')(4, \'2015-04-01\', 4, \'bar\')(5, \'2015-05-01\', 5, \'foo\');\nSELECT * FROM (SELECT id, event_date, priority, description FROM remote(\'127.0.0.{2|3}\', currentDatabase(), report)) ORDER BY id ASC;\n\nDROP TABLE report;\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
00254_tuple_extremes.sql,clickhouse,"[{'query': ""drop table if exists numbers_10;\n\ncreate table numbers_10 (number UInt64) engine = MergeTree order by number;\ninsert into numbers_10 select number from system.numbers limit 10;\n\nSELECT number, (number, toDate('2015-01-01') + number) FROM numbers_10 LIMIT 10 SETTINGS extremes = 1;\n\ndrop table if exists numbers_10;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'drop table if exists numbers_10;\n\ncreate table numbers_10 (number UInt64) engine = MergeTree order by number;\ninsert into numbers_10 select number from system.numbers limit 10;\n\nSELECT number, (number, toDate('2015-01-01') + number) FROM numbers_10 LIMIT 10 SETTINGS extremes = 1;\n\ndrop table if exists numbers_10;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
00273_quantiles.sql,clickhouse,"[{'query': ""SELECT quantiles(0.5)(x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\nSELECT quantilesExact(0.5)(x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\nSELECT quantilesTDigest(0.5)(x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\nSELECT quantilesDeterministic(0.5)(x, x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\nSELECT arrayMap(a -> round(a, 2), quantilesDD(0.01, 0.5)(x)) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\n\nSELECT quantiles(0, 0.001, 0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99, 0.999, 1)(x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\nSELECT quantilesExact(0, 0.001, 0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99, 0.999, 1)(x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\nSELECT quantilesTDigest(0, 0.001, 0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99, 0.999, 1)(x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\nSELECT quantilesDeterministic(0, 0.001, 0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99, 0.999, 1)(x, x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\nSELECT arrayMap(a -> round(a, 2), quantilesDD(0.01, 0, 0.001, 0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99, 0.999, 1)(x)) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\n\n-- The result slightly differs but it's ok since `quantilesDeterministic` is an approximate function.\nSET max_bytes_before_external_group_by = 0;\n\nSELECT round(1000000 / (number + 1)) AS k, count() AS c, arrayMap(x -> round(x, 6), quantilesDeterministic(0.1, 0.5, 0.9)(number, intHash64(number))) AS q1, quantilesExact(0.1, 0.5, 0.9)(number) AS q2 FROM (SELECT number FROM system.numbers LIMIT 1000000) GROUP BY k ORDER BY k;\n"", 'source_success': True, 'source_exception': '', 'source_result': '  quantiles(0.5)(x)\n0           [500.0]', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'SELECT quantiles(0.5)(x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\nSELECT quantilesExact(0.5)(x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\nSELECT quantilesTDigest(0.5)(x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\nSELECT quantilesDeterministic(0.5)(x, x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\nSELECT arrayMap(a -> round(a, 2), quantilesDD(0.01, 0.5)(x)) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\n\nSELECT quantiles(0, 0.001, 0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99, 0.999, 1)(x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\nSELECT quantilesExact(0, 0.001, 0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99, 0.999, 1)(x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\nSELECT quantilesTDigest(0, 0.001, 0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99, 0.999, 1)(x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\nSELECT quantilesDeterministic(0, 0.001, 0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99, 0.999, 1)(x, x) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\nSELECT arrayMap(a -> round(a, 2), quantilesDD(0.01, 0, 0.001, 0.01, 0.05, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 0.99, 0.999, 1)(x)) FROM (SELECT number AS x FROM system.numbers LIMIT 1001);\n\n-- The result slightly differs but it\'s ok since `quantilesDeterministic` is an approximate function.\nSET max_bytes_before_external_group_by = 0;\n\nSELECT round(1000000 / (number + 1)) AS k, count() AS c, arrayMap(x -> round(x, 6), quantilesDeterministic(0.1, 0.5, 0.9)(number, intHash64(number))) AS q1, quantilesExact(0.1, 0.5, 0.9)(number) AS q2 FROM (SELECT number FROM system.numbers LIMIT 1000000) GROUP BY k ORDER BY k;\n\': near ""("": syntax error', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
00510_materizlized_view_and_deduplication_zookeeper.sql,clickhouse,"[{'query': ""-- Tags: zookeeper, no-ordinary-database, no-parallel\n-- Tag no-parallel: static UUID\n\nDROP TABLE IF EXISTS with_deduplication;\nDROP TABLE IF EXISTS without_deduplication;\nDROP TABLE IF EXISTS with_deduplication_mv;\nDROP TABLE IF EXISTS without_deduplication_mv;\n\nCREATE TABLE with_deduplication(x UInt32)\n    ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00510/with_deduplication', 'r1') ORDER BY x;\nCREATE TABLE without_deduplication(x UInt32)\n    ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00510/without_deduplication', 'r1') ORDER BY x SETTINGS replicated_deduplication_window = 0;\n\nCREATE MATERIALIZED VIEW with_deduplication_mv UUID '00000510-1000-4000-8000-000000000001'\n    ENGINE = ReplicatedAggregatingMergeTree('/clickhouse/tables/{database}/test_00510/with_deduplication_mv', 'r1') ORDER BY dummy\n    AS SELECT 0 AS dummy, countState(x) AS cnt FROM with_deduplication;\nCREATE MATERIALIZED VIEW without_deduplication_mv UUID '00000510-1000-4000-8000-000000000002'\n    ENGINE = ReplicatedAggregatingMergeTree('/clickhouse/tables/{database}/test_00510/without_deduplication_mv', 'r1') ORDER BY dummy\n    AS SELECT 0 AS dummy, countState(x) AS cnt FROM without_deduplication;\n\nINSERT INTO with_deduplication VALUES (42);\nINSERT INTO with_deduplication VALUES (42);\nINSERT INTO with_deduplication VALUES (43);\n\nINSERT INTO without_deduplication VALUES (42);\nINSERT INTO without_deduplication VALUES (42);\nINSERT INTO without_deduplication VALUES (43);\n\nSELECT count() FROM with_deduplication;\nSELECT count() FROM without_deduplication;\n\n-- Implicit insert isn't deduplicated\nSELECT '';\nSELECT countMerge(cnt) FROM with_deduplication_mv;\nSELECT countMerge(cnt) FROM without_deduplication_mv;\n\n-- Explicit insert is deduplicated\nALTER TABLE `.inner_id.00000510-1000-4000-8000-000000000001` DROP PARTITION ID 'all';\nALTER TABLE `.inner_id.00000510-1000-4000-8000-000000000002` DROP PARTITION ID 'all';\nINSERT INTO `.inner_id.00000510-1000-4000-8000-000000000001` SELECT 0 AS dummy, arrayReduce('countState', [toUInt32(42)]) AS cnt;\nINSERT INTO `.inner_id.00000510-1000-4000-8000-000000000001` SELECT 0 AS dummy, arrayReduce('countState', [toUInt32(42)]) AS cnt;\nINSERT INTO `.inner_id.00000510-1000-4000-8000-000000000002` SELECT 0 AS dummy, arrayReduce('countState', [toUInt32(42)]) AS cnt;\nINSERT INTO `.inner_id.00000510-1000-4000-8000-000000000002` SELECT 0 AS dummy, arrayReduce('countState', [toUInt32(42)]) AS cnt;\n\nSELECT '';\nSELECT countMerge(cnt) FROM with_deduplication_mv;\nSELECT countMerge(cnt) FROM without_deduplication_mv;\n\nDROP TABLE IF EXISTS with_deduplication;\nDROP TABLE IF EXISTS without_deduplication;\nDROP TABLE IF EXISTS with_deduplication_mv;\nDROP TABLE IF EXISTS without_deduplication_mv;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql '-- Tags: zookeeper, no-ordinary-database, no-parallel\n-- Tag no-parallel: static UUID\n\nDROP TABLE IF EXISTS with_deduplication;\nDROP TABLE IF EXISTS without_deduplication;\nDROP TABLE IF EXISTS with_deduplication_mv;\nDROP TABLE IF EXISTS without_deduplication_mv;\n\nCREATE TABLE with_deduplication(x UInt32)\n    ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00510/with_deduplication', 'r1') ORDER BY x;\nCREATE TABLE without_deduplication(x UInt32)\n    ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00510/without_deduplication', 'r1') ORDER BY x SETTINGS replicated_deduplication_window = 0;\n\nCREATE MATERIALIZED VIEW with_deduplication_mv UUID '00000510-1000-4000-8000-000000000001'\n    ENGINE = ReplicatedAggregatingMergeTree('/clickhouse/tables/{database}/test_00510/with_deduplication_mv', 'r1') ORDER BY dummy\n    AS SELECT 0 AS dummy, countState(x) AS cnt FROM with_deduplication;\nCREATE MATERIALIZED VIEW without_deduplication_mv UUID '00000510-1000-4000-8000-000000000002'\n    ENGINE = ReplicatedAggregatingMergeTree('/clickhouse/tables/{database}/test_00510/without_deduplication_mv', 'r1') ORDER BY dummy\n    AS SELECT 0 AS dummy, countState(x) AS cnt FROM without_deduplication;\n\nINSERT INTO with_deduplication VALUES (42);\nINSERT INTO with_deduplication VALUES (42);\nINSERT INTO with_deduplication VALUES (43);\n\nINSERT INTO without_deduplication VALUES (42);\nINSERT INTO without_deduplication VALUES (42);\nINSERT INTO without_deduplication VALUES (43);\n\nSELECT count() FROM with_deduplication;\nSELECT count() FROM without_deduplication;\n\n-- Implicit insert isn't deduplicated\nSELECT '';\nSELECT countMerge(cnt) FROM with_deduplication_mv;\nSELECT countMerge(cnt) FROM without_deduplication_mv;\n\n-- Explicit insert is deduplicated\nALTER TABLE `.inner_id.00000510-1000-4000-8000-000000000001` DROP PARTITION ID 'all';\nALTER TABLE `.inner_id.00000510-1000-4000-8000-000000000002` DROP PARTITION ID 'all';\nINSERT INTO `.inner_id.00000510-1000-4000-8000-000000000001` SELECT 0 AS dummy, arrayReduce('countState', [toUInt32(42)]) AS cnt;\nINSERT INTO `.inner_id.00000510-1000-4000-8000-000000000001` SELECT 0 AS dummy, arrayReduce('countState', [toUInt32(42)]) AS cnt;\nINSERT INTO `.inner_id.00000510-1000-4000-8000-000000000002` SELECT 0 AS dummy, arrayReduce('countState', [toUInt32(42)]) AS cnt;\nINSERT INTO `.inner_id.00000510-1000-4000-8000-000000000002` SELECT 0 AS dummy, arrayReduce('countState', [toUInt32(42)]) AS cnt;\n\nSELECT '';\nSELECT countMerge(cnt) FROM with_deduplication_mv;\nSELECT countMerge(cnt) FROM without_deduplication_mv;\n\nDROP TABLE IF EXISTS with_deduplication;\nDROP TABLE IF EXISTS without_deduplication;\nDROP TABLE IF EXISTS with_deduplication_mv;\nDROP TABLE IF EXISTS without_deduplication_mv;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
00513_fractional_time_zones.sql,clickhouse,"[{'query': ""WITH toDateTime(1509138000) + number * 300 AS t SELECT toHour(t, 'Asia/Kolkata') AS h, toString(toStartOfHour(t, 'Asia/Kolkata'), 'Asia/Kolkata') AS h_start FROM system.numbers LIMIT 12;\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 186 (end of query) (line 1, col 186): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'WITH toDateTime(1509138000) + number * 300 AS t SELECT toHour(t, \'Asia/Kolkata\') AS h, toString(toStartOfHour(t, \'Asia/Kolkata\'), \'Asia/Kolkata\') AS h_start FROM system.numbers LIMIT 12;\n\': near ""1509138000"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
00562_in_subquery_merge_tree.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS merge_tree_in_subqueries;\nCREATE TABLE merge_tree_in_subqueries (id UInt64, name String, num UInt64) ENGINE = MergeTree ORDER BY (id, name);\nINSERT INTO merge_tree_in_subqueries VALUES(1, 'test1', 42);\nINSERT INTO merge_tree_in_subqueries VALUES(2, 'test2', 8);\nINSERT INTO merge_tree_in_subqueries VALUES(3, 'test3', 8);\nINSERT INTO merge_tree_in_subqueries VALUES(4, 'test4', 1985);\nINSERT INTO merge_tree_in_subqueries VALUES(5, 'test5', 0);\n\n-- Index scans.\nSET force_primary_key = 1;\n\nSELECT * FROM merge_tree_in_subqueries WHERE id IN (SELECT * FROM system.numbers LIMIT 0);\n\nSELECT * FROM merge_tree_in_subqueries WHERE id IN (SELECT * FROM system.numbers LIMIT 2, 3) ORDER BY id;\nSELECT * FROM merge_tree_in_subqueries WHERE name IN (SELECT 'test' || toString(number) FROM system.numbers LIMIT 2, 3) ORDER BY id;\n\nSELECT id AS id2, name AS value FROM merge_tree_in_subqueries WHERE (value, id2) IN (SELECT 'test' || toString(number), number FROM system.numbers LIMIT 2, 3) ORDER BY id;\n\n-- Non-index scans.\nSET force_primary_key = 0;\n\nSELECT id AS id2, name AS value FROM merge_tree_in_subqueries WHERE num IN (SELECT number FROM system.numbers LIMIT 10) ORDER BY id;\nSELECT id AS id2, name AS value FROM merge_tree_in_subqueries WHERE (id, num) IN (SELECT number, number + 6 FROM system.numbers LIMIT 10) ORDER BY id;\n\nDROP TABLE IF EXISTS merge_tree_in_subqueries;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS merge_tree_in_subqueries;\nCREATE TABLE merge_tree_in_subqueries (id UInt64, name String, num UInt64) ENGINE = MergeTree ORDER BY (id, name);\nINSERT INTO merge_tree_in_subqueries VALUES(1, 'test1', 42);\nINSERT INTO merge_tree_in_subqueries VALUES(2, 'test2', 8);\nINSERT INTO merge_tree_in_subqueries VALUES(3, 'test3', 8);\nINSERT INTO merge_tree_in_subqueries VALUES(4, 'test4', 1985);\nINSERT INTO merge_tree_in_subqueries VALUES(5, 'test5', 0);\n\n-- Index scans.\nSET force_primary_key = 1;\n\nSELECT * FROM merge_tree_in_subqueries WHERE id IN (SELECT * FROM system.numbers LIMIT 0);\n\nSELECT * FROM merge_tree_in_subqueries WHERE id IN (SELECT * FROM system.numbers LIMIT 2, 3) ORDER BY id;\nSELECT * FROM merge_tree_in_subqueries WHERE name IN (SELECT 'test' || toString(number) FROM system.numbers LIMIT 2, 3) ORDER BY id;\n\nSELECT id AS id2, name AS value FROM merge_tree_in_subqueries WHERE (value, id2) IN (SELECT 'test' || toString(number), number FROM system.numbers LIMIT 2, 3) ORDER BY id;\n\n-- Non-index scans.\nSET force_primary_key = 0;\n\nSELECT id AS id2, name AS value FROM merge_tree_in_subqueries WHERE num IN (SELECT number FROM system.numbers LIMIT 10) ORDER BY id;\nSELECT id AS id2, name AS value FROM merge_tree_in_subqueries WHERE (id, num) IN (SELECT number, number + 6 FROM system.numbers LIMIT 10) ORDER BY id;\n\nDROP TABLE IF EXISTS merge_tree_in_subqueries;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
00578_merge_table_and_table_virtual_column.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS numbers1;\nDROP TABLE IF EXISTS numbers2;\nDROP TABLE IF EXISTS numbers3;\nDROP TABLE IF EXISTS numbers4;\nDROP TABLE IF EXISTS numbers5;\n\nCREATE TABLE numbers1 ENGINE = StripeLog AS SELECT number FROM numbers(1000);\nCREATE TABLE numbers2 ENGINE = TinyLog AS SELECT number FROM numbers(1000);\nCREATE TABLE numbers3 ENGINE = Log AS SELECT number FROM numbers(1000);\nCREATE TABLE numbers4 ENGINE = Memory AS SELECT number FROM numbers(1000);\nCREATE TABLE numbers5 ENGINE = MergeTree ORDER BY number AS SELECT number FROM numbers(1000);\n\nSELECT count() FROM merge(currentDatabase(), '^numbers\\\\d+$');\nSELECT DISTINCT count() FROM merge(currentDatabase(), '^numbers\\\\d+$') GROUP BY number;\n\nSET optimize_aggregation_in_order = 0; -- FIXME : in order may happen before filter push down\n\nSET max_rows_to_read = 1000;\n\nSET max_threads = 'auto';\nSELECT count() FROM merge(currentDatabase(), '^numbers\\\\d+$') WHERE _table = 'numbers1';\n\nSET max_threads = 1;\nSELECT count() FROM merge(currentDatabase(), '^numbers\\\\d+$') WHERE _table = 'numbers2';\n\nSET max_threads = 10;\nSELECT count() FROM merge(currentDatabase(), '^numbers\\\\d+$') WHERE _table = 'numbers3';\n\nSET max_rows_to_read = 1;\n\nSET max_threads = 'auto';\nSELECT count() FROM merge(currentDatabase(), '^numbers\\\\d+$') WHERE _table = 'non_existing';\n\nSET max_threads = 1;\nSELECT count() FROM merge(currentDatabase(), '^numbers\\\\d+$') WHERE _table = 'non_existing';\n\nSET max_threads = 10;\nSELECT count() FROM merge(currentDatabase(), '^numbers\\\\d+$') WHERE _table = 'non_existing';\n\nDROP TABLE numbers1;\nDROP TABLE numbers2;\nDROP TABLE numbers3;\nDROP TABLE numbers4;\nDROP TABLE numbers5;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS numbers1;\nDROP TABLE IF EXISTS numbers2;\nDROP TABLE IF EXISTS numbers3;\nDROP TABLE IF EXISTS numbers4;\nDROP TABLE IF EXISTS numbers5;\n\nCREATE TABLE numbers1 ENGINE = StripeLog AS SELECT number FROM numbers(1000);\nCREATE TABLE numbers2 ENGINE = TinyLog AS SELECT number FROM numbers(1000);\nCREATE TABLE numbers3 ENGINE = Log AS SELECT number FROM numbers(1000);\nCREATE TABLE numbers4 ENGINE = Memory AS SELECT number FROM numbers(1000);\nCREATE TABLE numbers5 ENGINE = MergeTree ORDER BY number AS SELECT number FROM numbers(1000);\n\nSELECT count() FROM merge(currentDatabase(), '^numbers\\\\d+$');\nSELECT DISTINCT count() FROM merge(currentDatabase(), '^numbers\\\\d+$') GROUP BY number;\n\nSET optimize_aggregation_in_order = 0; -- FIXME : in order may happen before filter push down\n\nSET max_rows_to_read = 1000;\n\nSET max_threads = 'auto';\nSELECT count() FROM merge(currentDatabase(), '^numbers\\\\d+$') WHERE _table = 'numbers1';\n\nSET max_threads = 1;\nSELECT count() FROM merge(currentDatabase(), '^numbers\\\\d+$') WHERE _table = 'numbers2';\n\nSET max_threads = 10;\nSELECT count() FROM merge(currentDatabase(), '^numbers\\\\d+$') WHERE _table = 'numbers3';\n\nSET max_rows_to_read = 1;\n\nSET max_threads = 'auto';\nSELECT count() FROM merge(currentDatabase(), '^numbers\\\\d+$') WHERE _table = 'non_existing';\n\nSET max_threads = 1;\nSELECT count() FROM merge(currentDatabase(), '^numbers\\\\d+$') WHERE _table = 'non_existing';\n\nSET max_threads = 10;\nSELECT count() FROM merge(currentDatabase(), '^numbers\\\\d+$') WHERE _table = 'non_existing';\n\nDROP TABLE numbers1;\nDROP TABLE numbers2;\nDROP TABLE numbers3;\nDROP TABLE numbers4;\nDROP TABLE numbers5;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
00622_select_in_parens.sql,clickhouse,"[{'query': '(SELECT 1);\n(SELECT 2) UNION ALL (SELECT 2);\n((SELECT (((3)))));\n', 'source_success': True, 'source_exception': '', 'source_result': '   1\n0  1', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'(SELECT 1);\n(SELECT 2) UNION ALL (SELECT 2);\n((SELECT (((3)))));\n\': near ""("": syntax error', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
00624_length_utf8.sql,clickhouse,"[{'query': ""SELECT 'привет пр' AS x, lengthUTF8(x) AS y;\nSELECT x, lengthUTF8(x) AS y FROM (SELECT arrayJoin(['', 'h', 'hello', 'hello hello hello', 'п', 'пр', 'привет', 'привет привет', 'привет привет привет', '你好', '你好 你好', '你好你好你好', '你好你好你好你好', '你好 你好 你好 你好 你好']) AS x);\n"", 'source_success': True, 'source_exception': '', 'source_result': '           x  y\n0  привет пр  9', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'SELECT 'привет пр' AS x, lengthUTF8(x) AS y;\nSELECT x, lengthUTF8(x) AS y FROM (SELECT arrayJoin(['', 'h', 'hello', 'hello hello hello', 'п', 'пр', 'привет', 'привет привет', 'привет привет привет', '你好', '你好 你好', '你好你好你好', '你好你好你好你好', '你好 你好 你好 你好 你好']) AS x);\n': no such column: x"", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
00653_monotonic_integer_cast.sql,clickhouse,"[{'query': 'drop table if exists `table_00653`;\ncreate table `table_00653` (val Int32) engine = MergeTree order by val;\ninsert into `table_00653` values (-2), (0), (2);\nselect count() from `table_00653` where toUInt64(val) == 0;\ndrop table table_00653;\n', 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'drop table if exists `table_00653`;\ncreate table `table_00653` (val Int32) engine = MergeTree order by val;\ninsert into `table_00653` values (-2), (0), (2);\nselect count() from `table_00653` where toUInt64(val) == 0;\ndrop table table_00653;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
00709_virtual_column_partition_id.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS partition_id;\n\nset allow_deprecated_syntax_for_merge_tree=1;\nCREATE TABLE IF NOT EXISTS partition_id (d Date DEFAULT '2000-01-01', x UInt64) ENGINE = MergeTree(d, x, 5);\n\nINSERT INTO partition_id VALUES (100, 1), (200, 2), (300, 3);\n\nSELECT _partition_id FROM partition_id ORDER BY x;\n\nDROP TABLE IF EXISTS partition_id;\n\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS partition_id;\n\nset allow_deprecated_syntax_for_merge_tree=1;\nCREATE TABLE IF NOT EXISTS partition_id (d Date DEFAULT '2000-01-01', x UInt64) ENGINE = MergeTree(d, x, 5);\n\nINSERT INTO partition_id VALUES (100, 1), (200, 2), (300, 3);\n\nSELECT _partition_id FROM partition_id ORDER BY x;\n\nDROP TABLE IF EXISTS partition_id;\n\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
00725_memory_tracking.sql,clickhouse,"[{'query': ""-- Tags: no-replicated-database\n\nSELECT least(value, 0) FROM system.metrics WHERE metric = 'MemoryTracking';\nSELECT length(range(100000000));\nSELECT least(value, 0) FROM system.metrics WHERE metric = 'MemoryTracking';\n"", 'source_success': True, 'source_exception': '', 'source_result': '   least(value, 0)\n0                0', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql '-- Tags: no-replicated-database\n\nSELECT least(value, 0) FROM system.metrics WHERE metric = 'MemoryTracking';\nSELECT length(range(100000000));\nSELECT least(value, 0) FROM system.metrics WHERE metric = 'MemoryTracking';\n': no such table: system.metrics"", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
00732_quorum_insert_lost_part_and_alive_part_zookeeper_long.sql,clickhouse,"[{'query': ""-- Tags: long, zookeeper, no-replicated-database\n-- Tag no-replicated-database: Fails due to additional replicas or shards\n\nSET send_logs_level = 'fatal';\n\nDROP TABLE IF EXISTS quorum1;\nDROP TABLE IF EXISTS quorum2;\n\nCREATE TABLE quorum1(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum_lost_alive', '1') ORDER BY x PARTITION BY y;\nCREATE TABLE quorum2(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum_lost_alive', '2') ORDER BY x PARTITION BY y;\n\nSET insert_quorum=2, insert_quorum_parallel=0;\nSET select_sequential_consistency=1;\n\nINSERT INTO quorum1 VALUES (1, '2018-11-15');\nINSERT INTO quorum1 VALUES (2, '2018-11-15');\nINSERT INTO quorum1 VALUES (3, '2018-12-16');\n\nSET insert_quorum_timeout=0;\n\nSYSTEM STOP FETCHES quorum1;\n\nINSERT INTO quorum2 VALUES (4, toDate('2018-12-16')); -- { serverError 319 }\n\nSELECT x FROM quorum1 ORDER BY x;\nSELECT x FROM quorum2 ORDER BY x;\n\nSET select_sequential_consistency=0;\n\nSELECT x FROM quorum2 ORDER BY x;\n\nSET select_sequential_consistency=1;\n\nSYSTEM START FETCHES quorum1;\nSYSTEM SYNC REPLICA quorum1;\n\nSELECT x FROM quorum1 ORDER BY x;\nSELECT x FROM quorum2 ORDER BY x;\n\nDROP TABLE quorum1;\nDROP TABLE quorum2;\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 156 (line 5, col 2): FORMAT Native. Expected one of: string literal, literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- Tags: long, zookeeper, no-replicated-database\n-- Tag no-replicated-database: Fails due to additional replicas or shards\n\nSET send_logs_level = \'fatal\';\n\nDROP TABLE IF EXISTS quorum1;\nDROP TABLE IF EXISTS quorum2;\n\nCREATE TABLE quorum1(x UInt32, y Date) ENGINE ReplicatedMergeTree(\'/clickhouse/tables/{database}/test_00732/quorum_lost_alive\', \'1\') ORDER BY x PARTITION BY y;\nCREATE TABLE quorum2(x UInt32, y Date) ENGINE ReplicatedMergeTree(\'/clickhouse/tables/{database}/test_00732/quorum_lost_alive\', \'2\') ORDER BY x PARTITION BY y;\n\nSET insert_quorum=2, insert_quorum_parallel=0;\nSET select_sequential_consistency=1;\n\nINSERT INTO quorum1 VALUES (1, \'2018-11-15\');\nINSERT INTO quorum1 VALUES (2, \'2018-11-15\');\nINSERT INTO quorum1 VALUES (3, \'2018-12-16\');\n\nSET insert_quorum_timeout=0;\n\nSYSTEM STOP FETCHES quorum1;\n\nINSERT INTO quorum2 VALUES (4, toDate(\'2018-12-16\')); -- { serverError 319 }\n\nSELECT x FROM quorum1 ORDER BY x;\nSELECT x FROM quorum2 ORDER BY x;\n\nSET select_sequential_consistency=0;\n\nSELECT x FROM quorum2 ORDER BY x;\n\nSET select_sequential_consistency=1;\n\nSYSTEM START FETCHES quorum1;\nSYSTEM SYNC REPLICA quorum1;\n\nSELECT x FROM quorum1 ORDER BY x;\nSELECT x FROM quorum2 ORDER BY x;\n\nDROP TABLE quorum1;\nDROP TABLE quorum2;\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
00732_quorum_insert_lost_part_zookeeper_long.sql,clickhouse,"[{'query': ""-- Tags: long, zookeeper, no-replicated-database\n-- Tag no-replicated-database: Fails due to additional replicas or shards\n\nSET send_logs_level = 'fatal';\n\nDROP TABLE IF EXISTS quorum1;\nDROP TABLE IF EXISTS quorum2;\n\nCREATE TABLE quorum1(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum_lost', '1') ORDER BY x PARTITION BY y;\nCREATE TABLE quorum2(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_00732/quorum_lost', '2') ORDER BY x PARTITION BY y;\n\nSET insert_quorum=2, insert_quorum_parallel=0;\nSET select_sequential_consistency=1;\n\nSET insert_quorum_timeout=0;\n\nSYSTEM STOP FETCHES quorum1;\n\nINSERT INTO quorum2 VALUES (1, '2018-11-15'); -- { serverError 319 }\n\nSELECT count(*) FROM quorum1;\nSELECT count(*) FROM quorum2;\n\nSET select_sequential_consistency=0;\n\nSELECT x FROM quorum2 ORDER BY x;\nSET select_sequential_consistency=1;\n\nSET insert_quorum_timeout=100;\n\nSYSTEM START FETCHES quorum1;\nSYSTEM SYNC REPLICA quorum1;\n\nSELECT x FROM quorum1 ORDER BY x;\nSELECT x FROM quorum2 ORDER BY x;\n\nDROP TABLE quorum1;\nDROP TABLE quorum2;\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 156 (line 5, col 2): FORMAT Native. Expected one of: string literal, literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- Tags: long, zookeeper, no-replicated-database\n-- Tag no-replicated-database: Fails due to additional replicas or shards\n\nSET send_logs_level = \'fatal\';\n\nDROP TABLE IF EXISTS quorum1;\nDROP TABLE IF EXISTS quorum2;\n\nCREATE TABLE quorum1(x UInt32, y Date) ENGINE ReplicatedMergeTree(\'/clickhouse/tables/{database}/test_00732/quorum_lost\', \'1\') ORDER BY x PARTITION BY y;\nCREATE TABLE quorum2(x UInt32, y Date) ENGINE ReplicatedMergeTree(\'/clickhouse/tables/{database}/test_00732/quorum_lost\', \'2\') ORDER BY x PARTITION BY y;\n\nSET insert_quorum=2, insert_quorum_parallel=0;\nSET select_sequential_consistency=1;\n\nSET insert_quorum_timeout=0;\n\nSYSTEM STOP FETCHES quorum1;\n\nINSERT INTO quorum2 VALUES (1, \'2018-11-15\'); -- { serverError 319 }\n\nSELECT count(*) FROM quorum1;\nSELECT count(*) FROM quorum2;\n\nSET select_sequential_consistency=0;\n\nSELECT x FROM quorum2 ORDER BY x;\nSET select_sequential_consistency=1;\n\nSET insert_quorum_timeout=100;\n\nSYSTEM START FETCHES quorum1;\nSYSTEM SYNC REPLICA quorum1;\n\nSELECT x FROM quorum1 ORDER BY x;\nSELECT x FROM quorum2 ORDER BY x;\n\nDROP TABLE quorum1;\nDROP TABLE quorum2;\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
00755_avg_value_size_hint_passing.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS size_hint;\nCREATE TABLE size_hint (s Array(String)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 1000, index_granularity_bytes = '10Mi';\n\nSET max_block_size = 1000;\nSET max_memory_usage = 1000000000;\nINSERT INTO size_hint SELECT arrayMap(x -> 'Hello', range(1000)) FROM numbers(10000);\n\nSET max_memory_usage = 100000000, max_threads = 2;\nSELECT count(), sum(length(s)) FROM size_hint;\n\nDROP TABLE size_hint;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS size_hint;\nCREATE TABLE size_hint (s Array(String)) ENGINE = MergeTree ORDER BY tuple() SETTINGS index_granularity = 1000, index_granularity_bytes = '10Mi';\n\nSET max_block_size = 1000;\nSET max_memory_usage = 1000000000;\nINSERT INTO size_hint SELECT arrayMap(x -> 'Hello', range(1000)) FROM numbers(10000);\n\nSET max_memory_usage = 100000000, max_threads = 2;\nSELECT count(), sum(length(s)) FROM size_hint;\n\nDROP TABLE size_hint;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
00833_sleep_overflow.sql,clickhouse,"[{'query': 'SELECT sleep(4295.967296); -- { serverError 160 }\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 26 (end of query) (line 1, col 26): ; -- { serverError 160 }\n\n FORMAT Native. , e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'SELECT sleep(4295.967296); -- { serverError 160 }\n': no such function: sleep"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
00836_indices_alter.sql,clickhouse,"[{'query': 'DROP TABLE IF EXISTS minmax_idx;\nDROP TABLE IF EXISTS minmax_idx2;\n\n\nCREATE TABLE minmax_idx\n(\n    u64 UInt64,\n    i32 Int32\n) ENGINE = MergeTree()\nORDER BY u64;\n\nINSERT INTO minmax_idx VALUES (1, 2);\n\nALTER TABLE minmax_idx ADD INDEX idx1 u64 * i32 TYPE minmax GRANULARITY 10;\nALTER TABLE minmax_idx ADD INDEX idx2 u64 + i32 TYPE minmax GRANULARITY 10;\nALTER TABLE minmax_idx ADD INDEX idx3 (u64 - i32) TYPE minmax GRANULARITY 10 AFTER idx1;\n\nSHOW CREATE TABLE minmax_idx;\n\nSELECT * FROM minmax_idx WHERE u64 * i32 = 2;\n\nINSERT INTO minmax_idx VALUES (1, 2);\nINSERT INTO minmax_idx VALUES (1, 2);\nINSERT INTO minmax_idx VALUES (1, 2);\nINSERT INTO minmax_idx VALUES (1, 2);\nINSERT INTO minmax_idx VALUES (1, 2);\n\nSELECT * FROM minmax_idx WHERE u64 * i32 = 2;\n\nALTER TABLE minmax_idx DROP INDEX idx1;\n\nSHOW CREATE TABLE minmax_idx;\n\nSELECT * FROM minmax_idx WHERE u64 * i32 = 2;\n\nALTER TABLE minmax_idx DROP INDEX idx2;\nALTER TABLE minmax_idx DROP INDEX idx3;\n\nSHOW CREATE TABLE minmax_idx;\n\nALTER TABLE minmax_idx ADD INDEX idx1 (u64 * i32) TYPE minmax GRANULARITY 10;\n\nSHOW CREATE TABLE minmax_idx;\n\nSELECT * FROM minmax_idx WHERE u64 * i32 = 2;\n\n\nCREATE TABLE minmax_idx2\n(\n    u64 UInt64,\n    i32 Int32,\n    INDEX idx1 (u64 + i32) TYPE minmax GRANULARITY 10,\n    INDEX idx2 u64 * i32 TYPE minmax GRANULARITY 10\n) ENGINE = MergeTree()\nORDER BY u64;\n\nINSERT INTO minmax_idx2 VALUES (1, 2);\nINSERT INTO minmax_idx2 VALUES (1, 2);\n\nSELECT * FROM minmax_idx2 WHERE u64 * i32 = 2;\n\nALTER TABLE minmax_idx2 DROP INDEX idx1, DROP INDEX idx2;\n\nSHOW CREATE TABLE minmax_idx2;\n\nSELECT * FROM minmax_idx2 WHERE u64 * i32 = 2;\n\nDROP TABLE minmax_idx;\nDROP TABLE minmax_idx2;\n', 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS minmax_idx;\nDROP TABLE IF EXISTS minmax_idx2;\n\n\nCREATE TABLE minmax_idx\n(\n    u64 UInt64,\n    i32 Int32\n) ENGINE = MergeTree()\nORDER BY u64;\n\nINSERT INTO minmax_idx VALUES (1, 2);\n\nALTER TABLE minmax_idx ADD INDEX idx1 u64 * i32 TYPE minmax GRANULARITY 10;\nALTER TABLE minmax_idx ADD INDEX idx2 u64 + i32 TYPE minmax GRANULARITY 10;\nALTER TABLE minmax_idx ADD INDEX idx3 (u64 - i32) TYPE minmax GRANULARITY 10 AFTER idx1;\n\nSHOW CREATE TABLE minmax_idx;\n\nSELECT * FROM minmax_idx WHERE u64 * i32 = 2;\n\nINSERT INTO minmax_idx VALUES (1, 2);\nINSERT INTO minmax_idx VALUES (1, 2);\nINSERT INTO minmax_idx VALUES (1, 2);\nINSERT INTO minmax_idx VALUES (1, 2);\nINSERT INTO minmax_idx VALUES (1, 2);\n\nSELECT * FROM minmax_idx WHERE u64 * i32 = 2;\n\nALTER TABLE minmax_idx DROP INDEX idx1;\n\nSHOW CREATE TABLE minmax_idx;\n\nSELECT * FROM minmax_idx WHERE u64 * i32 = 2;\n\nALTER TABLE minmax_idx DROP INDEX idx2;\nALTER TABLE minmax_idx DROP INDEX idx3;\n\nSHOW CREATE TABLE minmax_idx;\n\nALTER TABLE minmax_idx ADD INDEX idx1 (u64 * i32) TYPE minmax GRANULARITY 10;\n\nSHOW CREATE TABLE minmax_idx;\n\nSELECT * FROM minmax_idx WHERE u64 * i32 = 2;\n\n\nCREATE TABLE minmax_idx2\n(\n    u64 UInt64,\n    i32 Int32,\n    INDEX idx1 (u64 + i32) TYPE minmax GRANULARITY 10,\n    INDEX idx2 u64 * i32 TYPE minmax GRANULARITY 10\n) ENGINE = MergeTree()\nORDER BY u64;\n\nINSERT INTO minmax_idx2 VALUES (1, 2);\nINSERT INTO minmax_idx2 VALUES (1, 2);\n\nSELECT * FROM minmax_idx2 WHERE u64 * i32 = 2;\n\nALTER TABLE minmax_idx2 DROP INDEX idx1, DROP INDEX idx2;\n\nSHOW CREATE TABLE minmax_idx2;\n\nSELECT * FROM minmax_idx2 WHERE u64 * i32 = 2;\n\nDROP TABLE minmax_idx;\nDROP TABLE minmax_idx2;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
00852_any_join_nulls.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS table1;\nDROP TABLE IF EXISTS table2;\nCREATE TABLE table1 ( id String ) ENGINE = Log;\nCREATE TABLE table2 ( parent_id String ) ENGINE = Log;\n\ninsert into table1 values ('1');\n\nSELECT table2.parent_id = '', isNull(table2.parent_id)\nFROM table1 ANY LEFT JOIN table2 ON table1.id = table2.parent_id;\n\nSET join_use_nulls = 1;\n\nSELECT table2.parent_id = '', isNull(table2.parent_id)\nFROM table1 ANY LEFT JOIN table2 ON table1.id = table2.parent_id;\n\nDROP TABLE table1;\nDROP TABLE table2;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS table1;\nDROP TABLE IF EXISTS table2;\nCREATE TABLE table1 ( id String ) ENGINE = Log;\nCREATE TABLE table2 ( parent_id String ) ENGINE = Log;\n\ninsert into table1 values ('1');\n\nSELECT table2.parent_id = '', isNull(table2.parent_id)\nFROM table1 ANY LEFT JOIN table2 ON table1.id = table2.parent_id;\n\nSET join_use_nulls = 1;\n\nSELECT table2.parent_id = '', isNull(table2.parent_id)\nFROM table1 ANY LEFT JOIN table2 ON table1.id = table2.parent_id;\n\nDROP TABLE table1;\nDROP TABLE table2;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
00950_test_gorilla_codec.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS codecTest;\n\nSET cross_to_inner_join_rewrite = 1;\n\nCREATE TABLE codecTest (\n    key      UInt64,\n    name     String,\n    ref_valueF64 Float64,\n    ref_valueF32 Float32,\n    valueF64 Float64  CODEC(Gorilla),\n    valueF32 Float32  CODEC(Gorilla)\n) Engine = MergeTree ORDER BY key;\n\n-- best case - same value\nINSERT INTO codecTest (key, name, ref_valueF64, valueF64, ref_valueF32, valueF32)\n\tSELECT number AS n, 'e()', e() AS v, v, v, v FROM system.numbers LIMIT 1, 100;\n\n-- good case - values that grow insignificantly\nINSERT INTO codecTest (key, name, ref_valueF64, valueF64, ref_valueF32, valueF32)\n\tSELECT number AS n, 'log2(n)', log2(n) AS v, v, v, v FROM system.numbers LIMIT 101, 100;\n\n-- bad case - values differ significantly\nINSERT INTO codecTest (key, name, ref_valueF64, valueF64, ref_valueF32, valueF32)\n\tSELECT number AS n, 'n*sqrt(n)', n*sqrt(n) AS v, v, v, v FROM system.numbers LIMIT 201, 100;\n\n-- worst case - almost like a random values\nINSERT INTO codecTest (key, name, ref_valueF64, valueF64, ref_valueF32, valueF32)\n\tSELECT number AS n, 'sin(n*n*n)*n', sin(n * n * n * n* n) AS v, v, v, v FROM system.numbers LIMIT 301, 100;\n\n\n-- These floating-point values are expected to be BINARY equal, so comparing by-value is Ok here.\n\n-- referencing previous row key, value, and case name to simplify debugging.\nSELECT 'F64';\nSELECT\n\tc1.key, c1.name,\n\tc1.ref_valueF64, c1.valueF64, c1.ref_valueF64 - c1.valueF64 AS dF64,\n\t'prev:',\n\tc2.key, c2.ref_valueF64\nFROM\n\tcodecTest as c1, codecTest as c2\nWHERE\n\tdF64 != 0\nAND\n\tc2.key = c1.key - 1\nLIMIT 10;\n\n\nSELECT 'F32';\nSELECT\n\tc1.key, c1.name,\n\tc1.ref_valueF32, c1.valueF32, c1.ref_valueF32 - c1.valueF32 AS dF32,\n\t'prev:',\n\tc2.key, c2.ref_valueF32\nFROM\n\tcodecTest as c1, codecTest as c2\nWHERE\n\tdF32 != 0\nAND\n\tc2.key = c1.key - 1\nLIMIT 10;\n\nDROP TABLE IF EXISTS codecTest;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS codecTest;\n\nSET cross_to_inner_join_rewrite = 1;\n\nCREATE TABLE codecTest (\n    key      UInt64,\n    name     String,\n    ref_valueF64 Float64,\n    ref_valueF32 Float32,\n    valueF64 Float64  CODEC(Gorilla),\n    valueF32 Float32  CODEC(Gorilla)\n) Engine = MergeTree ORDER BY key;\n\n-- best case - same value\nINSERT INTO codecTest (key, name, ref_valueF64, valueF64, ref_valueF32, valueF32)\n\tSELECT number AS n, 'e()', e() AS v, v, v, v FROM system.numbers LIMIT 1, 100;\n\n-- good case - values that grow insignificantly\nINSERT INTO codecTest (key, name, ref_valueF64, valueF64, ref_valueF32, valueF32)\n\tSELECT number AS n, 'log2(n)', log2(n) AS v, v, v, v FROM system.numbers LIMIT 101, 100;\n\n-- bad case - values differ significantly\nINSERT INTO codecTest (key, name, ref_valueF64, valueF64, ref_valueF32, valueF32)\n\tSELECT number AS n, 'n*sqrt(n)', n*sqrt(n) AS v, v, v, v FROM system.numbers LIMIT 201, 100;\n\n-- worst case - almost like a random values\nINSERT INTO codecTest (key, name, ref_valueF64, valueF64, ref_valueF32, valueF32)\n\tSELECT number AS n, 'sin(n*n*n)*n', sin(n * n * n * n* n) AS v, v, v, v FROM system.numbers LIMIT 301, 100;\n\n\n-- These floating-point values are expected to be BINARY equal, so comparing by-value is Ok here.\n\n-- referencing previous row key, value, and case name to simplify debugging.\nSELECT 'F64';\nSELECT\n\tc1.key, c1.name,\n\tc1.ref_valueF64, c1.valueF64, c1.ref_valueF64 - c1.valueF64 AS dF64,\n\t'prev:',\n\tc2.key, c2.ref_valueF64\nFROM\n\tcodecTest as c1, codecTest as c2\nWHERE\n\tdF64 != 0\nAND\n\tc2.key = c1.key - 1\nLIMIT 10;\n\n\nSELECT 'F32';\nSELECT\n\tc1.key, c1.name,\n\tc1.ref_valueF32, c1.valueF32, c1.ref_valueF32 - c1.valueF32 AS dF32,\n\t'prev:',\n\tc2.key, c2.ref_valueF32\nFROM\n\tcodecTest as c1, codecTest as c2\nWHERE\n\tdF32 != 0\nAND\n\tc2.key = c1.key - 1\nLIMIT 10;\n\nDROP TABLE IF EXISTS codecTest;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
01042_check_query_and_last_granule_size.sql,clickhouse,"[{'query': 'SET check_query_single_value_result = 0;\nDROP TABLE IF EXISTS check_query_test;\n\nCREATE TABLE check_query_test (SomeKey UInt64, SomeValue String) ENGINE = MergeTree() ORDER BY SomeKey SETTINGS min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;\n\n-- Number of rows in last granule should be equals to granularity.\n-- Rows in this table are short, so granularity will be 8192.\nINSERT INTO check_query_test SELECT number, toString(number) FROM system.numbers LIMIT 81920;\n\nCHECK TABLE check_query_test SETTINGS max_threads = 1;\n\nOPTIMIZE TABLE check_query_test;\n\nCHECK TABLE check_query_test SETTINGS max_threads = 1;\n\nDROP TABLE IF EXISTS check_query_test;\n\nDROP TABLE IF EXISTS check_query_test_non_adaptive;\n\nCREATE TABLE check_query_test_non_adaptive (SomeKey UInt64, SomeValue String) ENGINE = MergeTree() ORDER BY SomeKey SETTINGS index_granularity_bytes = 0, min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;\n\nINSERT INTO check_query_test_non_adaptive SELECT number, toString(number) FROM system.numbers LIMIT 81920;\n\nCHECK TABLE check_query_test_non_adaptive SETTINGS max_threads = 1;\n\nOPTIMIZE TABLE check_query_test_non_adaptive;\n\nCHECK TABLE check_query_test_non_adaptive SETTINGS max_threads = 1;\n\nINSERT INTO check_query_test_non_adaptive SELECT number, toString(number) FROM system.numbers LIMIT 77;\n\nCHECK TABLE check_query_test_non_adaptive SETTINGS max_threads = 1;\n\nOPTIMIZE TABLE check_query_test_non_adaptive;\n\nCHECK TABLE check_query_test_non_adaptive SETTINGS max_threads = 1;\n\nDROP TABLE IF EXISTS check_query_test_non_adaptive;\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 42 (line 2, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'SET check_query_single_value_result = 0;\nDROP TABLE IF EXISTS check_query_test;\n\nCREATE TABLE check_query_test (SomeKey UInt64, SomeValue String) ENGINE = MergeTree() ORDER BY SomeKey SETTINGS min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;\n\n-- Number of rows in last granule should be equals to granularity.\n-- Rows in this table are short, so granularity will be 8192.\nINSERT INTO check_query_test SELECT number, toString(number) FROM system.numbers LIMIT 81920;\n\nCHECK TABLE check_query_test SETTINGS max_threads = 1;\n\nOPTIMIZE TABLE check_query_test;\n\nCHECK TABLE check_query_test SETTINGS max_threads = 1;\n\nDROP TABLE IF EXISTS check_query_test;\n\nDROP TABLE IF EXISTS check_query_test_non_adaptive;\n\nCREATE TABLE check_query_test_non_adaptive (SomeKey UInt64, SomeValue String) ENGINE = MergeTree() ORDER BY SomeKey SETTINGS index_granularity_bytes = 0, min_bytes_for_wide_part = 0, min_rows_for_wide_part = 0;\n\nINSERT INTO check_query_test_non_adaptive SELECT number, toString(number) FROM system.numbers LIMIT 81920;\n\nCHECK TABLE check_query_test_non_adaptive SETTINGS max_threads = 1;\n\nOPTIMIZE TABLE check_query_test_non_adaptive;\n\nCHECK TABLE check_query_test_non_adaptive SETTINGS max_threads = 1;\n\nINSERT INTO check_query_test_non_adaptive SELECT number, toString(number) FROM system.numbers LIMIT 77;\n\nCHECK TABLE check_query_test_non_adaptive SETTINGS max_threads = 1;\n\nOPTIMIZE TABLE check_query_test_non_adaptive;\n\nCHECK TABLE check_query_test_non_adaptive SETTINGS max_threads = 1;\n\nDROP TABLE IF EXISTS check_query_test_non_adaptive;\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
01074_h3_range_check.sql,clickhouse,"[{'query': '-- Tags: no-fasttest\n\nSELECT h3EdgeLengthM(100); -- { serverError 69 }\nSELECT h3HexAreaM2(100); -- { serverError 69 }\nSELECT h3HexAreaKm2(100); -- { serverError 69 }\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 404)\n Code: 46, e.displayText() = DB::Exception: Unknown function h3EdgeLengthM, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql '-- Tags: no-fasttest\n\nSELECT h3EdgeLengthM(100); -- { serverError 69 }\nSELECT h3HexAreaM2(100); -- { serverError 69 }\nSELECT h3HexAreaKm2(100); -- { serverError 69 }\n': no such function: h3EdgeLengthM"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
01087_storage_generate.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS test_table;\nCREATE TABLE test_table(a Array(Int8), d Decimal32(4), c Tuple(DateTime64(3), UUID)) ENGINE = GenerateRandom();\nSELECT COUNT(*) FROM (SELECT * FROM test_table LIMIT 100);\n\nDROP TABLE IF EXISTS test_table;\n\nSELECT '-';\n\nDROP TABLE IF EXISTS test_table_2;\nCREATE TABLE test_table_2(a Array(Int8), d Decimal32(4), c Tuple(DateTime64(3, 'UTC'), UUID)) ENGINE = GenerateRandom(10, 5, 3);\n\nSELECT * FROM test_table_2 LIMIT 100;\n\nSELECT '-';\n\nDROP TABLE IF EXISTS test_table_2;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS test_table;\nCREATE TABLE test_table(a Array(Int8), d Decimal32(4), c Tuple(DateTime64(3), UUID)) ENGINE = GenerateRandom();\nSELECT COUNT(*) FROM (SELECT * FROM test_table LIMIT 100);\n\nDROP TABLE IF EXISTS test_table;\n\nSELECT '-';\n\nDROP TABLE IF EXISTS test_table_2;\nCREATE TABLE test_table_2(a Array(Int8), d Decimal32(4), c Tuple(DateTime64(3, 'UTC'), UUID)) ENGINE = GenerateRandom(10, 5, 3);\n\nSELECT * FROM test_table_2 LIMIT 100;\n\nSELECT '-';\n\nDROP TABLE IF EXISTS test_table_2;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
01106_const_fixed_string_like.sql,clickhouse,"[{'query': ""SELECT CAST('hello' AS FixedString(5)) LIKE 'hello';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'world';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'xyz';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'hell';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'orld';\n\nSELECT CAST('hello' AS FixedString(5)) LIKE '%hello%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%world%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%xyz%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%hell%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%orld%';\n\nSELECT CAST('hello' AS FixedString(5)) LIKE '%hello';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%world';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%xyz';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%hell';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%orld';\n\nSELECT CAST('hello' AS FixedString(5)) LIKE 'hello%';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'world%';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'xyz%';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'hell%';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'orld%';\n\nSELECT CAST('hello' AS FixedString(5)) LIKE '%he%o%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%w%ld%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%x%z%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%hell_';\nSELECT CAST('hello' AS FixedString(5)) LIKE '_orld%';\n\nSELECT CAST('hello' AS FixedString(5)) LIKE '%he__o%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%w__ld%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%x%z%';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'hell_';\nSELECT CAST('hello' AS FixedString(5)) LIKE '_orld';\n\nSELECT CAST('hello' AS FixedString(5)) LIKE 'helloworld';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%helloworld%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%elloworl%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%ow%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%o%w%';\n\nSELECT CAST('hello' AS FixedString(5)) LIKE '%o%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%l%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%l%o%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%o%l%';\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 500)\n Code: 43, e.displayText() = DB::Exception: Illegal type FixedString(5) of argument of function like, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'SELECT CAST('hello' AS FixedString(5)) LIKE 'hello';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'world';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'xyz';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'hell';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'orld';\n\nSELECT CAST('hello' AS FixedString(5)) LIKE '%hello%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%world%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%xyz%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%hell%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%orld%';\n\nSELECT CAST('hello' AS FixedString(5)) LIKE '%hello';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%world';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%xyz';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%hell';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%orld';\n\nSELECT CAST('hello' AS FixedString(5)) LIKE 'hello%';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'world%';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'xyz%';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'hell%';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'orld%';\n\nSELECT CAST('hello' AS FixedString(5)) LIKE '%he%o%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%w%ld%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%x%z%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%hell_';\nSELECT CAST('hello' AS FixedString(5)) LIKE '_orld%';\n\nSELECT CAST('hello' AS FixedString(5)) LIKE '%he__o%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%w__ld%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%x%z%';\nSELECT CAST('hello' AS FixedString(5)) LIKE 'hell_';\nSELECT CAST('hello' AS FixedString(5)) LIKE '_orld';\n\nSELECT CAST('hello' AS FixedString(5)) LIKE 'helloworld';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%helloworld%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%elloworl%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%ow%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%o%w%';\n\nSELECT CAST('hello' AS FixedString(5)) LIKE '%o%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%l%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%l%o%';\nSELECT CAST('hello' AS FixedString(5)) LIKE '%o%l%';\n': You can only execute one statement at a time."", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
01129_dict_get_join_lose_constness.sql,clickhouse,"[{'query': ""-- Tags: no-parallel\n\nDROP DICTIONARY IF EXISTS system.dict1;\n\nCREATE DICTIONARY IF NOT EXISTS system.dict1\n(\n    bytes_allocated UInt64,\n    element_count Int32,\n    loading_start_time DateTime\n)\nPRIMARY KEY bytes_allocated\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' PASSWORD '' TABLE 'dictionaries' DB 'system'))\nLIFETIME(0)\nLAYOUT(hashed());\n\nSELECT join_key,\n       toTimeZone(dictGetDateTime('system.dict1', 'loading_start_time', toUInt64(dict_key)), 'UTC') AS datetime\nFROM (select dictGetInt32('system.dict1', 'element_count', toUInt64(dict_key)) AS join_key, 1 AS dict_key) js1\nLEFT JOIN (SELECT toInt32(2) AS join_key) js2\nUSING (join_key)\nWHERE now() >= datetime;\n\nDROP DICTIONARY IF EXISTS system.dict1;\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 28 (line 3, col 6): DICTIONARY IF EXISTS system.dict1\n FORMAT Native. Expected one of: DATABASE, TEMPORARY, TABLE, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- Tags: no-parallel\n\nDROP DICTIONARY IF EXISTS system.dict1;\n\nCREATE DICTIONARY IF NOT EXISTS system.dict1\n(\n    bytes_allocated UInt64,\n    element_count Int32,\n    loading_start_time DateTime\n)\nPRIMARY KEY bytes_allocated\nSOURCE(CLICKHOUSE(HOST \'localhost\' PORT tcpPort() USER \'default\' PASSWORD \'\' TABLE \'dictionaries\' DB \'system\'))\nLIFETIME(0)\nLAYOUT(hashed());\n\nSELECT join_key,\n       toTimeZone(dictGetDateTime(\'system.dict1\', \'loading_start_time\', toUInt64(dict_key)), \'UTC\') AS datetime\nFROM (select dictGetInt32(\'system.dict1\', \'element_count\', toUInt64(dict_key)) AS join_key, 1 AS dict_key) js1\nLEFT JOIN (SELECT toInt32(2) AS join_key) js2\nUSING (join_key)\nWHERE now() >= datetime;\n\nDROP DICTIONARY IF EXISTS system.dict1;\n\': near ""DICTIONARY"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
01141_join_get_negative.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS t1;\nDROP TABLE IF EXISTS t2;\n\nCREATE TABLE t1 (`s` String, `x` Array(UInt8), `k` UInt64) ENGINE = Join(ANY, LEFT, k);\nCREATE TABLE t2 (`s` String, `x` Array(UInt8), `k` UInt64) ENGINE = Join(ANY, INNER, k);\n\nSELECT joinGet('t1', '', number) FROM numbers(2); -- { serverError 16 }\nSELECT joinGet('t2', 's', number) FROM numbers(2); -- { serverError 264 }\n\nDROP TABLE t1;\nDROP TABLE t2;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS t1;\nDROP TABLE IF EXISTS t2;\n\nCREATE TABLE t1 (`s` String, `x` Array(UInt8), `k` UInt64) ENGINE = Join(ANY, LEFT, k);\nCREATE TABLE t2 (`s` String, `x` Array(UInt8), `k` UInt64) ENGINE = Join(ANY, INNER, k);\n\nSELECT joinGet('t1', '', number) FROM numbers(2); -- { serverError 16 }\nSELECT joinGet('t2', 's', number) FROM numbers(2); -- { serverError 264 }\n\nDROP TABLE t1;\nDROP TABLE t2;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
01262_low_cardinality_remove.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS testView;\nDROP TABLE IF EXISTS testTable;\n\nCREATE TABLE IF NOT EXISTS testTable (\n A LowCardinality(String), -- like voter\n B Int64\n) ENGINE MergeTree()\nORDER BY (A);\n\nINSERT INTO testTable VALUES ('A', 1),('B',2),('C',3);\n\nCREATE VIEW testView AS \nSELECT\n A as ALow, -- like account\n B\nFROM\n   testTable;\n\nSELECT CAST(ALow, 'String') AS AStr\nFROM testView\nGROUP BY AStr ORDER BY AStr;\n\nDROP TABLE testTable;\n\nCREATE TABLE IF NOT EXISTS testTable (\n A String, -- like voter\n B Int64\n) ENGINE MergeTree()\nORDER BY (A);\n\nSELECT CAST(ALow, 'String') AS AStr\nFROM testView\nGROUP BY AStr ORDER BY AStr;\n\nINSERT INTO testTable VALUES ('A', 1),('B',2),('C',3);\n\nSELECT CAST(ALow, 'String') AS AStr\nFROM testView\nGROUP BY AStr ORDER BY AStr;\n\nDROP TABLE IF EXISTS testView;\nDROP TABLE IF EXISTS testTable;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS testView;\nDROP TABLE IF EXISTS testTable;\n\nCREATE TABLE IF NOT EXISTS testTable (\n A LowCardinality(String), -- like voter\n B Int64\n) ENGINE MergeTree()\nORDER BY (A);\n\nINSERT INTO testTable VALUES ('A', 1),('B',2),('C',3);\n\nCREATE VIEW testView AS \nSELECT\n A as ALow, -- like account\n B\nFROM\n   testTable;\n\nSELECT CAST(ALow, 'String') AS AStr\nFROM testView\nGROUP BY AStr ORDER BY AStr;\n\nDROP TABLE testTable;\n\nCREATE TABLE IF NOT EXISTS testTable (\n A String, -- like voter\n B Int64\n) ENGINE MergeTree()\nORDER BY (A);\n\nSELECT CAST(ALow, 'String') AS AStr\nFROM testView\nGROUP BY AStr ORDER BY AStr;\n\nINSERT INTO testTable VALUES ('A', 1),('B',2),('C',3);\n\nSELECT CAST(ALow, 'String') AS AStr\nFROM testView\nGROUP BY AStr ORDER BY AStr;\n\nDROP TABLE IF EXISTS testView;\nDROP TABLE IF EXISTS testTable;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
01302_polygons_distance.sql,clickhouse,"[{'query': 'select polygonsDistanceCartesian([[[(0, 0),(0, 3),(1, 2.9),(2, 2.6),(2.6, 2),(2.9, 1),(3, 0),(0, 0)]]], [[[(1., 1.),(1., 4.),(4., 4.),(4., 1.),(1., 1.)]]]);\nselect polygonsDistanceCartesian([[[(0, 0), (0, 0.1), (0.1, 0.1), (0.1, 0)]]], [[[(1., 1.),(1., 4.),(4., 4.),(4., 1.),(1., 1.)]]]);\nselect polygonsDistanceSpherical([[[(23.725750, 37.971536)]]], [[[(4.3826169, 50.8119483)]]]);\n\ndrop table if exists polygon_01302;\ncreate table polygon_01302 (x Array(Array(Array(Tuple(Float64, Float64)))), y Array(Array(Array(Tuple(Float64, Float64))))) engine=Memory();\ninsert into polygon_01302 values ([[[(23.725750, 37.971536)]]], [[[(4.3826169, 50.8119483)]]]);\nselect polygonsDistanceSpherical(x, y) from polygon_01302;\n\ndrop table polygon_01302;\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 404)\n Code: 46, e.displayText() = DB::Exception: Unknown function polygonsDistanceCartesian, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'select polygonsDistanceCartesian([[[(0, 0),(0, 3),(1, 2.9),(2, 2.6),(2.6, 2),(2.9, 1),(3, 0),(0, 0)]]], [[[(1., 1.),(1., 4.),(4., 4.),(4., 1.),(1., 1.)]]]);\nselect polygonsDistanceCartesian([[[(0, 0), (0, 0.1), (0.1, 0.1), (0.1, 0)]]], [[[(1., 1.),(1., 4.),(4., 4.),(4., 1.),(1., 1.)]]]);\nselect polygonsDistanceSpherical([[[(23.725750, 37.971536)]]], [[[(4.3826169, 50.8119483)]]]);\n\ndrop table if exists polygon_01302;\ncreate table polygon_01302 (x Array(Array(Array(Tuple(Float64, Float64)))), y Array(Array(Array(Tuple(Float64, Float64))))) engine=Memory();\ninsert into polygon_01302 values ([[[(23.725750, 37.971536)]]], [[[(4.3826169, 50.8119483)]]]);\nselect polygonsDistanceSpherical(x, y) from polygon_01302;\n\ndrop table polygon_01302;\n\': unrecognized token: ""]""', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
01353_neighbor_overflow.sql,clickhouse,"[{'query': 'SET allow_deprecated_functions = 1;\nSELECT neighbor(toString(number), -9223372036854775808) FROM numbers(100); -- { serverError 69 }\nWITH neighbor(toString(number), toInt64(rand64())) AS x SELECT * FROM system.numbers WHERE NOT ignore(x); -- { serverError 69 }\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 37 (line 2, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'SET allow_deprecated_functions = 1;\nSELECT neighbor(toString(number), -9223372036854775808) FROM numbers(100); -- { serverError 69 }\nWITH neighbor(toString(number), toInt64(rand64())) AS x SELECT * FROM system.numbers WHERE NOT ignore(x); -- { serverError 69 }\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
01391_join_on_dict_crash.sql,clickhouse,"[{'query': ""-- Tags: no-parallel\n\nDROP DATABASE IF EXISTS db_01391;\nCREATE DATABASE db_01391;\nUSE db_01391;\n\nDROP TABLE IF EXISTS t;\nDROP TABLE IF EXISTS d_src;\nDROP DICTIONARY IF EXISTS d;\n\nCREATE TABLE t (click_city_id UInt32, click_country_id UInt32) Engine = Memory;\nCREATE TABLE d_src (id UInt64, country_id UInt8, name String) Engine = Memory;\n\nINSERT INTO t VALUES (0, 0);\nINSERT INTO d_src VALUES (0, 0, 'n');\n\nCREATE DICTIONARY d (id UInt32, country_id UInt8, name String)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST 'localhost' PORT tcpPort() USER 'default' DB 'db_01391' table 'd_src'))\nLIFETIME(MIN 1 MAX 1)\nLAYOUT(HASHED());\n\nSELECT click_country_id FROM t AS cc LEFT JOIN d ON toUInt32(d.id) = cc.click_city_id;\nSELECT click_country_id FROM t AS cc LEFT JOIN d ON d.country_id < 99 AND d.id = cc.click_city_id;\n\nDROP DICTIONARY d;\nDROP TABLE t;\nDROP TABLE d_src;\nDROP DATABASE IF EXISTS db_01391;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- Tags: no-parallel\n\nDROP DATABASE IF EXISTS db_01391;\nCREATE DATABASE db_01391;\nUSE db_01391;\n\nDROP TABLE IF EXISTS t;\nDROP TABLE IF EXISTS d_src;\nDROP DICTIONARY IF EXISTS d;\n\nCREATE TABLE t (click_city_id UInt32, click_country_id UInt32) Engine = Memory;\nCREATE TABLE d_src (id UInt64, country_id UInt8, name String) Engine = Memory;\n\nINSERT INTO t VALUES (0, 0);\nINSERT INTO d_src VALUES (0, 0, \'n\');\n\nCREATE DICTIONARY d (id UInt32, country_id UInt8, name String)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(HOST \'localhost\' PORT tcpPort() USER \'default\' DB \'db_01391\' table \'d_src\'))\nLIFETIME(MIN 1 MAX 1)\nLAYOUT(HASHED());\n\nSELECT click_country_id FROM t AS cc LEFT JOIN d ON toUInt32(d.id) = cc.click_city_id;\nSELECT click_country_id FROM t AS cc LEFT JOIN d ON d.country_id < 99 AND d.id = cc.click_city_id;\n\nDROP DICTIONARY d;\nDROP TABLE t;\nDROP TABLE d_src;\nDROP DATABASE IF EXISTS db_01391;\n\': near ""DATABASE"": syntax error', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
01413_if_array_uuid.sql,clickhouse,"[{'query': ""SELECT if(number % 2 = 0, [toUUID('00000000-e1fe-11e9-bb8f-853d60c00749')], [toUUID('11111111-e1fe-11e9-bb8f-853d60c00749')]) FROM numbers(5);\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 142 (end of query) (line 1, col 142): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'SELECT if(number % 2 = 0, [toUUID('00000000-e1fe-11e9-bb8f-853d60c00749')], [toUUID('11111111-e1fe-11e9-bb8f-853d60c00749')]) FROM numbers(5);\n': no such table: numbers"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
01441_array_combinator.sql,clickhouse,"[{'query': 'SELECT number % 100 AS k, sumArray(emptyArrayUInt8()) AS v FROM numbers(10) GROUP BY k ORDER BY k;\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 98 (end of query) (line 1, col 98): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'SELECT number % 100 AS k, sumArray(emptyArrayUInt8()) AS v FROM numbers(10) GROUP BY k ORDER BY k;\n': no such table: numbers"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
01451_replicated_detach_drop_part_long.sql,clickhouse,"[{'query': ""-- Tags: long, replica, no-replicated-database\n-- Tag no-replicated-database: Fails due to additional replicas or shards\n\nSET replication_alter_partitions_sync = 2;\n\nDROP TABLE IF EXISTS replica1 SYNC;\nDROP TABLE IF EXISTS replica2 SYNC;\n\nCREATE TABLE replica1 (v UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/'||currentDatabase()||'test/01451/attach', 'r1') order by tuple() settings max_replicated_merges_in_queue = 0;\nCREATE TABLE replica2 (v UInt8) ENGINE = ReplicatedMergeTree('/clickhouse/tables/{database}/'||currentDatabase()||'test/01451/attach', 'r2') order by tuple() settings max_replicated_merges_in_queue = 0;\n\nINSERT INTO replica1 SETTINGS insert_keeper_fault_injection_probability=0 VALUES (0);\nINSERT INTO replica1 SETTINGS insert_keeper_fault_injection_probability=0 VALUES (1);\nINSERT INTO replica1 SETTINGS insert_keeper_fault_injection_probability=0 VALUES (2);\n\nALTER TABLE replica1 DETACH PART 'all_100_100_0'; -- { serverError 232 }\n\nSELECT v FROM replica1 ORDER BY v;\n\nSYSTEM SYNC REPLICA replica2;\nALTER TABLE replica2 DETACH PART 'all_1_1_0';\n\nSELECT v FROM replica1 ORDER BY v;\n\nSELECT name FROM system.detached_parts WHERE table = 'replica2' AND database = currentDatabase();\n\nALTER TABLE replica2 ATTACH PART 'all_1_1_0' SETTINGS insert_keeper_fault_injection_probability=0;\n\nSYSTEM SYNC REPLICA replica1;\nSELECT v FROM replica1 ORDER BY v;\n\nSELECT name FROM system.detached_parts WHERE table = 'replica2' AND database = currentDatabase();\n\nSELECT '-- drop part --';\n\nALTER TABLE replica1 DROP PART 'all_3_3_0';\n\nALTER TABLE replica1 ATTACH PART 'all_3_3_0'; -- { serverError 233 }\n\nSELECT v FROM replica1 ORDER BY v;\n\nSELECT '-- resume merges --';\n\nALTER TABLE replica1 MODIFY SETTING max_replicated_merges_in_queue = 1;\nOPTIMIZE TABLE replica1 FINAL;\n\nSELECT v FROM replica1 ORDER BY v;\n\nSELECT name FROM system.parts WHERE table = 'replica2' AND active AND database = currentDatabase();\n\nDROP TABLE replica1 SYNC;\nDROP TABLE replica2 SYNC;\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 166 (line 5, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- Tags: long, replica, no-replicated-database\n-- Tag no-replicated-database: Fails due to additional replicas or shards\n\nSET replication_alter_partitions_sync = 2;\n\nDROP TABLE IF EXISTS replica1 SYNC;\nDROP TABLE IF EXISTS replica2 SYNC;\n\nCREATE TABLE replica1 (v UInt8) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/{database}/\'||currentDatabase()||\'test/01451/attach\', \'r1\') order by tuple() settings max_replicated_merges_in_queue = 0;\nCREATE TABLE replica2 (v UInt8) ENGINE = ReplicatedMergeTree(\'/clickhouse/tables/{database}/\'||currentDatabase()||\'test/01451/attach\', \'r2\') order by tuple() settings max_replicated_merges_in_queue = 0;\n\nINSERT INTO replica1 SETTINGS insert_keeper_fault_injection_probability=0 VALUES (0);\nINSERT INTO replica1 SETTINGS insert_keeper_fault_injection_probability=0 VALUES (1);\nINSERT INTO replica1 SETTINGS insert_keeper_fault_injection_probability=0 VALUES (2);\n\nALTER TABLE replica1 DETACH PART \'all_100_100_0\'; -- { serverError 232 }\n\nSELECT v FROM replica1 ORDER BY v;\n\nSYSTEM SYNC REPLICA replica2;\nALTER TABLE replica2 DETACH PART \'all_1_1_0\';\n\nSELECT v FROM replica1 ORDER BY v;\n\nSELECT name FROM system.detached_parts WHERE table = \'replica2\' AND database = currentDatabase();\n\nALTER TABLE replica2 ATTACH PART \'all_1_1_0\' SETTINGS insert_keeper_fault_injection_probability=0;\n\nSYSTEM SYNC REPLICA replica1;\nSELECT v FROM replica1 ORDER BY v;\n\nSELECT name FROM system.detached_parts WHERE table = \'replica2\' AND database = currentDatabase();\n\nSELECT \'-- drop part --\';\n\nALTER TABLE replica1 DROP PART \'all_3_3_0\';\n\nALTER TABLE replica1 ATTACH PART \'all_3_3_0\'; -- { serverError 233 }\n\nSELECT v FROM replica1 ORDER BY v;\n\nSELECT \'-- resume merges --\';\n\nALTER TABLE replica1 MODIFY SETTING max_replicated_merges_in_queue = 1;\nOPTIMIZE TABLE replica1 FINAL;\n\nSELECT v FROM replica1 ORDER BY v;\n\nSELECT name FROM system.parts WHERE table = \'replica2\' AND active AND database = currentDatabase();\n\nDROP TABLE replica1 SYNC;\nDROP TABLE replica2 SYNC;\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
01514_input_format_csv_enum_as_number_setting.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS table_with_enum_column_for_csv_insert;\n\nCREATE TABLE table_with_enum_column_for_csv_insert (\n    Id Int32,\n    Value Enum('ef' = 1, 'es' = 2)\n) ENGINE=Memory();\n\nSET input_format_csv_enum_as_number = 1;\n\nINSERT INTO table_with_enum_column_for_csv_insert FORMAT CSV 102,2\nSELECT * FROM table_with_enum_column_for_csv_insert;\n\nSET input_format_csv_enum_as_number = 0;\n\nDROP TABLE IF EXISTS table_with_enum_column_for_csv_insert;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS table_with_enum_column_for_csv_insert;\n\nCREATE TABLE table_with_enum_column_for_csv_insert (\n    Id Int32,\n    Value Enum('ef' = 1, 'es' = 2)\n) ENGINE=Memory();\n\nSET input_format_csv_enum_as_number = 1;\n\nINSERT INTO table_with_enum_column_for_csv_insert FORMAT CSV 102,2\nSELECT * FROM table_with_enum_column_for_csv_insert;\n\nSET input_format_csv_enum_as_number = 0;\n\nDROP TABLE IF EXISTS table_with_enum_column_for_csv_insert;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
01620_fix_simple_state_arg_type.sql,clickhouse,"[{'query': 'drop table if exists ay;\n\ncreate table ay engine AggregatingMergeTree order by i as select 1 i, sumSimpleState(10) group by i;\ninsert into ay values(40, 60);\ninsert into ay values(40, 50);\ninsert into ay values(20, 30);\noptimize table ay;\nselect * from ay;\ninsert into ay values(20, 30), (40, 10);\noptimize table ay;\nselect * from ay;\n\ndrop table if exists ay;\n', 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'drop table if exists ay;\n\ncreate table ay engine AggregatingMergeTree order by i as select 1 i, sumSimpleState(10) group by i;\ninsert into ay values(40, 60);\ninsert into ay values(40, 50);\ninsert into ay values(20, 30);\noptimize table ay;\nselect * from ay;\ninsert into ay values(20, 30), (40, 10);\noptimize table ay;\nselect * from ay;\n\ndrop table if exists ay;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
01642_if_nullable_regression.sql,clickhouse,"[{'query': ""SELECT sumIf(dummy, dummy) FROM remote('127.0.0.{1,2}', view(SELECT cast(Null  AS Nullable(UInt8))  AS dummy FROM system.one));\nSELECT sumIf(dummy, 1)     FROM remote('127.0.0.{1,2}', view(SELECT cast(Null  AS Nullable(UInt8))  AS dummy FROM system.one));\n-- Before #16610 it returns 0 while with this patch it will return NULL\nSELECT sumIf(dummy, dummy) FROM remote('127.0.0.{1,2}', view(SELECT cast(dummy AS Nullable(UInt8)) AS dummy FROM system.one));\nSELECT sumIf(dummy, 1)     FROM remote('127.0.0.{1,2}', view(SELECT cast(dummy AS Nullable(UInt8)) AS dummy FROM system.one));\n\nSELECT sumIf(n, 1) FROM remote('127.0.0.{1,2}', view(SELECT cast(* AS Nullable(UInt8)) AS n FROM system.numbers limit 10))\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 69 (line 1, col 69): cast(Null  AS Nullable(UInt8))  AS dummy FROM system.one))\n FORMAT Native. Expected one of: AS, Comma, Dot, Arrow, QuestionMark, token, OR, BETWEEN, IS, NOT LIKE, LIKE, GLOBAL IN, IN, GLOBAL NOT IN, NOT IN, AND, alias, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'SELECT sumIf(dummy, dummy) FROM remote(\'127.0.0.{1,2}\', view(SELECT cast(Null  AS Nullable(UInt8))  AS dummy FROM system.one));\nSELECT sumIf(dummy, 1)     FROM remote(\'127.0.0.{1,2}\', view(SELECT cast(Null  AS Nullable(UInt8))  AS dummy FROM system.one));\n-- Before #16610 it returns 0 while with this patch it will return NULL\nSELECT sumIf(dummy, dummy) FROM remote(\'127.0.0.{1,2}\', view(SELECT cast(dummy AS Nullable(UInt8)) AS dummy FROM system.one));\nSELECT sumIf(dummy, 1)     FROM remote(\'127.0.0.{1,2}\', view(SELECT cast(dummy AS Nullable(UInt8)) AS dummy FROM system.one));\n\nSELECT sumIf(n, 1) FROM remote(\'127.0.0.{1,2}\', view(SELECT cast(* AS Nullable(UInt8)) AS n FROM system.numbers limit 10))\n\': near ""SELECT"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
01645_system_table_engines.sql,clickhouse,"[{'query': ""SELECT * FROM system.table_engines WHERE name in ('MergeTree', 'ReplicatedCollapsingMergeTree') ORDER BY name FORMAT PrettyCompactNoEscapes;\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 118 (line 1, col 118): PrettyCompactNoEscapes;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'SELECT * FROM system.table_engines WHERE name in (\'MergeTree\', \'ReplicatedCollapsingMergeTree\') ORDER BY name FORMAT PrettyCompactNoEscapes;\n\': near ""FORMAT"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
01671_merge_join_and_constants.sql,clickhouse,"[{'query': ""SET output_format_pretty_color=1;\nSET allow_experimental_analyzer = 1;\n\nDROP TABLE IF EXISTS table1;\nDROP TABLE IF EXISTS table2;\n\nCREATE TABLE table1(a String, b Date) ENGINE MergeTree order by a;\nCREATE TABLE table2(c String, a String, d Date) ENGINE MergeTree order by c;\n\nINSERT INTO table1 VALUES ('a', '2018-01-01') ('b', '2018-01-01') ('c', '2018-01-01');\nINSERT INTO table2 VALUES ('D', 'd', '2018-01-01') ('B', 'b', '2018-01-01') ('C', 'c', '2018-01-01');\n\nset join_algorithm = 'partial_merge';\n\nSELECT * FROM table1 AS t1 ALL LEFT JOIN (SELECT *, '0.10', c, d AS b FROM table2) AS t2 USING (a, b) ORDER BY d, t1.a ASC FORMAT PrettyCompact settings max_rows_in_join = 1;\n\nSELECT pow('0.0000000257', NULL), pow(pow(NULL, NULL), NULL) - NULL, (val + NULL) = (rval * 0), * FROM (SELECT (val + 256) = (NULL * NULL), toLowCardinality(toNullable(dummy)) AS val FROM system.one) AS s1 ANY LEFT JOIN (SELECT toLowCardinality(dummy) AS rval FROM system.one) AS s2 ON (val + 0) = (rval * 255) settings max_rows_in_join = 1;\n\nDROP TABLE IF EXISTS table1;\nDROP TABLE IF EXISTS table2;\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 35 (line 2, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'SET output_format_pretty_color=1;\nSET allow_experimental_analyzer = 1;\n\nDROP TABLE IF EXISTS table1;\nDROP TABLE IF EXISTS table2;\n\nCREATE TABLE table1(a String, b Date) ENGINE MergeTree order by a;\nCREATE TABLE table2(c String, a String, d Date) ENGINE MergeTree order by c;\n\nINSERT INTO table1 VALUES (\'a\', \'2018-01-01\') (\'b\', \'2018-01-01\') (\'c\', \'2018-01-01\');\nINSERT INTO table2 VALUES (\'D\', \'d\', \'2018-01-01\') (\'B\', \'b\', \'2018-01-01\') (\'C\', \'c\', \'2018-01-01\');\n\nset join_algorithm = \'partial_merge\';\n\nSELECT * FROM table1 AS t1 ALL LEFT JOIN (SELECT *, \'0.10\', c, d AS b FROM table2) AS t2 USING (a, b) ORDER BY d, t1.a ASC FORMAT PrettyCompact settings max_rows_in_join = 1;\n\nSELECT pow(\'0.0000000257\', NULL), pow(pow(NULL, NULL), NULL) - NULL, (val + NULL) = (rval * 0), * FROM (SELECT (val + 256) = (NULL * NULL), toLowCardinality(toNullable(dummy)) AS val FROM system.one) AS s1 ANY LEFT JOIN (SELECT toLowCardinality(dummy) AS rval FROM system.one) AS s2 ON (val + 0) = (rval * 255) settings max_rows_in_join = 1;\n\nDROP TABLE IF EXISTS table1;\nDROP TABLE IF EXISTS table2;\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
01776_decrypt_aead_size_check.sql,clickhouse,"[{'query': ""-- Tags: no-fasttest\n-- Tag no-fasttest: Depends on OpenSSL\n\nSELECT decrypt('aes-128-gcm', 'text', 'key', 'IV'); -- { serverError 36 }\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 112 (end of query) (line 4, col 51): ; -- { serverError 36 }\n\n FORMAT Native. , e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql '-- Tags: no-fasttest\n-- Tag no-fasttest: Depends on OpenSSL\n\nSELECT decrypt('aes-128-gcm', 'text', 'key', 'IV'); -- { serverError 36 }\n': no such function: decrypt"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
01795_TinyLog_rwlock_ub.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS underlying_01795;\nCREATE TABLE underlying_01795 (key UInt64) Engine=TinyLog();\nINSERT INTO FUNCTION remote('127.1', currentDatabase(), underlying_01795) SELECT toUInt64(number) FROM system.numbers LIMIT 1;\nSELECT * FROM underlying_01795 FORMAT Null;\nDROP TABLE underlying_01795;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS underlying_01795;\nCREATE TABLE underlying_01795 (key UInt64) Engine=TinyLog();\nINSERT INTO FUNCTION remote('127.1', currentDatabase(), underlying_01795) SELECT toUInt64(number) FROM system.numbers LIMIT 1;\nSELECT * FROM underlying_01795 FORMAT Null;\nDROP TABLE underlying_01795;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
01825_type_json_in_array.sql,clickhouse,"[{'query': '-- Tags: no-fasttest\n\nSET allow_experimental_object_type = 1;\nDROP TABLE IF EXISTS t_json_array;\n\nCREATE TABLE t_json_array (id UInt32, arr Array(JSON)) ENGINE = MergeTree ORDER BY id;\n\nINSERT INTO t_json_array FORMAT JSONEachRow {""id"": 1, ""arr"": [{""k1"": 1, ""k2"": {""k3"": 2, ""k4"": 3}}, {""k1"": 2, ""k2"": {""k5"": ""foo""}}]}\nINSERT INTO t_json_array FORMAT JSONEachRow {""id"": 2, ""arr"": [{""k1"": 3, ""k2"": {""k3"": 4, ""k4"": 5}}]}\n\nSET output_format_json_named_tuples_as_objects = 1;\n\nSELECT * FROM t_json_array ORDER BY id FORMAT JSONEachRow;\nSELECT id, arr.k1, arr.k2.k3, arr.k2.k4, arr.k2.k5 FROM t_json_array ORDER BY id;\nSELECT arr FROM t_json_array ARRAY JOIN arr ORDER BY arr.k1 FORMAT JSONEachRow;\nSELECT toTypeName(arr) FROM t_json_array LIMIT 1;\n\nTRUNCATE TABLE t_json_array;\n\nINSERT INTO t_json_array FORMAT JSONEachRow {""id"": 1, ""arr"": [{""k1"": [{""k2"": ""aaa"", ""k3"": ""bbb""}, {""k2"": ""ccc""}]}]}\nINSERT INTO t_json_array FORMAT JSONEachRow {""id"": 2, ""arr"": [{""k1"": [{""k3"": ""ddd"", ""k4"": 10}, {""k4"": 20}], ""k5"": {""k6"": ""foo""}}]}\n\nSELECT * FROM t_json_array ORDER BY id FORMAT JSONEachRow;\nSELECT id, arr.k1.k2, arr.k1.k3, arr.k1.k4, arr.k5.k6 FROM t_json_array ORDER BY id;\n\nSELECT arrayJoin(arrayJoin(arr.k1)) AS k1 FROM t_json_array ORDER BY k1 FORMAT JSONEachRow;\nSELECT toTypeName(arrayJoin(arrayJoin(arr.k1))) AS arr FROM t_json_array LIMIT 1;\n\nDROP TABLE t_json_array;\n\nSELECT * FROM values(\'arr Array(JSON)\', \'[\\\'{""x"" : 1}\\\']\') FORMAT JSONEachRow;\nSELECT * FROM values(\'arr Map(String, JSON)\', \'{\\\'x\\\' : \\\'{""y"" : 1}\\\', \\\'t\\\' : \\\'{""y"" : 2}\\\'}\') FORMAT JSONEachRow;\nSELECT * FROM values(\'arr Tuple(Int32, JSON)\', \'(1, \\\'{""y"" : 1}\\\')\', \'(2, \\\'{""y"" : 2}\\\')\') FORMAT JSONEachRow;\nSELECT * FROM format(JSONEachRow, \'{""arr"" : [{""x"" : ""aaa"", ""y"" : [1,2,3]}]}\') FORMAT JSONEachRow;\nSELECT * FROM values(\'arr Array(JSON)\', \'[\\\'{""x"" : 1}\\\']\') FORMAT JSONEachRow;\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 63 (line 4, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- Tags: no-fasttest\n\nSET allow_experimental_object_type = 1;\nDROP TABLE IF EXISTS t_json_array;\n\nCREATE TABLE t_json_array (id UInt32, arr Array(JSON)) ENGINE = MergeTree ORDER BY id;\n\nINSERT INTO t_json_array FORMAT JSONEachRow {""id"": 1, ""arr"": [{""k1"": 1, ""k2"": {""k3"": 2, ""k4"": 3}}, {""k1"": 2, ""k2"": {""k5"": ""foo""}}]}\nINSERT INTO t_json_array FORMAT JSONEachRow {""id"": 2, ""arr"": [{""k1"": 3, ""k2"": {""k3"": 4, ""k4"": 5}}]}\n\nSET output_format_json_named_tuples_as_objects = 1;\n\nSELECT * FROM t_json_array ORDER BY id FORMAT JSONEachRow;\nSELECT id, arr.k1, arr.k2.k3, arr.k2.k4, arr.k2.k5 FROM t_json_array ORDER BY id;\nSELECT arr FROM t_json_array ARRAY JOIN arr ORDER BY arr.k1 FORMAT JSONEachRow;\nSELECT toTypeName(arr) FROM t_json_array LIMIT 1;\n\nTRUNCATE TABLE t_json_array;\n\nINSERT INTO t_json_array FORMAT JSONEachRow {""id"": 1, ""arr"": [{""k1"": [{""k2"": ""aaa"", ""k3"": ""bbb""}, {""k2"": ""ccc""}]}]}\nINSERT INTO t_json_array FORMAT JSONEachRow {""id"": 2, ""arr"": [{""k1"": [{""k3"": ""ddd"", ""k4"": 10}, {""k4"": 20}], ""k5"": {""k6"": ""foo""}}]}\n\nSELECT * FROM t_json_array ORDER BY id FORMAT JSONEachRow;\nSELECT id, arr.k1.k2, arr.k1.k3, arr.k1.k4, arr.k5.k6 FROM t_json_array ORDER BY id;\n\nSELECT arrayJoin(arrayJoin(arr.k1)) AS k1 FROM t_json_array ORDER BY k1 FORMAT JSONEachRow;\nSELECT toTypeName(arrayJoin(arrayJoin(arr.k1))) AS arr FROM t_json_array LIMIT 1;\n\nDROP TABLE t_json_array;\n\nSELECT * FROM values(\'arr Array(JSON)\', \'[\\\'{""x"" : 1}\\\']\') FORMAT JSONEachRow;\nSELECT * FROM values(\'arr Map(String, JSON)\', \'{\\\'x\\\' : \\\'{""y"" : 1}\\\', \\\'t\\\' : \\\'{""y"" : 2}\\\'}\') FORMAT JSONEachRow;\nSELECT * FROM values(\'arr Tuple(Int32, JSON)\', \'(1, \\\'{""y"" : 1}\\\')\', \'(2, \\\'{""y"" : 2}\\\')\') FORMAT JSONEachRow;\nSELECT * FROM format(JSONEachRow, \'{""arr"" : [{""x"" : ""aaa"", ""y"" : [1,2,3]}]}\') FORMAT JSONEachRow;\nSELECT * FROM values(\'arr Array(JSON)\', \'[\\\'{""x"" : 1}\\\']\') FORMAT JSONEachRow;\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
01913_names_of_tuple_literal.sql,clickhouse,"[{'query': 'SET allow_experimental_analyzer = 0;\n\nSELECT ((1, 2), (2, 3), (3, 4)) FORMAT TSVWithNames;\nSELECT ((1, 2), (2, 3), (3, 4)) FORMAT TSVWithNames SETTINGS legacy_column_name_of_tuple_literal = 1;\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 38 (line 2, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'SET allow_experimental_analyzer = 0;\n\nSELECT ((1, 2), (2, 3), (3, 4)) FORMAT TSVWithNames;\nSELECT ((1, 2), (2, 3), (3, 4)) FORMAT TSVWithNames SETTINGS legacy_column_name_of_tuple_literal = 1;\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
01915_json_extract_raw_string.sql,clickhouse,"[{'query': '\nselect JSONExtract(\'{""a"": ""123"", ""b"": 456, ""c"": [7, 8, 9]}\', \'Tuple(a String, b String, c String)\');\n\nwith \'{""string_value"":null}\' as json select JSONExtract(json, \'string_value\', \'Nullable(String)\');\nwith \'{""string_value"":null}\' as json select JSONExtract(json, \'string_value\', \'LowCardinality(Nullable(String))\');\n\nselect JSONExtractString(\'{""a"": 123}\', \'a\');\nselect JSONExtractString(\'{""a"": ""123""}\', \'a\');\nselect JSONExtractString(\'{""a"": null}\', \'a\');\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 404)\n Code: 46, e.displayText() = DB::Exception: Unknown function JSONExtract, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'\nselect JSONExtract(\'{""a"": ""123"", ""b"": 456, ""c"": [7, 8, 9]}\', \'Tuple(a String, b String, c String)\');\n\nwith \'{""string_value"":null}\' as json select JSONExtract(json, \'string_value\', \'Nullable(String)\');\nwith \'{""string_value"":null}\' as json select JSONExtract(json, \'string_value\', \'LowCardinality(Nullable(String))\');\n\nselect JSONExtractString(\'{""a"": 123}\', \'a\');\nselect JSONExtractString(\'{""a"": ""123""}\', \'a\');\nselect JSONExtractString(\'{""a"": null}\', \'a\');\n\': no such function: JSONExtract', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
01931_storage_merge_no_columns.sql,clickhouse,"[{'query': ""drop table if exists data;\ncreate table data (key Int) engine=MergeTree() order by key;\nselect 1 from merge(currentDatabase(), '^data$') prewhere _table in (NULL); -- { serverError ILLEGAL_PREWHERE }\nselect 1 from merge(currentDatabase(), '^data$') where _table in (NULL);\ndrop table data;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'drop table if exists data;\ncreate table data (key Int) engine=MergeTree() order by key;\nselect 1 from merge(currentDatabase(), '^data$') prewhere _table in (NULL); -- { serverError ILLEGAL_PREWHERE }\nselect 1 from merge(currentDatabase(), '^data$') where _table in (NULL);\ndrop table data;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
01932_null_valid_identifier.sql,clickhouse,"[{'query': ""SELECT `null` FROM remote('127.0.0.2', view(SELECT 1 AS `null`));\nSELECT `NULL` FROM remote('127.0.0.2', view(SELECT 1 AS `NULL`));\nSELECT `nULl`, null FROM remote('127.0.0.2', view(SELECT 1 AS `nULl`));\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 52 (line 1, col 52): 1 AS `null`))\n FORMAT Native. Expected one of: AS, Comma, Dot, Arrow, QuestionMark, token, OR, BETWEEN, IS, NOT LIKE, LIKE, GLOBAL IN, IN, GLOBAL NOT IN, NOT IN, AND, alias, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'SELECT `null` FROM remote(\'127.0.0.2\', view(SELECT 1 AS `null`));\nSELECT `NULL` FROM remote(\'127.0.0.2\', view(SELECT 1 AS `NULL`));\nSELECT `nULl`, null FROM remote(\'127.0.0.2\', view(SELECT 1 AS `nULl`));\n\': near ""SELECT"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
01942_snowflakeToDateTime.sql,clickhouse,"[{'query': ""-- -- Error cases\nSELECT snowflakeToDateTime();  -- {serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH}\nSELECT snowflakeToDateTime64();  -- {serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH}\n\nSELECT snowflakeToDateTime('abc');  -- {serverError ILLEGAL_TYPE_OF_ARGUMENT}\nSELECT snowflakeToDateTime64('abc');  -- {serverError ILLEGAL_TYPE_OF_ARGUMENT}\n\nSELECT snowflakeToDateTime('abc', 123);  -- {serverError ILLEGAL_TYPE_OF_ARGUMENT}\nSELECT snowflakeToDateTime64('abc', 123);  -- {serverError ILLEGAL_TYPE_OF_ARGUMENT}\n\nSELECT 'const column';\nWITH\n\tCAST(1426860704886947840 AS Int64) AS i64,\n\t'UTC' AS tz\nSELECT\n\ttz,\n\ti64,\n\tsnowflakeToDateTime(i64, tz) as dt,\n\ttoTypeName(dt),\n\tsnowflakeToDateTime64(i64, tz) as dt64,\n\ttoTypeName(dt64);\n\nWITH\n\tCAST(1426860704886947840 AS Int64) AS i64,\n\t'Asia/Shanghai' AS tz\nSELECT\n\ttz,\n\ti64,\n\tsnowflakeToDateTime(i64, tz) as dt,\n\ttoTypeName(dt),\n\tsnowflakeToDateTime64(i64, tz) as dt64,\n\ttoTypeName(dt64);\n\n\nDROP TABLE IF EXISTS tab;\nCREATE TABLE tab(val Int64, tz String) engine=Log;\nINSERT INTO tab VALUES (42, 'Asia/Singapore');\n\nSELECT 1 FROM tab WHERE snowflakeToDateTime(42::Int64, tz) != now() SETTINGS allow_nonconst_timezone_arguments = 1;\nSELECT 1 FROM tab WHERE snowflakeToDateTime64(42::Int64, tz) != now() SETTINGS allow_nonconst_timezone_arguments = 1;\n\nDROP TABLE tab;\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 404)\n Code: 46, e.displayText() = DB::Exception: Unknown function snowflakeToDateTime, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql '-- -- Error cases\nSELECT snowflakeToDateTime();  -- {serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH}\nSELECT snowflakeToDateTime64();  -- {serverError NUMBER_OF_ARGUMENTS_DOESNT_MATCH}\n\nSELECT snowflakeToDateTime('abc');  -- {serverError ILLEGAL_TYPE_OF_ARGUMENT}\nSELECT snowflakeToDateTime64('abc');  -- {serverError ILLEGAL_TYPE_OF_ARGUMENT}\n\nSELECT snowflakeToDateTime('abc', 123);  -- {serverError ILLEGAL_TYPE_OF_ARGUMENT}\nSELECT snowflakeToDateTime64('abc', 123);  -- {serverError ILLEGAL_TYPE_OF_ARGUMENT}\n\nSELECT 'const column';\nWITH\n\tCAST(1426860704886947840 AS Int64) AS i64,\n\t'UTC' AS tz\nSELECT\n\ttz,\n\ti64,\n\tsnowflakeToDateTime(i64, tz) as dt,\n\ttoTypeName(dt),\n\tsnowflakeToDateTime64(i64, tz) as dt64,\n\ttoTypeName(dt64);\n\nWITH\n\tCAST(1426860704886947840 AS Int64) AS i64,\n\t'Asia/Shanghai' AS tz\nSELECT\n\ttz,\n\ti64,\n\tsnowflakeToDateTime(i64, tz) as dt,\n\ttoTypeName(dt),\n\tsnowflakeToDateTime64(i64, tz) as dt64,\n\ttoTypeName(dt64);\n\n\nDROP TABLE IF EXISTS tab;\nCREATE TABLE tab(val Int64, tz String) engine=Log;\nINSERT INTO tab VALUES (42, 'Asia/Singapore');\n\nSELECT 1 FROM tab WHERE snowflakeToDateTime(42::Int64, tz) != now() SETTINGS allow_nonconst_timezone_arguments = 1;\nSELECT 1 FROM tab WHERE snowflakeToDateTime64(42::Int64, tz) != now() SETTINGS allow_nonconst_timezone_arguments = 1;\n\nDROP TABLE tab;\n': no such function: snowflakeToDateTime"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02012_zookeeper_changed_enum_type_incompatible.sql,clickhouse,"[{'query': ""-- Tags: zookeeper, no-replicated-database\n-- Tag no-replicated-database: Fails due to additional replicas or shards\n\ndrop table if exists enum_alter_issue;\ncreate table enum_alter_issue (a Enum16('one' = 1, 'two' = 2), b Int)\nengine = ReplicatedMergeTree('/clickhouse/tables/{database}/test_02012/enum_alter_issue', 'r2')\nORDER BY b;\n\ninsert into enum_alter_issue values ('one', 1), ('two', 1);\nalter table enum_alter_issue detach partition id 'all';\nalter table enum_alter_issue modify column a Enum8('one' = 1, 'two' = 2, 'three' = 3);\ninsert into enum_alter_issue values ('one', 1), ('two', 1);\n\nalter table enum_alter_issue attach partition id 'all';\nselect * from enum_alter_issue;\ndrop table enum_alter_issue;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql '-- Tags: zookeeper, no-replicated-database\n-- Tag no-replicated-database: Fails due to additional replicas or shards\n\ndrop table if exists enum_alter_issue;\ncreate table enum_alter_issue (a Enum16('one' = 1, 'two' = 2), b Int)\nengine = ReplicatedMergeTree('/clickhouse/tables/{database}/test_02012/enum_alter_issue', 'r2')\nORDER BY b;\n\ninsert into enum_alter_issue values ('one', 1), ('two', 1);\nalter table enum_alter_issue detach partition id 'all';\nalter table enum_alter_issue modify column a Enum8('one' = 1, 'two' = 2, 'three' = 3);\ninsert into enum_alter_issue values ('one', 1), ('two', 1);\n\nalter table enum_alter_issue attach partition id 'all';\nselect * from enum_alter_issue;\ndrop table enum_alter_issue;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02024_compile_expressions_with_short_circuit_evaluation.sql,clickhouse,"[{'query': '-- { echo }\nselect 1+number+multiIf(number == 1, cityHash64(number), number) from numbers(1) settings compile_expressions=1, min_count_to_compile_expression=0;\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 159 (end of query) (line 2, col 147): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- { echo }\nselect 1+number+multiIf(number == 1, cityHash64(number), number) from numbers(1) settings compile_expressions=1, min_count_to_compile_expression=0;\n\': near ""compile_expressions"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02030_tuple_filter.sql,clickhouse,"[{'query': ""SET allow_experimental_analyzer = 1;\n\nDROP TABLE IF EXISTS test_tuple_filter;\n\nCREATE TABLE test_tuple_filter (id UInt32, value String, log_date Date) Engine=MergeTree() ORDER BY id PARTITION BY log_date SETTINGS index_granularity = 3, index_granularity_bytes = '10Mi';\n\nINSERT INTO test_tuple_filter VALUES (1,'A','2021-01-01'),(2,'B','2021-01-01'),(3,'C','2021-01-01'),(4,'D','2021-01-02'),(5,'E','2021-01-02');\n\nSET force_primary_key = 1;\nSET optimize_move_to_prewhere = 1;\n\nSELECT * FROM test_tuple_filter WHERE (id, value) = (1, 'A');\nSELECT * FROM test_tuple_filter WHERE (1, 'A') = (id, value);\nSELECT * FROM test_tuple_filter WHERE (id, value) = (1, 'A') AND (id, log_date) = (1, '2021-01-01');\nSELECT * FROM test_tuple_filter WHERE ((id, value), id * 2) = ((1, 'A'), 2);\nSELECT * FROM test_tuple_filter WHERE ((id, value), log_date) = ((1, 'A'), '2021-01-01');\n\n-- not supported functions (concat) do not lost\nSELECT * FROM test_tuple_filter WHERE (id, value, value||'foo') = ('1', 'A', 'A');\n\nSELECT * FROM test_tuple_filter WHERE (1, (1, (1, (1, (id, value))))) = (1, (1, (1, (1, (1, 'A')))));\n\nSELECT * FROM test_tuple_filter WHERE (1, value) = (id, 'A');\nSELECT * FROM test_tuple_filter WHERE (1, (1, (1, (1, tuple(id))))) = (1, (1, (1, (1, tuple(1)))));\nSELECT * FROM test_tuple_filter WHERE ((id, value), tuple(log_date)) = ((1, 'A'), tuple('2021-01-01'));\n\nSET force_index_by_date = 1;\nSET force_primary_key = 0;\nSELECT * FROM test_tuple_filter WHERE (log_date, value) = ('2021-01-01', 'A');\n\nSET force_index_by_date = 0;\nSET force_primary_key = 0;\n\nSELECT * FROM test_tuple_filter WHERE (1, value) = (id, 'A');\nSELECT * FROM test_tuple_filter WHERE tuple(id) = tuple(1);\nSELECT * FROM test_tuple_filter WHERE (id, (id, id) = (1, NULL)) == (NULL, NULL);\n\nSELECT * FROM test_tuple_filter WHERE (log_date, value) = tuple('2021-01-01'); -- { serverError 43 }\nSELECT * FROM test_tuple_filter WHERE (id, value) = tuple(1); -- { serverError 43 }\nSELECT * FROM test_tuple_filter WHERE tuple(id, value) = tuple(value, id); -- { serverError 386 }\nSELECT * FROM test_tuple_filter WHERE equals((id, value)); -- { serverError 42 }\n\nDROP TABLE IF EXISTS test_tuple_filter;\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 38 (line 2, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'SET allow_experimental_analyzer = 1;\n\nDROP TABLE IF EXISTS test_tuple_filter;\n\nCREATE TABLE test_tuple_filter (id UInt32, value String, log_date Date) Engine=MergeTree() ORDER BY id PARTITION BY log_date SETTINGS index_granularity = 3, index_granularity_bytes = \'10Mi\';\n\nINSERT INTO test_tuple_filter VALUES (1,\'A\',\'2021-01-01\'),(2,\'B\',\'2021-01-01\'),(3,\'C\',\'2021-01-01\'),(4,\'D\',\'2021-01-02\'),(5,\'E\',\'2021-01-02\');\n\nSET force_primary_key = 1;\nSET optimize_move_to_prewhere = 1;\n\nSELECT * FROM test_tuple_filter WHERE (id, value) = (1, \'A\');\nSELECT * FROM test_tuple_filter WHERE (1, \'A\') = (id, value);\nSELECT * FROM test_tuple_filter WHERE (id, value) = (1, \'A\') AND (id, log_date) = (1, \'2021-01-01\');\nSELECT * FROM test_tuple_filter WHERE ((id, value), id * 2) = ((1, \'A\'), 2);\nSELECT * FROM test_tuple_filter WHERE ((id, value), log_date) = ((1, \'A\'), \'2021-01-01\');\n\n-- not supported functions (concat) do not lost\nSELECT * FROM test_tuple_filter WHERE (id, value, value||\'foo\') = (\'1\', \'A\', \'A\');\n\nSELECT * FROM test_tuple_filter WHERE (1, (1, (1, (1, (id, value))))) = (1, (1, (1, (1, (1, \'A\')))));\n\nSELECT * FROM test_tuple_filter WHERE (1, value) = (id, \'A\');\nSELECT * FROM test_tuple_filter WHERE (1, (1, (1, (1, tuple(id))))) = (1, (1, (1, (1, tuple(1)))));\nSELECT * FROM test_tuple_filter WHERE ((id, value), tuple(log_date)) = ((1, \'A\'), tuple(\'2021-01-01\'));\n\nSET force_index_by_date = 1;\nSET force_primary_key = 0;\nSELECT * FROM test_tuple_filter WHERE (log_date, value) = (\'2021-01-01\', \'A\');\n\nSET force_index_by_date = 0;\nSET force_primary_key = 0;\n\nSELECT * FROM test_tuple_filter WHERE (1, value) = (id, \'A\');\nSELECT * FROM test_tuple_filter WHERE tuple(id) = tuple(1);\nSELECT * FROM test_tuple_filter WHERE (id, (id, id) = (1, NULL)) == (NULL, NULL);\n\nSELECT * FROM test_tuple_filter WHERE (log_date, value) = tuple(\'2021-01-01\'); -- { serverError 43 }\nSELECT * FROM test_tuple_filter WHERE (id, value) = tuple(1); -- { serverError 43 }\nSELECT * FROM test_tuple_filter WHERE tuple(id, value) = tuple(value, id); -- { serverError 386 }\nSELECT * FROM test_tuple_filter WHERE equals((id, value)); -- { serverError 42 }\n\nDROP TABLE IF EXISTS test_tuple_filter;\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02067_lost_part_s3.sql,clickhouse,"[{'query': ""-- Tags: no-fasttest\n\nDROP TABLE IF EXISTS partslost_0;\nDROP TABLE IF EXISTS partslost_1;\nDROP TABLE IF EXISTS partslost_2;\n\nCREATE TABLE partslost_0 (x String) ENGINE=ReplicatedMergeTree('/clickhouse/table/{database}_02067_lost/partslost', '0') ORDER BY tuple()\n    SETTINGS min_rows_for_wide_part = 0, min_bytes_for_wide_part = 0, old_parts_lifetime = 1,\n    cleanup_delay_period = 1, cleanup_delay_period_random_add = 1, cleanup_thread_preferred_points_per_iteration=0,\n    index_granularity = 8192, index_granularity_bytes = '10Mi';\n\nCREATE TABLE partslost_1 (x String) ENGINE=ReplicatedMergeTree('/clickhouse/table/{database}_02067_lost/partslost', '1') ORDER BY tuple()\n    SETTINGS min_rows_for_wide_part = 0, min_bytes_for_wide_part = 0, old_parts_lifetime = 1,\n    cleanup_delay_period = 1, cleanup_delay_period_random_add = 1, cleanup_thread_preferred_points_per_iteration=0,\n    index_granularity = 8192, index_granularity_bytes = '10Mi';\n\nCREATE TABLE partslost_2 (x String) ENGINE=ReplicatedMergeTree('/clickhouse/table/{database}_02067_lost/partslost', '2') ORDER BY tuple()\n    SETTINGS min_rows_for_wide_part = 0, min_bytes_for_wide_part = 0, old_parts_lifetime = 1,\n    cleanup_delay_period = 1, cleanup_delay_period_random_add = 1, cleanup_thread_preferred_points_per_iteration=0,\n    index_granularity = 8192, index_granularity_bytes = '10Mi';\n\n\nINSERT INTO partslost_0 SELECT toString(number) AS x from system.numbers LIMIT 10000;\n\nALTER TABLE partslost_0 ADD INDEX idx x TYPE tokenbf_v1(285000, 3, 12345) GRANULARITY 3;\n\nSET mutations_sync = 2;\n\nALTER TABLE partslost_0 MATERIALIZE INDEX idx;\n\n-- In worst case doesn't check anything, but it's not flaky\nselect sleep(3) FORMAT Null;\nselect sleep(3) FORMAT Null;\nselect sleep(3) FORMAT Null;\nselect sleep(3) FORMAT Null;\n\nALTER TABLE partslost_0 DROP INDEX idx;\n\nselect count() from partslost_0;\nselect count() from partslost_1;\nselect count() from partslost_2;\n\nDROP TABLE IF EXISTS partslost_0;\nDROP TABLE IF EXISTS partslost_1;\nDROP TABLE IF EXISTS partslost_2;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql '-- Tags: no-fasttest\n\nDROP TABLE IF EXISTS partslost_0;\nDROP TABLE IF EXISTS partslost_1;\nDROP TABLE IF EXISTS partslost_2;\n\nCREATE TABLE partslost_0 (x String) ENGINE=ReplicatedMergeTree('/clickhouse/table/{database}_02067_lost/partslost', '0') ORDER BY tuple()\n    SETTINGS min_rows_for_wide_part = 0, min_bytes_for_wide_part = 0, old_parts_lifetime = 1,\n    cleanup_delay_period = 1, cleanup_delay_period_random_add = 1, cleanup_thread_preferred_points_per_iteration=0,\n    index_granularity = 8192, index_granularity_bytes = '10Mi';\n\nCREATE TABLE partslost_1 (x String) ENGINE=ReplicatedMergeTree('/clickhouse/table/{database}_02067_lost/partslost', '1') ORDER BY tuple()\n    SETTINGS min_rows_for_wide_part = 0, min_bytes_for_wide_part = 0, old_parts_lifetime = 1,\n    cleanup_delay_period = 1, cleanup_delay_period_random_add = 1, cleanup_thread_preferred_points_per_iteration=0,\n    index_granularity = 8192, index_granularity_bytes = '10Mi';\n\nCREATE TABLE partslost_2 (x String) ENGINE=ReplicatedMergeTree('/clickhouse/table/{database}_02067_lost/partslost', '2') ORDER BY tuple()\n    SETTINGS min_rows_for_wide_part = 0, min_bytes_for_wide_part = 0, old_parts_lifetime = 1,\n    cleanup_delay_period = 1, cleanup_delay_period_random_add = 1, cleanup_thread_preferred_points_per_iteration=0,\n    index_granularity = 8192, index_granularity_bytes = '10Mi';\n\n\nINSERT INTO partslost_0 SELECT toString(number) AS x from system.numbers LIMIT 10000;\n\nALTER TABLE partslost_0 ADD INDEX idx x TYPE tokenbf_v1(285000, 3, 12345) GRANULARITY 3;\n\nSET mutations_sync = 2;\n\nALTER TABLE partslost_0 MATERIALIZE INDEX idx;\n\n-- In worst case doesn't check anything, but it's not flaky\nselect sleep(3) FORMAT Null;\nselect sleep(3) FORMAT Null;\nselect sleep(3) FORMAT Null;\nselect sleep(3) FORMAT Null;\n\nALTER TABLE partslost_0 DROP INDEX idx;\n\nselect count() from partslost_0;\nselect count() from partslost_1;\nselect count() from partslost_2;\n\nDROP TABLE IF EXISTS partslost_0;\nDROP TABLE IF EXISTS partslost_1;\nDROP TABLE IF EXISTS partslost_2;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02155_read_in_order_max_rows_to_read.sql,clickhouse,"[{'query': ""SET merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability = 0.0;\n\nDROP TABLE IF EXISTS t_max_rows_to_read;\n\nCREATE TABLE t_max_rows_to_read (a UInt64)\nENGINE = MergeTree ORDER BY a\nSETTINGS index_granularity = 4, index_granularity_bytes = '10Mi';\n\nINSERT INTO t_max_rows_to_read SELECT number FROM numbers(100);\n\nSET max_threads = 1;\nSET optimize_read_in_order = 1;\n\nSELECT a FROM t_max_rows_to_read WHERE a = 10 SETTINGS max_rows_to_read = 4;\n\nSELECT a FROM t_max_rows_to_read ORDER BY a LIMIT 5 SETTINGS max_rows_to_read = 12;\n\nSELECT a FROM t_max_rows_to_read WHERE a = 10 OR a = 20 SETTINGS max_rows_to_read = 12;\n\nSELECT a FROM t_max_rows_to_read ORDER BY a LIMIT 20 FORMAT Null SETTINGS max_rows_to_read = 12; -- { serverError 158 }\nSELECT a FROM t_max_rows_to_read WHERE a > 10 ORDER BY a LIMIT 5 FORMAT Null SETTINGS max_rows_to_read = 12; -- { serverError 158 }\nSELECT a FROM t_max_rows_to_read WHERE a = 10 OR a = 20 FORMAT Null SETTINGS max_rows_to_read = 4; -- { serverError 158 }\n\nDROP TABLE t_max_rows_to_read;\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 102 (line 2, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'SET merge_tree_read_split_ranges_into_intersecting_and_non_intersecting_injection_probability = 0.0;\n\nDROP TABLE IF EXISTS t_max_rows_to_read;\n\nCREATE TABLE t_max_rows_to_read (a UInt64)\nENGINE = MergeTree ORDER BY a\nSETTINGS index_granularity = 4, index_granularity_bytes = \'10Mi\';\n\nINSERT INTO t_max_rows_to_read SELECT number FROM numbers(100);\n\nSET max_threads = 1;\nSET optimize_read_in_order = 1;\n\nSELECT a FROM t_max_rows_to_read WHERE a = 10 SETTINGS max_rows_to_read = 4;\n\nSELECT a FROM t_max_rows_to_read ORDER BY a LIMIT 5 SETTINGS max_rows_to_read = 12;\n\nSELECT a FROM t_max_rows_to_read WHERE a = 10 OR a = 20 SETTINGS max_rows_to_read = 12;\n\nSELECT a FROM t_max_rows_to_read ORDER BY a LIMIT 20 FORMAT Null SETTINGS max_rows_to_read = 12; -- { serverError 158 }\nSELECT a FROM t_max_rows_to_read WHERE a > 10 ORDER BY a LIMIT 5 FORMAT Null SETTINGS max_rows_to_read = 12; -- { serverError 158 }\nSELECT a FROM t_max_rows_to_read WHERE a = 10 OR a = 20 FORMAT Null SETTINGS max_rows_to_read = 4; -- { serverError 158 }\n\nDROP TABLE t_max_rows_to_read;\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02207_ttl_move_if_exists.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS t_ttl_move_if_exists;\n\nCREATE TABLE t_ttl_move_if_exists (d DateTime, a UInt32)\nENGINE = MergeTree ORDER BY tuple()\nTTL d TO DISK IF EXISTS 'non_existing_disk';\n\nSHOW CREATE TABLE t_ttl_move_if_exists;\n\nDROP TABLE IF EXISTS t_ttl_move_if_exists;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS t_ttl_move_if_exists;\n\nCREATE TABLE t_ttl_move_if_exists (d DateTime, a UInt32)\nENGINE = MergeTree ORDER BY tuple()\nTTL d TO DISK IF EXISTS 'non_existing_disk';\n\nSHOW CREATE TABLE t_ttl_move_if_exists;\n\nDROP TABLE IF EXISTS t_ttl_move_if_exists;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02210_toColumnTypeName_toLowCardinality_const.sql,clickhouse,"[{'query': 'SELECT toColumnTypeName(toLowCardinality(1));\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 45 (end of query) (line 1, col 45): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'SELECT toColumnTypeName(toLowCardinality(1));\n': no such function: toLowCardinality"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02246_flatten_tuple.sql,clickhouse,"[{'query': '-- Tags: no-fasttest\n\nDROP TABLE IF EXISTS t_flatten_tuple;\nDROP TABLE IF EXISTS t_flatten_object;\n\nSET flatten_nested = 0;\n\nCREATE TABLE t_flatten_tuple(t Tuple(t1 Nested(a UInt32, s String), b UInt32, t2 Tuple(k String, v UInt32))) ENGINE = Memory;\n\nINSERT INTO t_flatten_tuple VALUES (([(1, \'a\'), (2, \'b\')], 3, (\'c\', 4)));\n\nSELECT flattenTuple(t) AS ft, toTypeName(ft) FROM t_flatten_tuple;\n\nSET allow_experimental_object_type = 1;\nCREATE TABLE t_flatten_object(data JSON) ENGINE = Memory;\n\nINSERT INTO t_flatten_object VALUES (\'{""id"": 1, ""obj"": {""k1"": 1, ""k2"": {""k3"": 2, ""k4"": [{""k5"": 3}, {""k5"": 4}]}}, ""s"": ""foo""}\');\nINSERT INTO t_flatten_object VALUES (\'{""id"": 2, ""obj"": {""k2"": {""k3"": ""str"", ""k4"": [{""k6"": 55}]}, ""some"": 42}, ""s"": ""bar""}\');\n\nSELECT toTypeName(data), toTypeName(flattenTuple(data)) FROM t_flatten_object LIMIT 1;\nSELECT untuple(flattenTuple(data)) FROM t_flatten_object ORDER BY data.id;\n\nDROP TABLE IF EXISTS t_flatten_tuple;\nDROP TABLE IF EXISTS t_flatten_object;\n', 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- Tags: no-fasttest\n\nDROP TABLE IF EXISTS t_flatten_tuple;\nDROP TABLE IF EXISTS t_flatten_object;\n\nSET flatten_nested = 0;\n\nCREATE TABLE t_flatten_tuple(t Tuple(t1 Nested(a UInt32, s String), b UInt32, t2 Tuple(k String, v UInt32))) ENGINE = Memory;\n\nINSERT INTO t_flatten_tuple VALUES (([(1, \'a\'), (2, \'b\')], 3, (\'c\', 4)));\n\nSELECT flattenTuple(t) AS ft, toTypeName(ft) FROM t_flatten_tuple;\n\nSET allow_experimental_object_type = 1;\nCREATE TABLE t_flatten_object(data JSON) ENGINE = Memory;\n\nINSERT INTO t_flatten_object VALUES (\'{""id"": 1, ""obj"": {""k1"": 1, ""k2"": {""k3"": 2, ""k4"": [{""k5"": 3}, {""k5"": 4}]}}, ""s"": ""foo""}\');\nINSERT INTO t_flatten_object VALUES (\'{""id"": 2, ""obj"": {""k2"": {""k3"": ""str"", ""k4"": [{""k6"": 55}]}, ""some"": 42}, ""s"": ""bar""}\');\n\nSELECT toTypeName(data), toTypeName(flattenTuple(data)) FROM t_flatten_object LIMIT 1;\nSELECT untuple(flattenTuple(data)) FROM t_flatten_object ORDER BY data.id;\n\nDROP TABLE IF EXISTS t_flatten_tuple;\nDROP TABLE IF EXISTS t_flatten_object;\n\': You can only execute one statement at a time.', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02271_replace_partition_many_tables.sql,clickhouse,"[{'query': ""-- Tags: no-fasttest\n\nDROP TABLE IF EXISTS replace_partition_source;\nDROP TABLE IF EXISTS replace_partition_dest1;\nDROP TABLE IF EXISTS replace_partition_dest1_2;\nDROP TABLE IF EXISTS replace_partition_dest2;\nDROP TABLE IF EXISTS replace_partition_dest2_2;\n\nCREATE TABLE replace_partition_source\n(\n    key UInt64\n)\nENGINE = ReplicatedMergeTree('/test/02271_replace_partition_many/{database}/source', '1')\nPARTITION BY key\nORDER BY tuple();\n\nINSERT INTO replace_partition_source VALUES (1);\n\nCREATE TABLE replace_partition_dest1\n(\n    key UInt64\n)\nENGINE = ReplicatedMergeTree('/test/02271_replace_partition_many/{database}/dest1', '1')\nPARTITION BY key\nORDER BY tuple();\n\nCREATE TABLE replace_partition_dest1_2\n(\n    key UInt64\n)\nENGINE = ReplicatedMergeTree('/test/02271_replace_partition_many/{database}/dest1', '2')\nPARTITION BY key\nORDER BY tuple();\n\n\nCREATE TABLE replace_partition_dest2\n(\n    key UInt64\n)\nENGINE = ReplicatedMergeTree('/test/02271_replace_partition_many/{database}/dest2', '1')\nPARTITION BY key\nORDER BY tuple();\n\nCREATE TABLE replace_partition_dest2_2\n(\n    key UInt64\n)\nENGINE = ReplicatedMergeTree('/test/02271_replace_partition_many/{database}/dest2', '2')\nPARTITION BY key\nORDER BY tuple();\n\n\nALTER TABLE replace_partition_dest1 REPLACE PARTITION 1 FROM replace_partition_source;\nALTER TABLE replace_partition_dest2 REPLACE PARTITION 1 FROM replace_partition_source;\n\nOPTIMIZE TABLE replace_partition_source FINAL;\n\nSELECT sleep(3) FORMAT Null;\nSELECT sleep(3) FORMAT Null;\nSELECT sleep(3) FORMAT Null;\nSELECT sleep(3) FORMAT Null;\nSELECT sleep(3) FORMAT Null;\n\nOPTIMIZE TABLE replace_partition_dest1_2 FINAL;\nOPTIMIZE TABLE replace_partition_dest2_2 FINAL;\n\nSELECT sleep(3) FORMAT Null;\nSELECT sleep(3) FORMAT Null;\nSELECT sleep(3) FORMAT Null;\nSELECT sleep(3) FORMAT Null;\nSELECT sleep(3) FORMAT Null;\n\nSELECT * FROM replace_partition_source;\nSELECT * FROM replace_partition_dest1;\nSELECT * FROM replace_partition_dest2;\nSELECT * FROM replace_partition_dest1_2;\nSELECT * FROM replace_partition_dest2_2;\n\n\n--DROP TABLE IF EXISTS replace_partition_source;\n--DROP TABLE IF EXISTS replace_partition_dest1;\n--DROP TABLE IF EXISTS replace_partition_dest1_2;\n--DROP TABLE IF EXISTS replace_partition_dest2;\n--DROP TABLE IF EXISTS replace_partition_dest2_2;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql '-- Tags: no-fasttest\n\nDROP TABLE IF EXISTS replace_partition_source;\nDROP TABLE IF EXISTS replace_partition_dest1;\nDROP TABLE IF EXISTS replace_partition_dest1_2;\nDROP TABLE IF EXISTS replace_partition_dest2;\nDROP TABLE IF EXISTS replace_partition_dest2_2;\n\nCREATE TABLE replace_partition_source\n(\n    key UInt64\n)\nENGINE = ReplicatedMergeTree('/test/02271_replace_partition_many/{database}/source', '1')\nPARTITION BY key\nORDER BY tuple();\n\nINSERT INTO replace_partition_source VALUES (1);\n\nCREATE TABLE replace_partition_dest1\n(\n    key UInt64\n)\nENGINE = ReplicatedMergeTree('/test/02271_replace_partition_many/{database}/dest1', '1')\nPARTITION BY key\nORDER BY tuple();\n\nCREATE TABLE replace_partition_dest1_2\n(\n    key UInt64\n)\nENGINE = ReplicatedMergeTree('/test/02271_replace_partition_many/{database}/dest1', '2')\nPARTITION BY key\nORDER BY tuple();\n\n\nCREATE TABLE replace_partition_dest2\n(\n    key UInt64\n)\nENGINE = ReplicatedMergeTree('/test/02271_replace_partition_many/{database}/dest2', '1')\nPARTITION BY key\nORDER BY tuple();\n\nCREATE TABLE replace_partition_dest2_2\n(\n    key UInt64\n)\nENGINE = ReplicatedMergeTree('/test/02271_replace_partition_many/{database}/dest2', '2')\nPARTITION BY key\nORDER BY tuple();\n\n\nALTER TABLE replace_partition_dest1 REPLACE PARTITION 1 FROM replace_partition_source;\nALTER TABLE replace_partition_dest2 REPLACE PARTITION 1 FROM replace_partition_source;\n\nOPTIMIZE TABLE replace_partition_source FINAL;\n\nSELECT sleep(3) FORMAT Null;\nSELECT sleep(3) FORMAT Null;\nSELECT sleep(3) FORMAT Null;\nSELECT sleep(3) FORMAT Null;\nSELECT sleep(3) FORMAT Null;\n\nOPTIMIZE TABLE replace_partition_dest1_2 FINAL;\nOPTIMIZE TABLE replace_partition_dest2_2 FINAL;\n\nSELECT sleep(3) FORMAT Null;\nSELECT sleep(3) FORMAT Null;\nSELECT sleep(3) FORMAT Null;\nSELECT sleep(3) FORMAT Null;\nSELECT sleep(3) FORMAT Null;\n\nSELECT * FROM replace_partition_source;\nSELECT * FROM replace_partition_dest1;\nSELECT * FROM replace_partition_dest2;\nSELECT * FROM replace_partition_dest1_2;\nSELECT * FROM replace_partition_dest2_2;\n\n\n--DROP TABLE IF EXISTS replace_partition_source;\n--DROP TABLE IF EXISTS replace_partition_dest1;\n--DROP TABLE IF EXISTS replace_partition_dest1_2;\n--DROP TABLE IF EXISTS replace_partition_dest2;\n--DROP TABLE IF EXISTS replace_partition_dest2_2;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02276_full_sort_join_unsupported.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS t1;\nDROP TABLE IF EXISTS t2;\n\nCREATE TABLE t1 (key UInt32, val UInt32) ENGINE = Memory;\nINSERT INTO t1 VALUES (1, 1);\n\nCREATE TABLE t2 (key UInt32, val UInt32) ENGINE = Memory;\nINSERT INTO t2 VALUES (1, 2);\n\nSET join_algorithm = 'full_sorting_merge';\n\nSELECT * FROM t1 JOIN t2 ON t1.key = t2.key AND t2.key > 0; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM t1 JOIN t2 ON t1.key = t2.key AND t1.key > 0; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM t1 JOIN t2 ON t1.key = t2.key OR t1.val = t2.key; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM t1 ANTI JOIN t2 ON t1.key = t2.key; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM t1 SEMI JOIN t2 ON t1.key = t2.key; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM t1 ASOF JOIN t2 ON t1.key = t2.key AND t1.val > t2.val; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM t1 ANY JOIN t2 ON t1.key = t2.key SETTINGS any_join_distinct_right_table_keys = 1; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM t1 JOIN t2 USING (key) SETTINGS join_use_nulls = 1; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM ( SELECT key, sum(val) AS val FROM t1 GROUP BY key WITH TOTALS ) as t1\nJOIN ( SELECT key, sum(val) AS val FROM t2 GROUP BY key WITH TOTALS ) as t2 ON t1.key = t2.key; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM t1 JOIN ( SELECT key, sum(val) AS val FROM t2 GROUP BY key WITH TOTALS ) as t2 ON t1.key = t2.key; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM ( SELECT key, sum(val) AS val FROM t1 GROUP BY key WITH TOTALS ) as t1 JOIN t2 ON t1.key = t2.key; -- { serverError NOT_IMPLEMENTED }\n\nDROP TABLE IF EXISTS t1;\nDROP TABLE IF EXISTS t2;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS t1;\nDROP TABLE IF EXISTS t2;\n\nCREATE TABLE t1 (key UInt32, val UInt32) ENGINE = Memory;\nINSERT INTO t1 VALUES (1, 1);\n\nCREATE TABLE t2 (key UInt32, val UInt32) ENGINE = Memory;\nINSERT INTO t2 VALUES (1, 2);\n\nSET join_algorithm = 'full_sorting_merge';\n\nSELECT * FROM t1 JOIN t2 ON t1.key = t2.key AND t2.key > 0; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM t1 JOIN t2 ON t1.key = t2.key AND t1.key > 0; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM t1 JOIN t2 ON t1.key = t2.key OR t1.val = t2.key; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM t1 ANTI JOIN t2 ON t1.key = t2.key; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM t1 SEMI JOIN t2 ON t1.key = t2.key; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM t1 ASOF JOIN t2 ON t1.key = t2.key AND t1.val > t2.val; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM t1 ANY JOIN t2 ON t1.key = t2.key SETTINGS any_join_distinct_right_table_keys = 1; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM t1 JOIN t2 USING (key) SETTINGS join_use_nulls = 1; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM ( SELECT key, sum(val) AS val FROM t1 GROUP BY key WITH TOTALS ) as t1\nJOIN ( SELECT key, sum(val) AS val FROM t2 GROUP BY key WITH TOTALS ) as t2 ON t1.key = t2.key; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM t1 JOIN ( SELECT key, sum(val) AS val FROM t2 GROUP BY key WITH TOTALS ) as t2 ON t1.key = t2.key; -- { serverError NOT_IMPLEMENTED }\n\nSELECT * FROM ( SELECT key, sum(val) AS val FROM t1 GROUP BY key WITH TOTALS ) as t1 JOIN t2 ON t1.key = t2.key; -- { serverError NOT_IMPLEMENTED }\n\nDROP TABLE IF EXISTS t1;\nDROP TABLE IF EXISTS t2;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02291_dictionary_scalar_subquery_reload.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS test_dictionary_source_table;\nCREATE TABLE test_dictionary_source_table\n(\n    id UInt64,\n    value String\n) ENGINE = TinyLog;\n\nDROP TABLE IF EXISTS test_dictionary_view;\nCREATE VIEW test_dictionary_view\n(\n    id UInt64,\n    value String\n) AS SELECT id, value FROM test_dictionary_source_table WHERE id = (SELECT max(id) FROM test_dictionary_source_table);\n\nINSERT INTO test_dictionary_source_table VALUES (1, '1'), (2, '2'), (3, '3');\n\nDROP DICTIONARY IF EXISTS test_dictionary;\nCREATE DICTIONARY test_dictionary\n(\n    id UInt64,\n    value String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'test_dictionary_view'))\nLIFETIME(MIN 0 MAX 1)\nLAYOUT(FLAT());\n\nSELECT * FROM test_dictionary;\n\nINSERT INTO test_dictionary_source_table VALUES (4, '4');\nSYSTEM RELOAD DICTIONARY test_dictionary;\n\nSELECT * FROM test_dictionary;\n\nDROP DICTIONARY test_dictionary;\nDROP VIEW test_dictionary_view;\nDROP TABLE test_dictionary_source_table;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS test_dictionary_source_table;\nCREATE TABLE test_dictionary_source_table\n(\n    id UInt64,\n    value String\n) ENGINE = TinyLog;\n\nDROP TABLE IF EXISTS test_dictionary_view;\nCREATE VIEW test_dictionary_view\n(\n    id UInt64,\n    value String\n) AS SELECT id, value FROM test_dictionary_source_table WHERE id = (SELECT max(id) FROM test_dictionary_source_table);\n\nINSERT INTO test_dictionary_source_table VALUES (1, '1'), (2, '2'), (3, '3');\n\nDROP DICTIONARY IF EXISTS test_dictionary;\nCREATE DICTIONARY test_dictionary\n(\n    id UInt64,\n    value String\n)\nPRIMARY KEY id\nSOURCE(CLICKHOUSE(TABLE 'test_dictionary_view'))\nLIFETIME(MIN 0 MAX 1)\nLAYOUT(FLAT());\n\nSELECT * FROM test_dictionary;\n\nINSERT INTO test_dictionary_source_table VALUES (4, '4');\nSYSTEM RELOAD DICTIONARY test_dictionary;\n\nSELECT * FROM test_dictionary;\n\nDROP DICTIONARY test_dictionary;\nDROP VIEW test_dictionary_view;\nDROP TABLE test_dictionary_source_table;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02346_additional_filters.sql,clickhouse,"[{'query': ""-- Tags: distributed\ndrop table if exists table_1;\ndrop table if exists table_2;\ndrop table if exists v_numbers;\ndrop table if exists mv_table;\n\ncreate table table_1 (x UInt32, y String) engine = MergeTree order by x;\ninsert into table_1 values (1, 'a'), (2, 'bb'), (3, 'ccc'), (4, 'dddd');\n\nCREATE TABLE distr_table (x UInt32, y String) ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), 'table_1');\n\n-- { echoOn }\n\nselect * from table_1;\nselect * from table_1 settings additional_table_filters={'table_1' : 'x != 2'};\nselect * from table_1 settings additional_table_filters={'table_1' : 'x != 2 and x != 3'};\nselect x from table_1 settings additional_table_filters={'table_1' : 'x != 2'};\nselect y from table_1 settings additional_table_filters={'table_1' : 'x != 2'};\nselect * from table_1 where x != 3 settings additional_table_filters={'table_1' : 'x != 2'};\nselect * from table_1 prewhere x != 4 settings additional_table_filters={'table_1' : 'x != 2'};\nselect * from table_1 prewhere x != 4 where x != 3 settings additional_table_filters={'table_1' : 'x != 2'};\nselect x from table_1 where x != 3 settings additional_table_filters={'table_1' : 'x != 2'};\nselect x from table_1 prewhere x != 4 settings additional_table_filters={'table_1' : 'x != 2'};\nselect x from table_1 prewhere x != 4 where x != 3 settings additional_table_filters={'table_1' : 'x != 2'};\nselect y from table_1 where x != 3 settings additional_table_filters={'table_1' : 'x != 2'};\nselect y from table_1 prewhere x != 4 settings additional_table_filters={'table_1' : 'x != 2'};\nselect y from table_1 prewhere x != 4 where x != 3 settings additional_table_filters={'table_1' : 'x != 2'};\nselect x from table_1 where x != 2 settings additional_table_filters={'table_1' : 'x != 2'};\nselect x from table_1 prewhere x != 2 settings additional_table_filters={'table_1' : 'x != 2'};\nselect x from table_1 prewhere x != 2 where x != 2 settings additional_table_filters={'table_1' : 'x != 2'};\n\nselect * from remote('127.0.0.{1,2}', system.one) settings additional_table_filters={'system.one' : 'dummy = 0'};\nselect * from remote('127.0.0.{1,2}', system.one) settings additional_table_filters={'system.one' : 'dummy != 0'};\n\nselect * from distr_table settings additional_table_filters={'distr_table' : 'x = 2'};\nselect * from distr_table settings additional_table_filters={'distr_table' : 'x != 2 and x != 3'};\n\nselect * from system.numbers limit 5;\nselect * from system.numbers as t limit 5 settings additional_table_filters={'t' : 'number % 2 != 0'};\nselect * from system.numbers limit 5 settings additional_table_filters={'system.numbers' : 'number != 3'};\nselect * from system.numbers limit 5 settings additional_table_filters={'system.numbers':'number != 3','table_1':'x!=2'};\nselect * from (select number from system.numbers limit 5 union all select x from table_1) order by number settings additional_table_filters={'system.numbers':'number != 3','table_1':'x!=2'};\nselect number, x, y from (select number from system.numbers limit 5) f any left join (select x, y from table_1) s on f.number = s.x settings additional_table_filters={'system.numbers' : 'number != 3', 'table_1' : 'x != 2'};\nselect b + 1 as c from (select a + 1 as b from (select x + 1 as a from table_1)) settings additional_table_filters={'table_1' : 'x != 2 and x != 3'};\n\n-- { echoOff }\n\ncreate view v_numbers as select number + 1 as x from system.numbers limit 5;\n\n-- { echoOn }\nselect * from v_numbers;\nselect * from v_numbers settings additional_table_filters={'system.numbers' : 'number != 3'};\nselect * from v_numbers settings additional_table_filters={'v_numbers' : 'x != 3'};\nselect * from v_numbers settings additional_table_filters={'system.numbers' : 'number != 3', 'v_numbers' : 'x != 3'};\n\n-- { echoOff }\n\ncreate table table_2 (x UInt32, y String) engine = MergeTree order by x;\ninsert into table_2 values (4, 'dddd'), (5, 'eeeee'), (6, 'ffffff'), (7, 'ggggggg');\n\ncreate materialized view mv_table to table_2 (x UInt32, y String) as select * from table_1;\n\n-- additional filter for inner tables for Materialized View does not work because it does not create internal interpreter\n-- probably it is expected\n-- { echoOn }\nselect * from mv_table;\nselect * from mv_table settings additional_table_filters={'mv_table' : 'x != 5'};\nselect * from mv_table settings additional_table_filters={'table_1' : 'x != 5'};\nselect * from mv_table settings additional_table_filters={'table_2' : 'x != 5'};\n\n-- { echoOff }\n\ncreate table m_table (x UInt32, y String) engine = Merge(currentDatabase(), '^table_');\n\n-- additional filter for inner tables for Merge does not work because it does not create internal interpreter\n-- probably it is expected\n-- { echoOn }\nselect * from m_table order by x;\nselect * from m_table order by x settings additional_table_filters={'table_1' : 'x != 2'};\nselect * from m_table order by x  settings additional_table_filters={'table_2' : 'x != 5'};\nselect * from m_table order by x  settings additional_table_filters={'table_1' : 'x != 2', 'table_2' : 'x != 5'};\nselect * from m_table order by x  settings additional_table_filters={'table_1' : 'x != 4'};\nselect * from m_table order by x  settings additional_table_filters={'table_2' : 'x != 4'};\nselect * from m_table order by x  settings additional_table_filters={'table_1' : 'x != 4', 'table_2' : 'x != 4'};\nselect * from m_table order by x  settings additional_table_filters={'m_table' : 'x != 4'};\nselect * from m_table order by x  settings additional_table_filters={'m_table' : 'x != 4', 'table_1' : 'x != 2', 'table_2' : 'x != 5'};\n\n-- additional_result_filter\n\nselect * from table_1 settings additional_result_filter='x != 2';\nselect *, x != 2 from table_1 settings additional_result_filter='x != 2';\nselect * from table_1 where x != 1 settings additional_result_filter='x != 2';\nselect * from table_1 where x != 1 settings additional_result_filter='x != 2 and x != 3';\nselect * from table_1 prewhere x != 3 where x != 1 settings additional_result_filter='x != 2';\n\nselect * from table_1 limit 3 settings additional_result_filter='x != 2';\n\nselect x + 1 from table_1 settings additional_result_filter='`plus(x, 1)` != 2';\n\nselect * from (select x + 1 as a, y from table_1 union all select x as a, y from table_1) order by a, y settings additional_result_filter='a = 3';\nselect * from (select x + 1 as a, y from table_1 union all select x as a, y from table_1) order by a, y settings additional_result_filter='a != 3';\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql '-- Tags: distributed\ndrop table if exists table_1;\ndrop table if exists table_2;\ndrop table if exists v_numbers;\ndrop table if exists mv_table;\n\ncreate table table_1 (x UInt32, y String) engine = MergeTree order by x;\ninsert into table_1 values (1, 'a'), (2, 'bb'), (3, 'ccc'), (4, 'dddd');\n\nCREATE TABLE distr_table (x UInt32, y String) ENGINE = Distributed(test_cluster_two_shards, currentDatabase(), 'table_1');\n\n-- { echoOn }\n\nselect * from table_1;\nselect * from table_1 settings additional_table_filters={'table_1' : 'x != 2'};\nselect * from table_1 settings additional_table_filters={'table_1' : 'x != 2 and x != 3'};\nselect x from table_1 settings additional_table_filters={'table_1' : 'x != 2'};\nselect y from table_1 settings additional_table_filters={'table_1' : 'x != 2'};\nselect * from table_1 where x != 3 settings additional_table_filters={'table_1' : 'x != 2'};\nselect * from table_1 prewhere x != 4 settings additional_table_filters={'table_1' : 'x != 2'};\nselect * from table_1 prewhere x != 4 where x != 3 settings additional_table_filters={'table_1' : 'x != 2'};\nselect x from table_1 where x != 3 settings additional_table_filters={'table_1' : 'x != 2'};\nselect x from table_1 prewhere x != 4 settings additional_table_filters={'table_1' : 'x != 2'};\nselect x from table_1 prewhere x != 4 where x != 3 settings additional_table_filters={'table_1' : 'x != 2'};\nselect y from table_1 where x != 3 settings additional_table_filters={'table_1' : 'x != 2'};\nselect y from table_1 prewhere x != 4 settings additional_table_filters={'table_1' : 'x != 2'};\nselect y from table_1 prewhere x != 4 where x != 3 settings additional_table_filters={'table_1' : 'x != 2'};\nselect x from table_1 where x != 2 settings additional_table_filters={'table_1' : 'x != 2'};\nselect x from table_1 prewhere x != 2 settings additional_table_filters={'table_1' : 'x != 2'};\nselect x from table_1 prewhere x != 2 where x != 2 settings additional_table_filters={'table_1' : 'x != 2'};\n\nselect * from remote('127.0.0.{1,2}', system.one) settings additional_table_filters={'system.one' : 'dummy = 0'};\nselect * from remote('127.0.0.{1,2}', system.one) settings additional_table_filters={'system.one' : 'dummy != 0'};\n\nselect * from distr_table settings additional_table_filters={'distr_table' : 'x = 2'};\nselect * from distr_table settings additional_table_filters={'distr_table' : 'x != 2 and x != 3'};\n\nselect * from system.numbers limit 5;\nselect * from system.numbers as t limit 5 settings additional_table_filters={'t' : 'number % 2 != 0'};\nselect * from system.numbers limit 5 settings additional_table_filters={'system.numbers' : 'number != 3'};\nselect * from system.numbers limit 5 settings additional_table_filters={'system.numbers':'number != 3','table_1':'x!=2'};\nselect * from (select number from system.numbers limit 5 union all select x from table_1) order by number settings additional_table_filters={'system.numbers':'number != 3','table_1':'x!=2'};\nselect number, x, y from (select number from system.numbers limit 5) f any left join (select x, y from table_1) s on f.number = s.x settings additional_table_filters={'system.numbers' : 'number != 3', 'table_1' : 'x != 2'};\nselect b + 1 as c from (select a + 1 as b from (select x + 1 as a from table_1)) settings additional_table_filters={'table_1' : 'x != 2 and x != 3'};\n\n-- { echoOff }\n\ncreate view v_numbers as select number + 1 as x from system.numbers limit 5;\n\n-- { echoOn }\nselect * from v_numbers;\nselect * from v_numbers settings additional_table_filters={'system.numbers' : 'number != 3'};\nselect * from v_numbers settings additional_table_filters={'v_numbers' : 'x != 3'};\nselect * from v_numbers settings additional_table_filters={'system.numbers' : 'number != 3', 'v_numbers' : 'x != 3'};\n\n-- { echoOff }\n\ncreate table table_2 (x UInt32, y String) engine = MergeTree order by x;\ninsert into table_2 values (4, 'dddd'), (5, 'eeeee'), (6, 'ffffff'), (7, 'ggggggg');\n\ncreate materialized view mv_table to table_2 (x UInt32, y String) as select * from table_1;\n\n-- additional filter for inner tables for Materialized View does not work because it does not create internal interpreter\n-- probably it is expected\n-- { echoOn }\nselect * from mv_table;\nselect * from mv_table settings additional_table_filters={'mv_table' : 'x != 5'};\nselect * from mv_table settings additional_table_filters={'table_1' : 'x != 5'};\nselect * from mv_table settings additional_table_filters={'table_2' : 'x != 5'};\n\n-- { echoOff }\n\ncreate table m_table (x UInt32, y String) engine = Merge(currentDatabase(), '^table_');\n\n-- additional filter for inner tables for Merge does not work because it does not create internal interpreter\n-- probably it is expected\n-- { echoOn }\nselect * from m_table order by x;\nselect * from m_table order by x settings additional_table_filters={'table_1' : 'x != 2'};\nselect * from m_table order by x  settings additional_table_filters={'table_2' : 'x != 5'};\nselect * from m_table order by x  settings additional_table_filters={'table_1' : 'x != 2', 'table_2' : 'x != 5'};\nselect * from m_table order by x  settings additional_table_filters={'table_1' : 'x != 4'};\nselect * from m_table order by x  settings additional_table_filters={'table_2' : 'x != 4'};\nselect * from m_table order by x  settings additional_table_filters={'table_1' : 'x != 4', 'table_2' : 'x != 4'};\nselect * from m_table order by x  settings additional_table_filters={'m_table' : 'x != 4'};\nselect * from m_table order by x  settings additional_table_filters={'m_table' : 'x != 4', 'table_1' : 'x != 2', 'table_2' : 'x != 5'};\n\n-- additional_result_filter\n\nselect * from table_1 settings additional_result_filter='x != 2';\nselect *, x != 2 from table_1 settings additional_result_filter='x != 2';\nselect * from table_1 where x != 1 settings additional_result_filter='x != 2';\nselect * from table_1 where x != 1 settings additional_result_filter='x != 2 and x != 3';\nselect * from table_1 prewhere x != 3 where x != 1 settings additional_result_filter='x != 2';\n\nselect * from table_1 limit 3 settings additional_result_filter='x != 2';\n\nselect x + 1 from table_1 settings additional_result_filter='`plus(x, 1)` != 2';\n\nselect * from (select x + 1 as a, y from table_1 union all select x as a, y from table_1) order by a, y settings additional_result_filter='a = 3';\nselect * from (select x + 1 as a, y from table_1 union all select x as a, y from table_1) order by a, y settings additional_result_filter='a != 3';\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02346_additional_filters_distr.sql,clickhouse,"[{'query': ""-- Tags: no-parallel, distributed\n\ncreate database if not exists shard_0;\ncreate database if not exists shard_1;\n\ndrop table if exists dist_02346;\ndrop table if exists shard_0.data_02346;\ndrop table if exists shard_1.data_02346;\n\ncreate table shard_0.data_02346 (x UInt32, y String) engine = MergeTree order by x settings index_granularity = 2;\ninsert into shard_0.data_02346 values (1, 'a'), (2, 'bb'), (3, 'ccc'), (4, 'dddd');\n\ncreate table shard_1.data_02346 (x UInt32, y String) engine = MergeTree order by x settings index_granularity = 2;\ninsert into shard_1.data_02346 values (5, 'a'), (6, 'bb'), (7, 'ccc'), (8, 'dddd');\n\ncreate table dist_02346 (x UInt32, y String) engine=Distributed('test_cluster_two_shards_different_databases', /* default_database= */ '', data_02346);\n\nset max_rows_to_read=4;\n\nselect * from dist_02346 order by x settings additional_table_filters={'dist_02346' : 'x > 3 and x < 7'};\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- Tags: no-parallel, distributed\n\ncreate database if not exists shard_0;\ncreate database if not exists shard_1;\n\ndrop table if exists dist_02346;\ndrop table if exists shard_0.data_02346;\ndrop table if exists shard_1.data_02346;\n\ncreate table shard_0.data_02346 (x UInt32, y String) engine = MergeTree order by x settings index_granularity = 2;\ninsert into shard_0.data_02346 values (1, \'a\'), (2, \'bb\'), (3, \'ccc\'), (4, \'dddd\');\n\ncreate table shard_1.data_02346 (x UInt32, y String) engine = MergeTree order by x settings index_granularity = 2;\ninsert into shard_1.data_02346 values (5, \'a\'), (6, \'bb\'), (7, \'ccc\'), (8, \'dddd\');\n\ncreate table dist_02346 (x UInt32, y String) engine=Distributed(\'test_cluster_two_shards_different_databases\', /* default_database= */ \'\', data_02346);\n\nset max_rows_to_read=4;\n\nselect * from dist_02346 order by x settings additional_table_filters={\'dist_02346\' : \'x > 3 and x < 7\'};\n\': near ""database"": syntax error', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02347_rank_corr_nan.sql,clickhouse,"[{'query': 'SELECT rankCorr(number, nan) FROM numbers(10);\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 46 (end of query) (line 1, col 46): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'SELECT rankCorr(number, nan) FROM numbers(10);\n': no such table: numbers"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02347_rank_corr_size_overflow.sql,clickhouse,"[{'query': 'SELECT round(rankCorr(number, -number)) FROM numbers(5000000);\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 62 (end of query) (line 1, col 62): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'SELECT round(rankCorr(number, -number)) FROM numbers(5000000);\n': no such table: numbers"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02366_asof_optimize_predicate_bug_37813.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS t1;\nCREATE TABLE t1 (c1 Int32, c2 Int32) ENGINE MergeTree ORDER BY c1;\nINSERT INTO t1 (c1, c2) VALUES (1, 10), (1, 20), (1, 30);\n\nDROP TABLE IF EXISTS t2;\nCREATE TABLE t2 (c1 Int32, c2 Int32, c3 String) ENGINE MergeTree ORDER BY (c1, c2, c3);\nINSERT INTO t2 (c1, c2, c3) VALUES (1, 5, 'a'), (1, 15, 'b'), (1, 25, 'c');\n\nSET enable_optimize_predicate_expression = 1;\nWITH\n  v1 AS (SELECT t1.c2, t2.c2, t2.c3 FROM t1 ASOF JOIN t2 USING (c1, c2))\n  SELECT count() FROM v1 WHERE c3 = 'b';\n\nSET enable_optimize_predicate_expression = 0;\nWITH\n  v1 AS (SELECT t1.c2, t2.c2, t2.c3 FROM t1 ASOF JOIN t2 USING (c1, c2))\n  SELECT count() FROM v1 WHERE c3 = 'b';\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS t1;\nCREATE TABLE t1 (c1 Int32, c2 Int32) ENGINE MergeTree ORDER BY c1;\nINSERT INTO t1 (c1, c2) VALUES (1, 10), (1, 20), (1, 30);\n\nDROP TABLE IF EXISTS t2;\nCREATE TABLE t2 (c1 Int32, c2 Int32, c3 String) ENGINE MergeTree ORDER BY (c1, c2, c3);\nINSERT INTO t2 (c1, c2, c3) VALUES (1, 5, 'a'), (1, 15, 'b'), (1, 25, 'c');\n\nSET enable_optimize_predicate_expression = 1;\nWITH\n  v1 AS (SELECT t1.c2, t2.c2, t2.c3 FROM t1 ASOF JOIN t2 USING (c1, c2))\n  SELECT count() FROM v1 WHERE c3 = 'b';\n\nSET enable_optimize_predicate_expression = 0;\nWITH\n  v1 AS (SELECT t1.c2, t2.c2, t2.c3 FROM t1 ASOF JOIN t2 USING (c1, c2))\n  SELECT count() FROM v1 WHERE c3 = 'b';\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02366_kql_distinct.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS Customers;\nCREATE TABLE Customers\n(    \n    FirstName Nullable(String),\n    LastName String, \n    Occupation String,\n    Education String,\n    Age Nullable(UInt8)\n) ENGINE = Memory;\n\nINSERT INTO Customers VALUES ('Theodore','Diaz','Skilled Manual','Bachelors',28), ('Stephanie','Cox','Management abcd defg','Bachelors',33),('Peter','Nara','Skilled Manual','Graduate Degree',26),('Latoya','Shen','Professional','Graduate Degree',25),('Apple','','Skilled Manual','Bachelors',28),(NULL,'why','Professional','Partial College',38);\n\nset dialect = 'kusto';\n\nprint '--  distinct * --';\nCustomers | distinct *;\n\nprint '--  distinct one column --';\nCustomers | distinct Occupation;\n\nprint '--  distinct two column --';\nCustomers | distinct Occupation, Education;\n\nprint '--  distinct with where --';\nCustomers where Age <30 | distinct Occupation, Education;\n\nprint '--  distinct with where, order --';\nCustomers |where Age <30 | order by Age| distinct Occupation, Education;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS Customers;\nCREATE TABLE Customers\n(    \n    FirstName Nullable(String),\n    LastName String, \n    Occupation String,\n    Education String,\n    Age Nullable(UInt8)\n) ENGINE = Memory;\n\nINSERT INTO Customers VALUES ('Theodore','Diaz','Skilled Manual','Bachelors',28), ('Stephanie','Cox','Management abcd defg','Bachelors',33),('Peter','Nara','Skilled Manual','Graduate Degree',26),('Latoya','Shen','Professional','Graduate Degree',25),('Apple','','Skilled Manual','Bachelors',28),(NULL,'why','Professional','Partial College',38);\n\nset dialect = 'kusto';\n\nprint '--  distinct * --';\nCustomers | distinct *;\n\nprint '--  distinct one column --';\nCustomers | distinct Occupation;\n\nprint '--  distinct two column --';\nCustomers | distinct Occupation, Education;\n\nprint '--  distinct with where --';\nCustomers where Age <30 | distinct Occupation, Education;\n\nprint '--  distinct with where, order --';\nCustomers |where Age <30 | order by Age| distinct Occupation, Education;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02377_majority_insert_quorum_zookeeper_long.sql,clickhouse,"[{'query': ""-- Tags: long, zookeeper, no-replicated-database\n\n-- no-replicated-database:\n--   The number of replicas is doubled, so `SYSTEM STOP FETCHES` stop not enough replicas.\n\nSET insert_quorum_parallel = false;\n\nSET select_sequential_consistency = 1;\n\nDROP TABLE IF EXISTS quorum1;\nDROP TABLE IF EXISTS quorum2;\nDROP TABLE IF EXISTS quorum3;\n\nCREATE TABLE quorum1(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02377/quorum', '1') ORDER BY x PARTITION BY y;\nCREATE TABLE quorum2(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02377/quorum', '2') ORDER BY x PARTITION BY y;\n\n-- insert_quorum = n/2 + 1 , so insert will be written to both replica\nSET insert_quorum = 'auto';\nSET insert_keeper_fault_injection_probability=0;\n\nINSERT INTO quorum1 VALUES (1, '2018-11-15');\nINSERT INTO quorum1 VALUES (2, '2018-11-15');\nINSERT INTO quorum1 VALUES (3, '2018-12-16');\n\nSELECT x FROM quorum1 ORDER BY x;\nSELECT x FROM quorum2 ORDER BY x;\n\nDROP TABLE quorum1;\nDROP TABLE quorum2;\n\n-- Create 3 replicas and stop sync 2 replicas\nCREATE TABLE quorum1(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02377/quorum1', '1') ORDER BY x PARTITION BY y;\nCREATE TABLE quorum2(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02377/quorum1', '2') ORDER BY x PARTITION BY y;\nCREATE TABLE quorum3(x UInt32, y Date) ENGINE ReplicatedMergeTree('/clickhouse/tables/{database}/test_02377/quorum1', '3') ORDER BY x PARTITION BY y;\n\n-- Insert should be successful\n-- stop replica 3\nSYSTEM STOP FETCHES quorum3;\nINSERT INTO quorum1 VALUES (1, '2018-11-15');\nSELECT x FROM quorum1 ORDER BY x;\nSELECT x FROM quorum2 ORDER BY x;\nSELECT x FROM quorum3 ORDER BY x; -- {serverError REPLICA_IS_NOT_IN_QUORUM}\n\n-- Sync replica 3\nSYSTEM START FETCHES quorum3;\nSYSTEM SYNC REPLICA quorum3;\nSELECT x FROM quorum3 ORDER BY x;\n\n-- Stop 2 replicas , so insert wont be successful\nSYSTEM STOP FETCHES quorum2;\nSYSTEM STOP FETCHES quorum3;\nSET insert_quorum_timeout = 5000;\nINSERT INTO quorum1 VALUES (2, '2018-11-15'); -- { serverError UNKNOWN_STATUS_OF_INSERT }\nSELECT x FROM quorum1 ORDER BY x;\nSELECT x FROM quorum2 ORDER BY x;\nSELECT x FROM quorum3 ORDER BY x;\n\n-- Sync replica 2 and 3\nSYSTEM START FETCHES quorum2;\nSYSTEM SYNC REPLICA quorum2;\nSYSTEM START FETCHES quorum3;\nSYSTEM SYNC REPLICA quorum3;\n\nSET insert_quorum_timeout = 600000; -- set default value back\nINSERT INTO quorum1 VALUES (3, '2018-11-15');\nSELECT x FROM quorum1 ORDER BY x;\nSYSTEM SYNC REPLICA quorum2;\nSYSTEM SYNC REPLICA quorum3;\nSELECT x FROM quorum2 ORDER BY x;\nSELECT x FROM quorum3 ORDER BY x;\n\nDROP TABLE quorum1;\nDROP TABLE quorum2;\nDROP TABLE quorum3;\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 199 (line 6, col 30): false\n FORMAT Native. Expected one of: string literal, literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- Tags: long, zookeeper, no-replicated-database\n\n-- no-replicated-database:\n--   The number of replicas is doubled, so `SYSTEM STOP FETCHES` stop not enough replicas.\n\nSET insert_quorum_parallel = false;\n\nSET select_sequential_consistency = 1;\n\nDROP TABLE IF EXISTS quorum1;\nDROP TABLE IF EXISTS quorum2;\nDROP TABLE IF EXISTS quorum3;\n\nCREATE TABLE quorum1(x UInt32, y Date) ENGINE ReplicatedMergeTree(\'/clickhouse/tables/{database}/test_02377/quorum\', \'1\') ORDER BY x PARTITION BY y;\nCREATE TABLE quorum2(x UInt32, y Date) ENGINE ReplicatedMergeTree(\'/clickhouse/tables/{database}/test_02377/quorum\', \'2\') ORDER BY x PARTITION BY y;\n\n-- insert_quorum = n/2 + 1 , so insert will be written to both replica\nSET insert_quorum = \'auto\';\nSET insert_keeper_fault_injection_probability=0;\n\nINSERT INTO quorum1 VALUES (1, \'2018-11-15\');\nINSERT INTO quorum1 VALUES (2, \'2018-11-15\');\nINSERT INTO quorum1 VALUES (3, \'2018-12-16\');\n\nSELECT x FROM quorum1 ORDER BY x;\nSELECT x FROM quorum2 ORDER BY x;\n\nDROP TABLE quorum1;\nDROP TABLE quorum2;\n\n-- Create 3 replicas and stop sync 2 replicas\nCREATE TABLE quorum1(x UInt32, y Date) ENGINE ReplicatedMergeTree(\'/clickhouse/tables/{database}/test_02377/quorum1\', \'1\') ORDER BY x PARTITION BY y;\nCREATE TABLE quorum2(x UInt32, y Date) ENGINE ReplicatedMergeTree(\'/clickhouse/tables/{database}/test_02377/quorum1\', \'2\') ORDER BY x PARTITION BY y;\nCREATE TABLE quorum3(x UInt32, y Date) ENGINE ReplicatedMergeTree(\'/clickhouse/tables/{database}/test_02377/quorum1\', \'3\') ORDER BY x PARTITION BY y;\n\n-- Insert should be successful\n-- stop replica 3\nSYSTEM STOP FETCHES quorum3;\nINSERT INTO quorum1 VALUES (1, \'2018-11-15\');\nSELECT x FROM quorum1 ORDER BY x;\nSELECT x FROM quorum2 ORDER BY x;\nSELECT x FROM quorum3 ORDER BY x; -- {serverError REPLICA_IS_NOT_IN_QUORUM}\n\n-- Sync replica 3\nSYSTEM START FETCHES quorum3;\nSYSTEM SYNC REPLICA quorum3;\nSELECT x FROM quorum3 ORDER BY x;\n\n-- Stop 2 replicas , so insert wont be successful\nSYSTEM STOP FETCHES quorum2;\nSYSTEM STOP FETCHES quorum3;\nSET insert_quorum_timeout = 5000;\nINSERT INTO quorum1 VALUES (2, \'2018-11-15\'); -- { serverError UNKNOWN_STATUS_OF_INSERT }\nSELECT x FROM quorum1 ORDER BY x;\nSELECT x FROM quorum2 ORDER BY x;\nSELECT x FROM quorum3 ORDER BY x;\n\n-- Sync replica 2 and 3\nSYSTEM START FETCHES quorum2;\nSYSTEM SYNC REPLICA quorum2;\nSYSTEM START FETCHES quorum3;\nSYSTEM SYNC REPLICA quorum3;\n\nSET insert_quorum_timeout = 600000; -- set default value back\nINSERT INTO quorum1 VALUES (3, \'2018-11-15\');\nSELECT x FROM quorum1 ORDER BY x;\nSYSTEM SYNC REPLICA quorum2;\nSYSTEM SYNC REPLICA quorum3;\nSELECT x FROM quorum2 ORDER BY x;\nSELECT x FROM quorum3 ORDER BY x;\n\nDROP TABLE quorum1;\nDROP TABLE quorum2;\nDROP TABLE quorum3;\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02418_keeper_map_keys_limit.sql,clickhouse,"[{'query': ""-- Tags: no-ordinary-database, no-fasttest\n\nDROP TABLE IF EXISTS 02418_test SYNC;\n\nCREATE TABLE 02418_test (key UInt64, value Float64) Engine=KeeperMap('/' || currentDatabase() || '/test2418', 3) PRIMARY KEY(key);\n\nINSERT INTO 02418_test VALUES (1, 1.1), (2, 2.2);\nSELECT count() FROM 02418_test;\n\nINSERT INTO 02418_test VALUES (3, 3.3), (4, 4.4); -- { serverError LIMIT_EXCEEDED }\n\nINSERT INTO 02418_test VALUES (1, 2.1), (2, 3.2), (3, 3.3);\nSELECT count() FROM 02418_test;\n\nCREATE TABLE 02418_test_another (key UInt64, value Float64) Engine=KeeperMap('/' || currentDatabase() || '/test2418', 4) PRIMARY KEY(key);\nINSERT INTO 02418_test VALUES (4, 4.4); -- { serverError LIMIT_EXCEEDED }\nINSERT INTO 02418_test_another VALUES (4, 4.4);\n\nSELECT count() FROM 02418_test;\nSELECT count() FROM 02418_test_another;\n\nDELETE FROM 02418_test WHERE key <= 2;\nINSERT INTO 02418_test VALUES (1, 1.1);\nINSERT INTO 02418_test VALUES (2, 1.1); -- { serverError LIMIT_EXCEEDED }\n\nSELECT count() FROM 02418_test;\nSELECT count() FROM 02418_test_another;\n\nDROP TABLE 02418_test SYNC;\nDROP TABLE 02418_test_another SYNC;\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 66 (line 3, col 22): 02418_test SYNC\n FORMAT Native. Wrong number, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- Tags: no-ordinary-database, no-fasttest\n\nDROP TABLE IF EXISTS 02418_test SYNC;\n\nCREATE TABLE 02418_test (key UInt64, value Float64) Engine=KeeperMap(\'/\' || currentDatabase() || \'/test2418\', 3) PRIMARY KEY(key);\n\nINSERT INTO 02418_test VALUES (1, 1.1), (2, 2.2);\nSELECT count() FROM 02418_test;\n\nINSERT INTO 02418_test VALUES (3, 3.3), (4, 4.4); -- { serverError LIMIT_EXCEEDED }\n\nINSERT INTO 02418_test VALUES (1, 2.1), (2, 3.2), (3, 3.3);\nSELECT count() FROM 02418_test;\n\nCREATE TABLE 02418_test_another (key UInt64, value Float64) Engine=KeeperMap(\'/\' || currentDatabase() || \'/test2418\', 4) PRIMARY KEY(key);\nINSERT INTO 02418_test VALUES (4, 4.4); -- { serverError LIMIT_EXCEEDED }\nINSERT INTO 02418_test_another VALUES (4, 4.4);\n\nSELECT count() FROM 02418_test;\nSELECT count() FROM 02418_test_another;\n\nDELETE FROM 02418_test WHERE key <= 2;\nINSERT INTO 02418_test VALUES (1, 1.1);\nINSERT INTO 02418_test VALUES (2, 1.1); -- { serverError LIMIT_EXCEEDED }\n\nSELECT count() FROM 02418_test;\nSELECT count() FROM 02418_test_another;\n\nDROP TABLE 02418_test SYNC;\nDROP TABLE 02418_test_another SYNC;\n\': unrecognized token: ""02418_test""', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02428_partial_sort_optimization_bug.sql,clickhouse,"[{'query': 'create table partial_sort_opt_bug (x UInt64) engine = MergeTree order by tuple() settings index_granularity = 1000;\n\ninsert into partial_sort_opt_bug select number + 100000 from numbers(4000);\n\ninsert into partial_sort_opt_bug select number from numbers(1000);\ninsert into partial_sort_opt_bug select number + 200000 from numbers(3000);\ninsert into partial_sort_opt_bug select number + 1000 from numbers(4000);\noptimize table partial_sort_opt_bug final;\n\nselect x from partial_sort_opt_bug order by x limit 2000 settings max_block_size = 4000;\n\n', 'source_success': False, 'source_exception': "":HTTPDriver for http://localhost:8123 returned response code 404)\n Code: 81, e.displayText() = DB::Exception: Database default doesn't exist, e.what() = DB::Exception\n"", 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'create table partial_sort_opt_bug (x UInt64) engine = MergeTree order by tuple() settings index_granularity = 1000;\n\ninsert into partial_sort_opt_bug select number + 100000 from numbers(4000);\n\ninsert into partial_sort_opt_bug select number from numbers(1000);\ninsert into partial_sort_opt_bug select number + 200000 from numbers(3000);\ninsert into partial_sort_opt_bug select number + 1000 from numbers(4000);\noptimize table partial_sort_opt_bug final;\n\nselect x from partial_sort_opt_bug order by x limit 2000 settings max_block_size = 4000;\n\n\': near ""="": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02494_query_cache_query_log.sql,clickhouse,"[{'query': ""-- Tags: no-parallel\n-- Tag no-parallel: Messes with internal cache\n\nSYSTEM DROP QUERY CACHE;\n\n-- DROP TABLE system.query_log; -- debugging\n\n\n\nSELECT '-- Run a query with query cache not enabled';\nSELECT 124437993;\n\nSYSTEM FLUSH LOGS;\n\n-- Field 'query_cache_usage' should be 'None'\nSELECT type, query, query_cache_usage\nFROM system.query_log\nWHERE current_database = currentDatabase()\n    AND query = 'SELECT 124437993;'\n    AND type = 'QueryFinish'\nORDER BY type, query_cache_usage;\n\n\n\nSELECT '-- Run a query with query cache enabled';\nSELECT 124437994 SETTINGS use_query_cache = 1;\n\nSYSTEM FLUSH LOGS;\n\n-- Field 'query_cache_usage' should be 'Write'\nSELECT type, query, query_cache_usage\nFROM system.query_log\nWHERE current_database = currentDatabase()\n    AND query = 'SELECT 124437994 SETTINGS use_query_cache = 1;'\n    AND type = 'QueryFinish'\nORDER BY type, query_cache_usage;\n\n\n\nSELECT '-- Run the same query with query cache enabled';\nSELECT 124437994 SETTINGS use_query_cache = 1;\n\nSYSTEM FLUSH LOGS;\n\n-- Field 'query_cache_usage' should be 'Read'\nSELECT type, query, query_cache_usage\nFROM system.query_log\nWHERE current_database = currentDatabase()\n    AND query = 'SELECT 124437994 SETTINGS use_query_cache = 1;'\n    AND type = 'QueryFinish'\nORDER BY type, query_cache_usage;\n\n\n\nSELECT '-- Throw exception with query cache enabled';\nSELECT 124437995, throwIf(1) SETTINGS use_query_cache = 1; -- { serverError FUNCTION_THROW_IF_VALUE_IS_NON_ZERO }\n\nSYSTEM FLUSH LOGS;\n\n-- Field 'query_cache_usage' should be 'None'\nSELECT query, query_cache_usage\nFROM system.query_log\nWHERE current_database = currentDatabase()\n    AND query = 'SELECT 124437995, throwIf(1) SETTINGS use_query_cache = 1;'\n    AND type = 'ExceptionWhileProcessing';\n\nSYSTEM DROP QUERY CACHE;\n"", 'source_success': False, 'source_exception': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 82 (line 4, col 13): QUERY CACHE\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- Tags: no-parallel\n-- Tag no-parallel: Messes with internal cache\n\nSYSTEM DROP QUERY CACHE;\n\n-- DROP TABLE system.query_log; -- debugging\n\n\n\nSELECT \'-- Run a query with query cache not enabled\';\nSELECT 124437993;\n\nSYSTEM FLUSH LOGS;\n\n-- Field \'query_cache_usage\' should be \'None\'\nSELECT type, query, query_cache_usage\nFROM system.query_log\nWHERE current_database = currentDatabase()\n    AND query = \'SELECT 124437993;\'\n    AND type = \'QueryFinish\'\nORDER BY type, query_cache_usage;\n\n\n\nSELECT \'-- Run a query with query cache enabled\';\nSELECT 124437994 SETTINGS use_query_cache = 1;\n\nSYSTEM FLUSH LOGS;\n\n-- Field \'query_cache_usage\' should be \'Write\'\nSELECT type, query, query_cache_usage\nFROM system.query_log\nWHERE current_database = currentDatabase()\n    AND query = \'SELECT 124437994 SETTINGS use_query_cache = 1;\'\n    AND type = \'QueryFinish\'\nORDER BY type, query_cache_usage;\n\n\n\nSELECT \'-- Run the same query with query cache enabled\';\nSELECT 124437994 SETTINGS use_query_cache = 1;\n\nSYSTEM FLUSH LOGS;\n\n-- Field \'query_cache_usage\' should be \'Read\'\nSELECT type, query, query_cache_usage\nFROM system.query_log\nWHERE current_database = currentDatabase()\n    AND query = \'SELECT 124437994 SETTINGS use_query_cache = 1;\'\n    AND type = \'QueryFinish\'\nORDER BY type, query_cache_usage;\n\n\n\nSELECT \'-- Throw exception with query cache enabled\';\nSELECT 124437995, throwIf(1) SETTINGS use_query_cache = 1; -- { serverError FUNCTION_THROW_IF_VALUE_IS_NON_ZERO }\n\nSYSTEM FLUSH LOGS;\n\n-- Field \'query_cache_usage\' should be \'None\'\nSELECT query, query_cache_usage\nFROM system.query_log\nWHERE current_database = currentDatabase()\n    AND query = \'SELECT 124437995, throwIf(1) SETTINGS use_query_cache = 1;\'\n    AND type = \'ExceptionWhileProcessing\';\n\nSYSTEM DROP QUERY CACHE;\n\': near ""SYSTEM"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02504_parse_datetime_best_effort_calebeaires.sql,clickhouse,"[{'query': ""CREATE TEMPORARY TABLE my_table (col_date Date, col_date32 Date32, col_datetime DateTime('UTC'), col_datetime32 DateTime32('UTC'), col_datetime64 DateTime64);\ninsert into `my_table` (`col_date`, `col_date32`, `col_datetime`, `col_datetime32`, `col_datetime64`) values (parseDateTime64BestEffort('1969-01-01'), '1969-01-01', parseDateTime64BestEffort('1969-01-01 10:42:00'), parseDateTime64BestEffort('1969-01-01 10:42:00'), parseDateTime64BestEffort('1969-01-01 10:42:00'));\n\n-- The values for Date32 and DateTime64 will be year 1969, while the values of Date, DateTime will contain a value affected by implementation-defined overflow and can be arbitrary.\nSELECT toYear(col_date), col_date32, toYear(col_datetime), toYear(col_datetime32), col_datetime64 FROM my_table;\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 404)\n Code: 50, e.displayText() = DB::Exception: Unknown data type family: Date32, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'CREATE TEMPORARY TABLE my_table (col_date Date, col_date32 Date32, col_datetime DateTime(\'UTC\'), col_datetime32 DateTime32(\'UTC\'), col_datetime64 DateTime64);\ninsert into `my_table` (`col_date`, `col_date32`, `col_datetime`, `col_datetime32`, `col_datetime64`) values (parseDateTime64BestEffort(\'1969-01-01\'), \'1969-01-01\', parseDateTime64BestEffort(\'1969-01-01 10:42:00\'), parseDateTime64BestEffort(\'1969-01-01 10:42:00\'), parseDateTime64BestEffort(\'1969-01-01 10:42:00\'));\n\n-- The values for Date32 and DateTime64 will be year 1969, while the values of Date, DateTime will contain a value affected by implementation-defined overflow and can be arbitrary.\nSELECT toYear(col_date), col_date32, toYear(col_datetime), toYear(col_datetime32), col_datetime64 FROM my_table;\n\': near ""\'UTC\'"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02507_to_unix_timestamp_overflow.sql,clickhouse,"[{'query': ""SELECT toUnixTimestamp(toDateTime64('1928-12-31 12:12:12.123', 3, 'UTC')); -- { serverError DECIMAL_OVERFLOW }\nSELECT toInt64(toDateTime64('1928-12-31 12:12:12.123', 3, 'UTC'));\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 404)\n Code: 46, e.displayText() = DB::Exception: Unknown function toDateTime64, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'SELECT toUnixTimestamp(toDateTime64('1928-12-31 12:12:12.123', 3, 'UTC')); -- { serverError DECIMAL_OVERFLOW }\nSELECT toInt64(toDateTime64('1928-12-31 12:12:12.123', 3, 'UTC'));\n': no such function: toDateTime64"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02515_tuple_lambda_parsing.sql,clickhouse,"[{'query': 'explain ast select tuple(a) -> f(a); -- { clientError SYNTAX_ERROR }\nexplain ast select tuple(a, b) -> f(a); -- { clientError SYNTAX_ERROR }\nexplain ast select (tuple(a)) -> f(a); -- { clientError SYNTAX_ERROR }\nexplain ast select (f(a)) -> f(a); -- { clientError SYNTAX_ERROR }\nexplain ast select (a::UInt64) -> f(a); -- { clientError SYNTAX_ERROR }\nexplain ast select (1) -> f(a); -- { clientError SYNTAX_ERROR }\nexplain ast select (1::UInt64) -> f(a); -- { clientError SYNTAX_ERROR }\n', 'source_success': False, 'source_exception': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): explain ast select tuple(a) -> f(a)\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'explain ast select tuple(a) -> f(a); -- { clientError SYNTAX_ERROR }\nexplain ast select tuple(a, b) -> f(a); -- { clientError SYNTAX_ERROR }\nexplain ast select (tuple(a)) -> f(a); -- { clientError SYNTAX_ERROR }\nexplain ast select (f(a)) -> f(a); -- { clientError SYNTAX_ERROR }\nexplain ast select (a::UInt64) -> f(a); -- { clientError SYNTAX_ERROR }\nexplain ast select (1) -> f(a); -- { clientError SYNTAX_ERROR }\nexplain ast select (1::UInt64) -> f(a); -- { clientError SYNTAX_ERROR }\n\': near ""ast"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02516_projections_and_context.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS test1__fuzz_37;\nCREATE TABLE test1__fuzz_37 (`i` Date) ENGINE = MergeTree ORDER BY i;\ninsert into test1__fuzz_37 values ('2020-10-10');\nset allow_experimental_analyzer = 0;\nSELECT count() FROM test1__fuzz_37 GROUP BY dictHas(NULL, (dictHas(NULL, (('', materialize(NULL)), materialize(NULL))), 'KeyKey')), dictHas('test_dictionary', tuple(materialize('Ke\\0'))), tuple(dictHas(NULL, (tuple('Ke\\0Ke\\0Ke\\0Ke\\0Ke\\0Ke\\0\\0\\0\\0Ke\\0'), materialize(NULL)))), 'test_dicti\\0nary', (('', materialize(NULL)), dictHas(NULL, (dictHas(NULL, tuple(materialize(NULL))), 'KeyKeyKeyKeyKeyKeyKeyKey')), materialize(NULL)); -- { serverError BAD_ARGUMENTS }\nSELECT count() FROM test1__fuzz_37 GROUP BY dictHas('non_existing_dictionary', materialize('a')); -- { serverError BAD_ARGUMENTS }\nset allow_experimental_analyzer = 1;\nSELECT count() FROM test1__fuzz_37 GROUP BY dictHas(NULL, (dictHas(NULL, (('', materialize(NULL)), materialize(NULL))), 'KeyKey')), dictHas('test_dictionary', tuple(materialize('Ke\\0'))), tuple(dictHas(NULL, (tuple('Ke\\0Ke\\0Ke\\0Ke\\0Ke\\0Ke\\0\\0\\0\\0Ke\\0'), materialize(NULL)))), 'test_dicti\\0nary', (('', materialize(NULL)), dictHas(NULL, (dictHas(NULL, tuple(materialize(NULL))), 'KeyKeyKeyKeyKeyKeyKeyKey')), materialize(NULL)); -- { serverError BAD_ARGUMENTS }\nSELECT count() FROM test1__fuzz_37 GROUP BY dictHas('non_existing_dictionary', materialize('a')); -- { serverError BAD_ARGUMENTS }\nDROP TABLE test1__fuzz_37;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS test1__fuzz_37;\nCREATE TABLE test1__fuzz_37 (`i` Date) ENGINE = MergeTree ORDER BY i;\ninsert into test1__fuzz_37 values ('2020-10-10');\nset allow_experimental_analyzer = 0;\nSELECT count() FROM test1__fuzz_37 GROUP BY dictHas(NULL, (dictHas(NULL, (('', materialize(NULL)), materialize(NULL))), 'KeyKey')), dictHas('test_dictionary', tuple(materialize('Ke\\0'))), tuple(dictHas(NULL, (tuple('Ke\\0Ke\\0Ke\\0Ke\\0Ke\\0Ke\\0\\0\\0\\0Ke\\0'), materialize(NULL)))), 'test_dicti\\0nary', (('', materialize(NULL)), dictHas(NULL, (dictHas(NULL, tuple(materialize(NULL))), 'KeyKeyKeyKeyKeyKeyKeyKey')), materialize(NULL)); -- { serverError BAD_ARGUMENTS }\nSELECT count() FROM test1__fuzz_37 GROUP BY dictHas('non_existing_dictionary', materialize('a')); -- { serverError BAD_ARGUMENTS }\nset allow_experimental_analyzer = 1;\nSELECT count() FROM test1__fuzz_37 GROUP BY dictHas(NULL, (dictHas(NULL, (('', materialize(NULL)), materialize(NULL))), 'KeyKey')), dictHas('test_dictionary', tuple(materialize('Ke\\0'))), tuple(dictHas(NULL, (tuple('Ke\\0Ke\\0Ke\\0Ke\\0Ke\\0Ke\\0\\0\\0\\0Ke\\0'), materialize(NULL)))), 'test_dicti\\0nary', (('', materialize(NULL)), dictHas(NULL, (dictHas(NULL, tuple(materialize(NULL))), 'KeyKeyKeyKeyKeyKeyKeyKey')), materialize(NULL)); -- { serverError BAD_ARGUMENTS }\nSELECT count() FROM test1__fuzz_37 GROUP BY dictHas('non_existing_dictionary', materialize('a')); -- { serverError BAD_ARGUMENTS }\nDROP TABLE test1__fuzz_37;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02521_lightweight_delete_and_ttl.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS lwd_test_02521;\n\nCREATE TABLE lwd_test_02521 (id UInt64, value String, event_time DateTime)\nENGINE MergeTree()\nORDER BY id\nSETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192, index_granularity_bytes = '10Mi';\n\nINSERT INTO lwd_test_02521 SELECT number, randomString(10), now() - INTERVAL 2 MONTH FROM numbers(50000);\nINSERT INTO lwd_test_02521 SELECT number, randomString(10), now() FROM numbers(50000);\n\nOPTIMIZE TABLE lwd_test_02521 FINAL SETTINGS mutations_sync = 1;\n\nSET mutations_sync=1;\n\n-- { echoOn }\nSELECT 'Rows in parts', SUM(rows) FROM system.parts WHERE database = currentDatabase() AND table = 'lwd_test_02521' AND active;\nSELECT 'Count', count() FROM lwd_test_02521;\n\n\nDELETE FROM lwd_test_02521 WHERE id < 25000;\n\nSELECT 'Rows in parts', SUM(rows) FROM system.parts WHERE database = currentDatabase() AND table = 'lwd_test_02521' AND active;\nSELECT 'Count', count() FROM lwd_test_02521;\n\n\nALTER TABLE lwd_test_02521 MODIFY TTL event_time + INTERVAL 1 MONTH SETTINGS mutations_sync = 1;\n\nSELECT 'Rows in parts', SUM(rows) FROM system.parts WHERE database = currentDatabase() AND table = 'lwd_test_02521' AND active;\nSELECT 'Count', count() FROM lwd_test_02521;\n\n\nALTER TABLE lwd_test_02521 DELETE WHERE id >= 40000 SETTINGS mutations_sync = 1;\n\nSELECT 'Rows in parts', SUM(rows) FROM system.parts WHERE database = currentDatabase() AND table = 'lwd_test_02521' AND active;\nSELECT 'Count', count() FROM lwd_test_02521;\n\n\nOPTIMIZE TABLE lwd_test_02521 FINAL SETTINGS mutations_sync = 1;\n\nSELECT 'Rows in parts', SUM(rows) FROM system.parts WHERE database = currentDatabase() AND table = 'lwd_test_02521' AND active;\nSELECT 'Count', count() FROM lwd_test_02521;\n\n-- { echoOff }\n\nDROP TABLE lwd_test_02521;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS lwd_test_02521;\n\nCREATE TABLE lwd_test_02521 (id UInt64, value String, event_time DateTime)\nENGINE MergeTree()\nORDER BY id\nSETTINGS min_bytes_for_wide_part = 0, index_granularity = 8192, index_granularity_bytes = '10Mi';\n\nINSERT INTO lwd_test_02521 SELECT number, randomString(10), now() - INTERVAL 2 MONTH FROM numbers(50000);\nINSERT INTO lwd_test_02521 SELECT number, randomString(10), now() FROM numbers(50000);\n\nOPTIMIZE TABLE lwd_test_02521 FINAL SETTINGS mutations_sync = 1;\n\nSET mutations_sync=1;\n\n-- { echoOn }\nSELECT 'Rows in parts', SUM(rows) FROM system.parts WHERE database = currentDatabase() AND table = 'lwd_test_02521' AND active;\nSELECT 'Count', count() FROM lwd_test_02521;\n\n\nDELETE FROM lwd_test_02521 WHERE id < 25000;\n\nSELECT 'Rows in parts', SUM(rows) FROM system.parts WHERE database = currentDatabase() AND table = 'lwd_test_02521' AND active;\nSELECT 'Count', count() FROM lwd_test_02521;\n\n\nALTER TABLE lwd_test_02521 MODIFY TTL event_time + INTERVAL 1 MONTH SETTINGS mutations_sync = 1;\n\nSELECT 'Rows in parts', SUM(rows) FROM system.parts WHERE database = currentDatabase() AND table = 'lwd_test_02521' AND active;\nSELECT 'Count', count() FROM lwd_test_02521;\n\n\nALTER TABLE lwd_test_02521 DELETE WHERE id >= 40000 SETTINGS mutations_sync = 1;\n\nSELECT 'Rows in parts', SUM(rows) FROM system.parts WHERE database = currentDatabase() AND table = 'lwd_test_02521' AND active;\nSELECT 'Count', count() FROM lwd_test_02521;\n\n\nOPTIMIZE TABLE lwd_test_02521 FINAL SETTINGS mutations_sync = 1;\n\nSELECT 'Rows in parts', SUM(rows) FROM system.parts WHERE database = currentDatabase() AND table = 'lwd_test_02521' AND active;\nSELECT 'Count', count() FROM lwd_test_02521;\n\n-- { echoOff }\n\nDROP TABLE lwd_test_02521;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02539_vertical_merge_compact_parts.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS t_compact_vertical_merge;\n\nCREATE TABLE t_compact_vertical_merge (id UInt64, s LowCardinality(String), arr Array(UInt64))\nENGINE MergeTree ORDER BY id\nSETTINGS\n    index_granularity = 16,\n    min_bytes_for_wide_part = 0,\n    min_rows_for_wide_part = 100,\n    vertical_merge_algorithm_min_rows_to_activate = 1,\n    vertical_merge_algorithm_min_columns_to_activate = 1,\n    allow_vertical_merges_from_compact_to_wide_parts = 1;\n\nINSERT INTO t_compact_vertical_merge SELECT number, toString(number), range(number % 10) FROM numbers(40);\nINSERT INTO t_compact_vertical_merge SELECT number, toString(number), range(number % 10) FROM numbers(40);\n\nOPTIMIZE TABLE t_compact_vertical_merge FINAL;\nSYSTEM FLUSH LOGS;\n\nWITH splitByChar('_', part_name) AS name_parts,\n    name_parts[2]::UInt64 AS min_block,\n    name_parts[3]::UInt64 AS max_block\nSELECT min_block, max_block, event_type, merge_algorithm, part_type FROM system.part_log\nWHERE\n    database = currentDatabase() AND\n    table = 't_compact_vertical_merge' AND\n    min_block = 1 AND max_block = 2;\n\nINSERT INTO t_compact_vertical_merge SELECT number, toString(number), range(number % 10) FROM numbers(40);\n\nOPTIMIZE TABLE t_compact_vertical_merge FINAL;\nSYSTEM FLUSH LOGS;\n\nWITH splitByChar('_', part_name) AS name_parts,\n    name_parts[2]::UInt64 AS min_block,\n    name_parts[3]::UInt64 AS max_block\nSELECT min_block, max_block, event_type, merge_algorithm, part_type FROM system.part_log\nWHERE\n    database = currentDatabase() AND\n    table = 't_compact_vertical_merge' AND\n    min_block = 1 AND max_block = 3;\n\nDROP TABLE t_compact_vertical_merge;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS t_compact_vertical_merge;\n\nCREATE TABLE t_compact_vertical_merge (id UInt64, s LowCardinality(String), arr Array(UInt64))\nENGINE MergeTree ORDER BY id\nSETTINGS\n    index_granularity = 16,\n    min_bytes_for_wide_part = 0,\n    min_rows_for_wide_part = 100,\n    vertical_merge_algorithm_min_rows_to_activate = 1,\n    vertical_merge_algorithm_min_columns_to_activate = 1,\n    allow_vertical_merges_from_compact_to_wide_parts = 1;\n\nINSERT INTO t_compact_vertical_merge SELECT number, toString(number), range(number % 10) FROM numbers(40);\nINSERT INTO t_compact_vertical_merge SELECT number, toString(number), range(number % 10) FROM numbers(40);\n\nOPTIMIZE TABLE t_compact_vertical_merge FINAL;\nSYSTEM FLUSH LOGS;\n\nWITH splitByChar('_', part_name) AS name_parts,\n    name_parts[2]::UInt64 AS min_block,\n    name_parts[3]::UInt64 AS max_block\nSELECT min_block, max_block, event_type, merge_algorithm, part_type FROM system.part_log\nWHERE\n    database = currentDatabase() AND\n    table = 't_compact_vertical_merge' AND\n    min_block = 1 AND max_block = 2;\n\nINSERT INTO t_compact_vertical_merge SELECT number, toString(number), range(number % 10) FROM numbers(40);\n\nOPTIMIZE TABLE t_compact_vertical_merge FINAL;\nSYSTEM FLUSH LOGS;\n\nWITH splitByChar('_', part_name) AS name_parts,\n    name_parts[2]::UInt64 AS min_block,\n    name_parts[3]::UInt64 AS max_block\nSELECT min_block, max_block, event_type, merge_algorithm, part_type FROM system.part_log\nWHERE\n    database = currentDatabase() AND\n    table = 't_compact_vertical_merge' AND\n    min_block = 1 AND max_block = 3;\n\nDROP TABLE t_compact_vertical_merge;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02560_vertical_merge_memory_usage.sql,clickhouse,"[{'query': ""-- Tags: no-s3-storage\ndrop table if exists tvm;\ncreate table tvm (c0 UInt64, c1 UInt64, c2 UInt64, c3 UInt64, c4 UInt64, c5 UInt64, c6 UInt64, c7 UInt64, c8 UInt64, c9 UInt64, c10 UInt64, c11 UInt64, c12 UInt64, c13 UInt64, c14 UInt64, c15 UInt64, c16 UInt64, c17 UInt64, c18 UInt64, c19 UInt64, c20 UInt64, c21 UInt64, c22 UInt64, c23 UInt64, c24 UInt64, c25 UInt64, c26 UInt64, c27 UInt64, c28 UInt64, c29 UInt64, c30 UInt64, c31 UInt64, c32 UInt64, c33 UInt64, c34 UInt64, c35 UInt64, c36 UInt64, c37 UInt64, c38 UInt64, c39 UInt64, c40 UInt64, c41 UInt64, c42 UInt64, c43 UInt64, c44 UInt64, c45 UInt64, c46 UInt64, c47 UInt64, c48 UInt64, c49 UInt64, c50 UInt64, c51 UInt64, c52 UInt64, c53 UInt64, c54 UInt64, c55 UInt64, c56 UInt64, c57 UInt64, c58 UInt64, c59 UInt64, c60 UInt64, c61 UInt64, c62 UInt64, c63 UInt64, c64 UInt64, c65 UInt64, c66 UInt64, c67 UInt64, c68 UInt64, c69 UInt64, c70 UInt64, c71 UInt64, c72 UInt64, c73 UInt64, c74 UInt64, c75 UInt64, c76 UInt64, c77 UInt64, c78 UInt64, c79 UInt64, c80 UInt64, c81 UInt64, c82 UInt64, c83 UInt64, c84 UInt64, c85 UInt64, c86 UInt64, c87 UInt64, c88 UInt64, c89 UInt64, c90 UInt64, c91 UInt64, c92 UInt64, c93 UInt64, c94 UInt64, c95 UInt64, c96 UInt64, c97 UInt64, c98 UInt64, c99 UInt64, c100 UInt64, c101 UInt64, c102 UInt64, c103 UInt64, c104 UInt64, c105 UInt64, c106 UInt64, c107 UInt64, c108 UInt64, c109 UInt64, c110 UInt64, c111 UInt64, c112 UInt64, c113 UInt64, c114 UInt64, c115 UInt64, c116 UInt64, c117 UInt64, c118 UInt64, c119 UInt64, c120 UInt64, c121 UInt64, c122 UInt64, c123 UInt64, c124 UInt64, c125 UInt64, c126 UInt64, c127 UInt64, c128 UInt64, c129 UInt64, c130 UInt64, c131 UInt64, c132 UInt64, c133 UInt64, c134 UInt64, c135 UInt64, c136 UInt64, c137 UInt64, c138 UInt64, c139 UInt64, c140 UInt64, c141 UInt64, c142 UInt64, c143 UInt64, c144 UInt64, c145 UInt64, c146 UInt64, c147 UInt64, c148 UInt64, c149 UInt64, c150 UInt64, c151 UInt64, c152 UInt64, c153 UInt64, c154 UInt64, c155 UInt64, c156 UInt64, c157 UInt64, c158 UInt64, c159 UInt64, c160 UInt64, c161 UInt64, c162 UInt64, c163 UInt64, c164 UInt64, c165 UInt64, c166 UInt64, c167 UInt64, c168 UInt64, c169 UInt64, c170 UInt64, c171 UInt64, c172 UInt64, c173 UInt64, c174 UInt64, c175 UInt64, c176 UInt64, c177 UInt64, c178 UInt64, c179 UInt64, c180 UInt64, c181 UInt64, c182 UInt64, c183 UInt64, c184 UInt64, c185 UInt64, c186 UInt64, c187 UInt64, c188 UInt64, c189 UInt64, c190 UInt64, c191 UInt64, c192 UInt64, c193 UInt64, c194 UInt64, c195 UInt64, c196 UInt64, c197 UInt64, c198 UInt64, c199 UInt64, c200 UInt64, c201 UInt64, c202 UInt64, c203 UInt64, c204 UInt64, c205 UInt64, c206 UInt64, c207 UInt64, c208 UInt64, c209 UInt64, c210 UInt64, c211 UInt64, c212 UInt64, c213 UInt64, c214 UInt64, c215 UInt64, c216 UInt64, c217 UInt64, c218 UInt64, c219 UInt64, c220 UInt64, c221 UInt64, c222 UInt64, c223 UInt64, c224 UInt64, c225 UInt64, c226 UInt64, c227 UInt64, c228 UInt64, c229 UInt64, c230 UInt64, c231 UInt64, c232 UInt64, c233 UInt64, c234 UInt64, c235 UInt64, c236 UInt64, c237 UInt64, c238 UInt64, c239 UInt64, c240 UInt64, c241 UInt64, c242 UInt64, c243 UInt64, c244 UInt64, c245 UInt64, c246 UInt64, c247 UInt64, c248 UInt64, c249 UInt64, c250 UInt64, c251 UInt64, c252 UInt64, c253 UInt64, c254 UInt64, c255 UInt64, c256 UInt64, c257 UInt64, c258 UInt64, c259 UInt64, c260 UInt64, c261 UInt64, c262 UInt64, c263 UInt64, c264 UInt64, c265 UInt64, c266 UInt64, c267 UInt64, c268 UInt64, c269 UInt64, c270 UInt64, c271 UInt64, c272 UInt64, c273 UInt64, c274 UInt64, c275 UInt64, c276 UInt64, c277 UInt64, c278 UInt64, c279 UInt64, c280 UInt64, c281 UInt64, c282 UInt64, c283 UInt64, c284 UInt64, c285 UInt64, c286 UInt64, c287 UInt64, c288 UInt64, c289 UInt64, c290 UInt64, c291 UInt64, c292 UInt64, c293 UInt64, c294 UInt64, c295 UInt64, c296 UInt64, c297 UInt64, c298 UInt64, c299 UInt64) engine = MergeTree order by tuple() settings min_rows_for_wide_part = 10, min_bytes_for_wide_part=0, vertical_merge_algorithm_min_rows_to_activate=1;\n\ninsert into tvm select number + 0, number + 1, number + 2, number + 3, number + 4, number + 5, number + 6, number + 7, number + 8, number + 9, number + 10, number + 11, number + 12, number + 13, number + 14, number + 15, number + 16, number + 17, number + 18, number + 19, number + 20, number + 21, number + 22, number + 23, number + 24, number + 25, number + 26, number + 27, number + 28, number + 29, number + 30, number + 31, number + 32, number + 33, number + 34, number + 35, number + 36, number + 37, number + 38, number + 39, number + 40, number + 41, number + 42, number + 43, number + 44, number + 45, number + 46, number + 47, number + 48, number + 49, number + 50, number + 51, number + 52, number + 53, number + 54, number + 55, number + 56, number + 57, number + 58, number + 59, number + 60, number + 61, number + 62, number + 63, number + 64, number + 65, number + 66, number + 67, number + 68, number + 69, number + 70, number + 71, number + 72, number + 73, number + 74, number + 75, number + 76, number + 77, number + 78, number + 79, number + 80, number + 81, number + 82, number + 83, number + 84, number + 85, number + 86, number + 87, number + 88, number + 89, number + 90, number + 91, number + 92, number + 93, number + 94, number + 95, number + 96, number + 97, number + 98, number + 99, number + 100, number + 101, number + 102, number + 103, number + 104, number + 105, number + 106, number + 107, number + 108, number + 109, number + 110, number + 111, number + 112, number + 113, number + 114, number + 115, number + 116, number + 117, number + 118, number + 119, number + 120, number + 121, number + 122, number + 123, number + 124, number + 125, number + 126, number + 127, number + 128, number + 129, number + 130, number + 131, number + 132, number + 133, number + 134, number + 135, number + 136, number + 137, number + 138, number + 139, number + 140, number + 141, number + 142, number + 143, number + 144, number + 145, number + 146, number + 147, number + 148, number + 149, number + 150, number + 151, number + 152, number + 153, number + 154, number + 155, number + 156, number + 157, number + 158, number + 159, number + 160, number + 161, number + 162, number + 163, number + 164, number + 165, number + 166, number + 167, number + 168, number + 169, number + 170, number + 171, number + 172, number + 173, number + 174, number + 175, number + 176, number + 177, number + 178, number + 179, number + 180, number + 181, number + 182, number + 183, number + 184, number + 185, number + 186, number + 187, number + 188, number + 189, number + 190, number + 191, number + 192, number + 193, number + 194, number + 195, number + 196, number + 197, number + 198, number + 199, number + 200, number + 201, number + 202, number + 203, number + 204, number + 205, number + 206, number + 207, number + 208, number + 209, number + 210, number + 211, number + 212, number + 213, number + 214, number + 215, number + 216, number + 217, number + 218, number + 219, number + 220, number + 221, number + 222, number + 223, number + 224, number + 225, number + 226, number + 227, number + 228, number + 229, number + 230, number + 231, number + 232, number + 233, number + 234, number + 235, number + 236, number + 237, number + 238, number + 239, number + 240, number + 241, number + 242, number + 243, number + 244, number + 245, number + 246, number + 247, number + 248, number + 249, number + 250, number + 251, number + 252, number + 253, number + 254, number + 255, number + 256, number + 257, number + 258, number + 259, number + 260, number + 261, number + 262, number + 263, number + 264, number + 265, number + 266, number + 267, number + 268, number + 269, number + 270, number + 271, number + 272, number + 273, number + 274, number + 275, number + 276, number + 277, number + 278, number + 279, number + 280, number + 281, number + 282, number + 283, number + 284, number + 285, number + 286, number + 287, number + 288, number + 289, number + 290, number + 291, number + 292, number + 293, number + 294, number + 295, number + 296, number + 297, number + 298, number + 299 from numbers(20);\n\noptimize table tvm final;\n\nsystem flush logs;\n-- should be about 4MB\nselect formatReadableSize(peak_memory_usage), * from system.part_log where table = 'tvm' and database = currentDatabase() and event_date >= today() - 1 and event_type = 'MergeParts' and peak_memory_usage > 100000000 format Vertical;\n\ndrop table tvm;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql '-- Tags: no-s3-storage\ndrop table if exists tvm;\ncreate table tvm (c0 UInt64, c1 UInt64, c2 UInt64, c3 UInt64, c4 UInt64, c5 UInt64, c6 UInt64, c7 UInt64, c8 UInt64, c9 UInt64, c10 UInt64, c11 UInt64, c12 UInt64, c13 UInt64, c14 UInt64, c15 UInt64, c16 UInt64, c17 UInt64, c18 UInt64, c19 UInt64, c20 UInt64, c21 UInt64, c22 UInt64, c23 UInt64, c24 UInt64, c25 UInt64, c26 UInt64, c27 UInt64, c28 UInt64, c29 UInt64, c30 UInt64, c31 UInt64, c32 UInt64, c33 UInt64, c34 UInt64, c35 UInt64, c36 UInt64, c37 UInt64, c38 UInt64, c39 UInt64, c40 UInt64, c41 UInt64, c42 UInt64, c43 UInt64, c44 UInt64, c45 UInt64, c46 UInt64, c47 UInt64, c48 UInt64, c49 UInt64, c50 UInt64, c51 UInt64, c52 UInt64, c53 UInt64, c54 UInt64, c55 UInt64, c56 UInt64, c57 UInt64, c58 UInt64, c59 UInt64, c60 UInt64, c61 UInt64, c62 UInt64, c63 UInt64, c64 UInt64, c65 UInt64, c66 UInt64, c67 UInt64, c68 UInt64, c69 UInt64, c70 UInt64, c71 UInt64, c72 UInt64, c73 UInt64, c74 UInt64, c75 UInt64, c76 UInt64, c77 UInt64, c78 UInt64, c79 UInt64, c80 UInt64, c81 UInt64, c82 UInt64, c83 UInt64, c84 UInt64, c85 UInt64, c86 UInt64, c87 UInt64, c88 UInt64, c89 UInt64, c90 UInt64, c91 UInt64, c92 UInt64, c93 UInt64, c94 UInt64, c95 UInt64, c96 UInt64, c97 UInt64, c98 UInt64, c99 UInt64, c100 UInt64, c101 UInt64, c102 UInt64, c103 UInt64, c104 UInt64, c105 UInt64, c106 UInt64, c107 UInt64, c108 UInt64, c109 UInt64, c110 UInt64, c111 UInt64, c112 UInt64, c113 UInt64, c114 UInt64, c115 UInt64, c116 UInt64, c117 UInt64, c118 UInt64, c119 UInt64, c120 UInt64, c121 UInt64, c122 UInt64, c123 UInt64, c124 UInt64, c125 UInt64, c126 UInt64, c127 UInt64, c128 UInt64, c129 UInt64, c130 UInt64, c131 UInt64, c132 UInt64, c133 UInt64, c134 UInt64, c135 UInt64, c136 UInt64, c137 UInt64, c138 UInt64, c139 UInt64, c140 UInt64, c141 UInt64, c142 UInt64, c143 UInt64, c144 UInt64, c145 UInt64, c146 UInt64, c147 UInt64, c148 UInt64, c149 UInt64, c150 UInt64, c151 UInt64, c152 UInt64, c153 UInt64, c154 UInt64, c155 UInt64, c156 UInt64, c157 UInt64, c158 UInt64, c159 UInt64, c160 UInt64, c161 UInt64, c162 UInt64, c163 UInt64, c164 UInt64, c165 UInt64, c166 UInt64, c167 UInt64, c168 UInt64, c169 UInt64, c170 UInt64, c171 UInt64, c172 UInt64, c173 UInt64, c174 UInt64, c175 UInt64, c176 UInt64, c177 UInt64, c178 UInt64, c179 UInt64, c180 UInt64, c181 UInt64, c182 UInt64, c183 UInt64, c184 UInt64, c185 UInt64, c186 UInt64, c187 UInt64, c188 UInt64, c189 UInt64, c190 UInt64, c191 UInt64, c192 UInt64, c193 UInt64, c194 UInt64, c195 UInt64, c196 UInt64, c197 UInt64, c198 UInt64, c199 UInt64, c200 UInt64, c201 UInt64, c202 UInt64, c203 UInt64, c204 UInt64, c205 UInt64, c206 UInt64, c207 UInt64, c208 UInt64, c209 UInt64, c210 UInt64, c211 UInt64, c212 UInt64, c213 UInt64, c214 UInt64, c215 UInt64, c216 UInt64, c217 UInt64, c218 UInt64, c219 UInt64, c220 UInt64, c221 UInt64, c222 UInt64, c223 UInt64, c224 UInt64, c225 UInt64, c226 UInt64, c227 UInt64, c228 UInt64, c229 UInt64, c230 UInt64, c231 UInt64, c232 UInt64, c233 UInt64, c234 UInt64, c235 UInt64, c236 UInt64, c237 UInt64, c238 UInt64, c239 UInt64, c240 UInt64, c241 UInt64, c242 UInt64, c243 UInt64, c244 UInt64, c245 UInt64, c246 UInt64, c247 UInt64, c248 UInt64, c249 UInt64, c250 UInt64, c251 UInt64, c252 UInt64, c253 UInt64, c254 UInt64, c255 UInt64, c256 UInt64, c257 UInt64, c258 UInt64, c259 UInt64, c260 UInt64, c261 UInt64, c262 UInt64, c263 UInt64, c264 UInt64, c265 UInt64, c266 UInt64, c267 UInt64, c268 UInt64, c269 UInt64, c270 UInt64, c271 UInt64, c272 UInt64, c273 UInt64, c274 UInt64, c275 UInt64, c276 UInt64, c277 UInt64, c278 UInt64, c279 UInt64, c280 UInt64, c281 UInt64, c282 UInt64, c283 UInt64, c284 UInt64, c285 UInt64, c286 UInt64, c287 UInt64, c288 UInt64, c289 UInt64, c290 UInt64, c291 UInt64, c292 UInt64, c293 UInt64, c294 UInt64, c295 UInt64, c296 UInt64, c297 UInt64, c298 UInt64, c299 UInt64) engine = MergeTree order by tuple() settings min_rows_for_wide_part = 10, min_bytes_for_wide_part=0, vertical_merge_algorithm_min_rows_to_activate=1;\n\ninsert into tvm select number + 0, number + 1, number + 2, number + 3, number + 4, number + 5, number + 6, number + 7, number + 8, number + 9, number + 10, number + 11, number + 12, number + 13, number + 14, number + 15, number + 16, number + 17, number + 18, number + 19, number + 20, number + 21, number + 22, number + 23, number + 24, number + 25, number + 26, number + 27, number + 28, number + 29, number + 30, number + 31, number + 32, number + 33, number + 34, number + 35, number + 36, number + 37, number + 38, number + 39, number + 40, number + 41, number + 42, number + 43, number + 44, number + 45, number + 46, number + 47, number + 48, number + 49, number + 50, number + 51, number + 52, number + 53, number + 54, number + 55, number + 56, number + 57, number + 58, number + 59, number + 60, number + 61, number + 62, number + 63, number + 64, number + 65, number + 66, number + 67, number + 68, number + 69, number + 70, number + 71, number + 72, number + 73, number + 74, number + 75, number + 76, number + 77, number + 78, number + 79, number + 80, number + 81, number + 82, number + 83, number + 84, number + 85, number + 86, number + 87, number + 88, number + 89, number + 90, number + 91, number + 92, number + 93, number + 94, number + 95, number + 96, number + 97, number + 98, number + 99, number + 100, number + 101, number + 102, number + 103, number + 104, number + 105, number + 106, number + 107, number + 108, number + 109, number + 110, number + 111, number + 112, number + 113, number + 114, number + 115, number + 116, number + 117, number + 118, number + 119, number + 120, number + 121, number + 122, number + 123, number + 124, number + 125, number + 126, number + 127, number + 128, number + 129, number + 130, number + 131, number + 132, number + 133, number + 134, number + 135, number + 136, number + 137, number + 138, number + 139, number + 140, number + 141, number + 142, number + 143, number + 144, number + 145, number + 146, number + 147, number + 148, number + 149, number + 150, number + 151, number + 152, number + 153, number + 154, number + 155, number + 156, number + 157, number + 158, number + 159, number + 160, number + 161, number + 162, number + 163, number + 164, number + 165, number + 166, number + 167, number + 168, number + 169, number + 170, number + 171, number + 172, number + 173, number + 174, number + 175, number + 176, number + 177, number + 178, number + 179, number + 180, number + 181, number + 182, number + 183, number + 184, number + 185, number + 186, number + 187, number + 188, number + 189, number + 190, number + 191, number + 192, number + 193, number + 194, number + 195, number + 196, number + 197, number + 198, number + 199, number + 200, number + 201, number + 202, number + 203, number + 204, number + 205, number + 206, number + 207, number + 208, number + 209, number + 210, number + 211, number + 212, number + 213, number + 214, number + 215, number + 216, number + 217, number + 218, number + 219, number + 220, number + 221, number + 222, number + 223, number + 224, number + 225, number + 226, number + 227, number + 228, number + 229, number + 230, number + 231, number + 232, number + 233, number + 234, number + 235, number + 236, number + 237, number + 238, number + 239, number + 240, number + 241, number + 242, number + 243, number + 244, number + 245, number + 246, number + 247, number + 248, number + 249, number + 250, number + 251, number + 252, number + 253, number + 254, number + 255, number + 256, number + 257, number + 258, number + 259, number + 260, number + 261, number + 262, number + 263, number + 264, number + 265, number + 266, number + 267, number + 268, number + 269, number + 270, number + 271, number + 272, number + 273, number + 274, number + 275, number + 276, number + 277, number + 278, number + 279, number + 280, number + 281, number + 282, number + 283, number + 284, number + 285, number + 286, number + 287, number + 288, number + 289, number + 290, number + 291, number + 292, number + 293, number + 294, number + 295, number + 296, number + 297, number + 298, number + 299 from numbers(20);\n\noptimize table tvm final;\n\nsystem flush logs;\n-- should be about 4MB\nselect formatReadableSize(peak_memory_usage), * from system.part_log where table = 'tvm' and database = currentDatabase() and event_date >= today() - 1 and event_type = 'MergeParts' and peak_memory_usage > 100000000 format Vertical;\n\ndrop table tvm;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02561_with_fill_date_datetime_incompatible.sql,clickhouse,"[{'query': 'SELECT today() AS a\nORDER BY a ASC WITH FILL FROM now() - toIntervalMonth(1) TO now() + toIntervalDay(1) STEP 82600; -- { serverError 475 }\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 36 (line 2, col 16): WITH FILL FROM now() - toIntervalMonth(1) TO now() + toIntervalDay(1) STEP 82600; -- { serverError 475 }\n\n FORMAT Native. Expected one of: UNION ALL, Comma, token, SETTINGS, FORMAT, INTO OUTFILE, LIMIT, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'SELECT today() AS a\nORDER BY a ASC WITH FILL FROM now() - toIntervalMonth(1) TO now() + toIntervalDay(1) STEP 82600; -- { serverError 475 }\n\': near ""WITH"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02686_bson3.sql,clickhouse,"[{'query': '-- It correctly throws exception about incorrect data:\n\nSELECT * FROM format(BSONEachRow, \'WatchID Int64, JavaEnable Int16, Title String, GoodEvent Int16, EventTime DateTime, EventDate Date, CounterID Int32, ClientIP Int32, RegionID Int32, UserID Int64, CounterClass Int16, OS Int16, UserAgent Int16, URL String, Referer String, IsRefresh Int16, RefererCategoryID Int16, RefererRegionID Int32, URLCategoryID Int16, URLRegionID Int32, ResolutionWidth Int16, ResolutionHeight Int16, ResolutionDepth Int16, FlashMajor Int16, FlashMinor Int16, FlashMinor2 String, NetMajor Int16, NetMinor Int16, UserAgentMajor Int16, UserAgentMinor String, CookieEnable Int16, JavascriptEnable Int16, IsMobile Int16, MobilePhone Int16, MobilePhoneModel String, Params String, IPNetworkID Int32, TraficSourceID Int16, SearchEngineID Int16, SearchPhrase String, AdvEngineID Int16, IsArtifical Int16, WindowClientWidth Int16, WindowClientHeight Int16, ClientTimeZone Int16, ClientEventTime DateTime, SilverlightVersion1 Int16, SilverlightVersion2 Int16, SilverlightVersion3 Int32, SilverlightVersion4 Int16, PageCharset String, CodeVersion Int32, IsLink Int16, IsDownload Int16, IsNotBounce Int16, FUniqID Int64, OriginalURL String, HID Int32, IsOldCounter Int16, IsEvent Int16, IsParameter Int16, DontCountHits Int16, WithHash Int16, HitColor String, LocalEventTime DateTime, Age Int16, Sex Int16, Income Int16, Interests Int16, Robotness Int16, RemoteIP Int32, WindowName Int32, OpenerName Int32, HistoryLength Int16, BrowserLanguage String, BrowserCountry String, SocialNetwork String, SocialAction String, HTTPError Int16, SendTiming Int32, DNSTiming Int32, ConnectTiming Int32, ResponseStartTiming Int32, ResponseEndTiming Int32, FetchTiming Int32, SocialSourceNetworkID Int16, SocialSourcePage String, ParamPrice Int64, ParamOrderID String, ParamCurrency String, ParamCurrencyID Int16, OpenstatServiceName String, OpenstatCampaignID String, OpenstatAdID String, OpenstatSourceID String, UTMSource String, UTMMedium String, UTMCampaign String, UTMContent String, UTMTerm String, FromTag String, HasGCLID Int16, RefererHash Int64, URLHash Int64, CLID Int32\',\n$$^\x07\x00\x00\x12WatchID\x00c*5/ !p~\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x007Q\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClientIP\x00z\x10RegionID\x00G\x03\x00\x00\x12UserID\x00 :6\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\x00\x00\x00\x00\x10UserAgent\x00\x00\x00\x00\x00\x05URL\x00\x00\x00\x00\x00\x00\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x00\x00\x00\x00\x00\x10URLRegionID\x00\x00\x00\x00\x00\x10ResolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\x00\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00�O\x10CookieEnable\x00\x00\x00\x00\x00\x10JavascriptEnablsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhoneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x009\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\x05PageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00&Q\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00^DI\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00|3b.\x10CLID\x00\x00\x00\x00\x00\x00^\x07\x00\x00\x12WatchID\x00Fӓ2q\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x00n$Q\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClientIP\x00z\x10RegionID\x00G\x03\x00\x00\x12UserID\x00 :6\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\x00\x00\x00\x00\x10UserAgent\x00\x00\x00\x00\x00\x05URL\x00\x00\x00\x00\x00\x00\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x00\x00\x00\x00\x00\x10URLRegionID\x00\x00\x00\x00\x00\x10ResolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\x00\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00�O\x10CookieEnable\x00\x00\x00\x00\x00\x10JavascriptEnable\x00\x00\x00\x00\x00\x10IsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhoneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x009\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\x05PageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00ǘQ\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00^DI\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12PamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00|3b.\x10CLID\x00\x00\x00\x00\x00\x00^\x07\x00\x00\x12WatchID\x00l!|@H\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x00)Q\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClientIP\x00z\x10RegionID\x00G\x03\x00\x00\x12UserID\x00 :6\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\x00\x00\x00\x00\x10UserAgent\x00\x00\x00\x00\x00\x05URL\x00\x00\x00\x00\x00\x00\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x00\x00\x00\x00\x00\x10URLRegionID\x00\x00\x00\x00\x00\x10ResolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\x00\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00�O\x10CookieEnable\x00\x00\x00\x00\x00\x10JavascriptEnable\x00\x00\x00\x00\x00\x10IsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhoneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x009\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\x05PageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00}Q\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00^DI\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00|3b.\x10CLID\x00\x00\x00\x00\x00\x00^\x07\x00\x00\x12WatchID\x00\x05ǐ=ЌW\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x008*Q\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClientIP\x00z\x10RegionID\x00G\x03\x00\x00\x12UserID\x00 :6\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\x00\x00\x00\x00\x10UserAgent\x00\x00\x00\x00\x00\x05URL\x00\x00\x00\x00\x00\x00\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x00\x00\x00\x00\x00\x10URLRegionID\x00\x00\x00\x00\x00\x10ResolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\x00\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00�O\x10CookieEnable\x00\x00\x00\x00\x00\x10JavascriptEnable\x00\x00\x00\x00\x00\x10IsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhoneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x009\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\x05PageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00ݞQ\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00^DI\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00|3b.\x10CLID\x00\x00\x00\x00\x00\x00\x07\x00\x00\x12WatchID\x00\x11E&Ly\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x00JQ\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClientIP\x00I`\x10RegionID\x00\'\x00\x00\x00\x12UserID\x00qJ\x17d8\x05\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\x02\x00\x00\x00\x10UserAgent\x00\x07\x00\x00\x00\x05URL\x00-\x00\x00\x00\x00http://holodilnik.ru/russia/05jul2013&model=0\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCateParams String, IPNetworkID Int32, TraficSourceID Int16, SearchEngineID Int16, SearchPhrase String, AdvEngineID Int16, IsArtifical Int16, WindowClientWidth Int16, WindowClientHeight Int16, ClientTimeZone Int16, ClientEventTime DateTime, SilverlightVersion1 Int16, SilverlightVersion2 Int16, SilverlightVersion3 Int32, SilverlightVersion4 Int16, PageCharset String, CodeVersion Int32, IsLink Int16, IsDownload Int16, IsNotBounce Int16, FUniqID Int64, OriginalURL String, HID Int32, IsOldCounter Int16, IsEvent Int16, IsParameter Int16, DontCountHits Int16, WithHash Int16, HitColor String, LocalEventTime DateTime, Age Int16, Sex Int16, Income Int16, Interests Int16, Robotness Int16, RemoteIP Int32, WindowName Int32, OpenerName Int32, HistoryLength Int16, BrowserLanguage String, BrowserCountry String, SocialNetwork String, SocialAction String, HTTPError Int16, SendTiming Int32, DNSTiming Int32, ConnectTiming Int32, ResponseStartTiming Int32, ResponseEndTiming Int32,\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00\x12\noe\x10CLID\x00\x00\x00\x00\x00\x00\x07\x00\x00\x12WatchID\x00\x16k=p\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x00\x0cQ\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClienQ9H\x10RegionID\x00G\x03\x00\x00\x12UserID\x00\nKs}\x05\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\x02\x00\x00\x00\x10UserAgent\x00\x03\x00\x00\x00\x05URL\x00H\x00\x00\x00\x00http://afisha.mail.ru/catalog/314/women.ru/ency=1&page3/?errovat-pinniki\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x000=\x00\x00\x10URLRegionID\x00\x00\x00\x00\x10ResolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\x12\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00D�\x10CookieEnable\x00\x01\x00\x00\x00\x10JavascriptEnable\x00\x00\x00\x00\x00\x10IsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhoneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x009\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\nPageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00:W\x11m\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00AQ\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00^DI\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00\n#\\\x18\x10CLID\x00\x00\x00\x00\x00\x00\x07\x00\x00\x12WatchID\x001\x0boC\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x000Q\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClientIP\x00^{]\x10RegionID\x00\x00\x00\x00\x12UserID\x00&n%t""6\x07\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\'\x00\x00\x00\x10UserAgent\x00\x07\x00\x00\x00\x05URL\x00>\x00\x00\x00\x00http://bonprix.ru/index.ru/cinema/art/0 986 424 233 сезон\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x00\x03\x00\x00\x00\x10URLRegionID\x00\x00\x00\x00\x10ResolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\x0f\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00D�\x10CookieEnable\x00\x01\x00\x00\x00\x10JavascriptEnable\x00\x00\x00\x00\x00\x10IsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhoneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x00#(\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\x05PageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00Q\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00\x17\x07U\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00X-h\x06X \x10CLID\x00\x00\x00\x00\x00\x00\x07\x00\x00\x12WatchID\x00»-\x10\x15C_\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x0083Q\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClientIP\x00^{]\x10RegionID\x00\x00\x00\x00\x12UserID\x00&n%t""6\x07\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\'\x00\x00\x00\x10UserAgent\x00\x07\x00\x00\x00\x05URL\x00:\x00\x00\x00\x00http://bonprix.ru/index.ru/cinema/art/A00387,3797); ru)&bL\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x00\x03\x00\x00\x00\x10URLRegionID\x00\x00\x00\x00\x10ResolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\x0f\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00D�\x10CookieEnable\x00\x01\x00\x00\x00\x10JavascriptEnable\x00\x00\x00\x00\x00\x10IsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhoneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x00#(\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\x05PageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00\nQ\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00\x17\x07U\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00vv\x01\x10CLID\x00\x00\x00\x00\x00\x00\x07\x00\x00\x12WatchID\x00\x7f\x0e\x10\x17\\\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x00 Q\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClientIP\x00g\x16U\x10RegionID\x00\x00\x00\x00\x12UserID\x00syyf\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00,\x00\x00\x00\x10UserAgent\x00\x03\x00\x00\x00\x05URL\x001\x00\x00\x00\x00http://tours/Ekategoriya%2F&sr=http://slovareniye\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x00\x00\x00\x00\x00\x10URLRegionID\x00\x00\x00\x00\x10esRolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\t\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00D�\x10CookieEnable\x00\x00\x00\x00\x00\x10JavascriptEnable\x00\x00\x00\x00\x00\x10IsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhoneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x00\x1d\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\x05PageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00YQ\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00\x03=k\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00h\x11\x159D\x10CLID\x00\x00\x00\x00\x00\x00^\x07\x00\x00\x12WatchID\x00/EJ{\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x001Q\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x14\x00\x00\x00\x10ClientIP\x00z\x10RegionID\x00G\x03\x00\x00\x12UserID\x00 :6\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\x00\x00\x00\x00\x10UserAgent\x00\x00\x00\x00\x00\x05URL\x00\x00\x00\x00\x00\x00\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x00\x00\x00\x00\x00\x10URLRegionID\x00\x00\x00\x00\x00\x10ResolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\x00\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00�O\x10CookieEnable\x00\x00\x00\x00\x00\x10JavascriptEnable\x00\x00\x00\x00\x00\x10IsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhkneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x009\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\x05PageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00Q\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00^DI\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00|3b.\x10CLID\x00\x00\x00\x00\x00\x00$$); -- { serverError INCORRECT_DATA }\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 2141 (line 4, col 1): $$^\x07\x00\x00\x12WatchID\x00c*5/ !p~\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x007Q\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClientIP\x00z\x10RegionID\x00G\x03\x00\x00\x12UserID\x00 :6\x10CounterCla. Unrecognized token, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- It correctly throws exception about incorrect data:\n\nSELECT * FROM format(BSONEachRow, \'WatchID Int64, JavaEnable Int16, Title String, GoodEvent Int16, EventTime DateTime, EventDate Date, CounterID Int32, ClientIP Int32, RegionID Int32, UserID Int64, CounterClass Int16, OS Int16, UserAgent Int16, URL String, Referer String, IsRefresh Int16, RefererCategoryID Int16, RefererRegionID Int32, URLCategoryID Int16, URLRegionID Int32, ResolutionWidth Int16, ResolutionHeight Int16, ResolutionDepth Int16, FlashMajor Int16, FlashMinor Int16, FlashMinor2 String, NetMajor Int16, NetMinor Int16, UserAgentMajor Int16, UserAgentMinor String, CookieEnable Int16, JavascriptEnable Int16, IsMobile Int16, MobilePhone Int16, MobilePhoneModel String, Params String, IPNetworkID Int32, TraficSourceID Int16, SearchEngineID Int16, SearchPhrase String, AdvEngineID Int16, IsArtifical Int16, WindowClientWidth Int16, WindowClientHeight Int16, ClientTimeZone Int16, ClientEventTime DateTime, SilverlightVersion1 Int16, SilverlightVersion2 Int16, SilverlightVersion3 Int32, SilverlightVersion4 Int16, PageCharset String, CodeVersion Int32, IsLink Int16, IsDownload Int16, IsNotBounce Int16, FUniqID Int64, OriginalURL String, HID Int32, IsOldCounter Int16, IsEvent Int16, IsParameter Int16, DontCountHits Int16, WithHash Int16, HitColor String, LocalEventTime DateTime, Age Int16, Sex Int16, Income Int16, Interests Int16, Robotness Int16, RemoteIP Int32, WindowName Int32, OpenerName Int32, HistoryLength Int16, BrowserLanguage String, BrowserCountry String, SocialNetwork String, SocialAction String, HTTPError Int16, SendTiming Int32, DNSTiming Int32, ConnectTiming Int32, ResponseStartTiming Int32, ResponseEndTiming Int32, FetchTiming Int32, SocialSourceNetworkID Int16, SocialSourcePage String, ParamPrice Int64, ParamOrderID String, ParamCurrency String, ParamCurrencyID Int16, OpenstatServiceName String, OpenstatCampaignID String, OpenstatAdID String, OpenstatSourceID String, UTMSource String, UTMMedium String, UTMCampaign String, UTMContent String, UTMTerm String, FromTag String, HasGCLID Int16, RefererHash Int64, URLHash Int64, CLID Int32\',\n$$^\x07\x00\x00\x12WatchID\x00c*5/ !p~\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x007Q\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClientIP\x00z\x10RegionID\x00G\x03\x00\x00\x12UserID\x00 :6\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\x00\x00\x00\x00\x10UserAgent\x00\x00\x00\x00\x00\x05URL\x00\x00\x00\x00\x00\x00\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x00\x00\x00\x00\x00\x10URLRegionID\x00\x00\x00\x00\x00\x10ResolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\x00\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00�O\x10CookieEnable\x00\x00\x00\x00\x00\x10JavascriptEnablsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhoneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x009\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\x05PageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00&Q\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00^DI\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00|3b.\x10CLID\x00\x00\x00\x00\x00\x00^\x07\x00\x00\x12WatchID\x00Fӓ2q\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x00n$Q\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClientIP\x00z\x10RegionID\x00G\x03\x00\x00\x12UserID\x00 :6\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\x00\x00\x00\x00\x10UserAgent\x00\x00\x00\x00\x00\x05URL\x00\x00\x00\x00\x00\x00\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x00\x00\x00\x00\x00\x10URLRegionID\x00\x00\x00\x00\x00\x10ResolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\x00\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00�O\x10CookieEnable\x00\x00\x00\x00\x00\x10JavascriptEnable\x00\x00\x00\x00\x00\x10IsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhoneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x009\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\x05PageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00ǘQ\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00^DI\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12PamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00|3b.\x10CLID\x00\x00\x00\x00\x00\x00^\x07\x00\x00\x12WatchID\x00l!|@H\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x00)Q\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClientIP\x00z\x10RegionID\x00G\x03\x00\x00\x12UserID\x00 :6\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\x00\x00\x00\x00\x10UserAgent\x00\x00\x00\x00\x00\x05URL\x00\x00\x00\x00\x00\x00\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x00\x00\x00\x00\x00\x10URLRegionID\x00\x00\x00\x00\x00\x10ResolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\x00\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00�O\x10CookieEnable\x00\x00\x00\x00\x00\x10JavascriptEnable\x00\x00\x00\x00\x00\x10IsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhoneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x009\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\x05PageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00}Q\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00^DI\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00|3b.\x10CLID\x00\x00\x00\x00\x00\x00^\x07\x00\x00\x12WatchID\x00\x05ǐ=ЌW\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x008*Q\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClientIP\x00z\x10RegionID\x00G\x03\x00\x00\x12UserID\x00 :6\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\x00\x00\x00\x00\x10UserAgent\x00\x00\x00\x00\x00\x05URL\x00\x00\x00\x00\x00\x00\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x00\x00\x00\x00\x00\x10URLRegionID\x00\x00\x00\x00\x00\x10ResolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\x00\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00�O\x10CookieEnable\x00\x00\x00\x00\x00\x10JavascriptEnable\x00\x00\x00\x00\x00\x10IsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhoneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x009\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\x05PageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00ݞQ\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00^DI\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00|3b.\x10CLID\x00\x00\x00\x00\x00\x00\x07\x00\x00\x12WatchID\x00\x11E&Ly\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x00JQ\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClientIP\x00I`\x10RegionID\x00\'\x00\x00\x00\x12UserID\x00qJ\x17d8\x05\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\x02\x00\x00\x00\x10UserAgent\x00\x07\x00\x00\x00\x05URL\x00-\x00\x00\x00\x00http://holodilnik.ru/russia/05jul2013&model=0\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCateParams String, IPNetworkID Int32, TraficSourceID Int16, SearchEngineID Int16, SearchPhrase String, AdvEngineID Int16, IsArtifical Int16, WindowClientWidth Int16, WindowClientHeight Int16, ClientTimeZone Int16, ClientEventTime DateTime, SilverlightVersion1 Int16, SilverlightVersion2 Int16, SilverlightVersion3 Int32, SilverlightVersion4 Int16, PageCharset String, CodeVersion Int32, IsLink Int16, IsDownload Int16, IsNotBounce Int16, FUniqID Int64, OriginalURL String, HID Int32, IsOldCounter Int16, IsEvent Int16, IsParameter Int16, DontCountHits Int16, WithHash Int16, HitColor String, LocalEventTime DateTime, Age Int16, Sex Int16, Income Int16, Interests Int16, Robotness Int16, RemoteIP Int32, WindowName Int32, OpenerName Int32, HistoryLength Int16, BrowserLanguage String, BrowserCountry String, SocialNetwork String, SocialAction String, HTTPError Int16, SendTiming Int32, DNSTiming Int32, ConnectTiming Int32, ResponseStartTiming Int32, ResponseEndTiming Int32,\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00\x12\noe\x10CLID\x00\x00\x00\x00\x00\x00\x07\x00\x00\x12WatchID\x00\x16k=p\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x00\x0cQ\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClienQ9H\x10RegionID\x00G\x03\x00\x00\x12UserID\x00\nKs}\x05\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\x02\x00\x00\x00\x10UserAgent\x00\x03\x00\x00\x00\x05URL\x00H\x00\x00\x00\x00http://afisha.mail.ru/catalog/314/women.ru/ency=1&page3/?errovat-pinniki\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x000=\x00\x00\x10URLRegionID\x00\x00\x00\x00\x10ResolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\x12\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00D�\x10CookieEnable\x00\x01\x00\x00\x00\x10JavascriptEnable\x00\x00\x00\x00\x00\x10IsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhoneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x009\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\nPageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00:W\x11m\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00AQ\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00^DI\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00\n#\\\x18\x10CLID\x00\x00\x00\x00\x00\x00\x07\x00\x00\x12WatchID\x001\x0boC\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x000Q\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClientIP\x00^{]\x10RegionID\x00\x00\x00\x00\x12UserID\x00&n%t""6\x07\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\'\x00\x00\x00\x10UserAgent\x00\x07\x00\x00\x00\x05URL\x00>\x00\x00\x00\x00http://bonprix.ru/index.ru/cinema/art/0 986 424 233 сезон\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x00\x03\x00\x00\x00\x10URLRegionID\x00\x00\x00\x00\x10ResolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\x0f\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00D�\x10CookieEnable\x00\x01\x00\x00\x00\x10JavascriptEnable\x00\x00\x00\x00\x00\x10IsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhoneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x00#(\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\x05PageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00Q\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00\x17\x07U\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00X-h\x06X \x10CLID\x00\x00\x00\x00\x00\x00\x07\x00\x00\x12WatchID\x00»-\x10\x15C_\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x0083Q\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClientIP\x00^{]\x10RegionID\x00\x00\x00\x00\x12UserID\x00&n%t""6\x07\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\'\x00\x00\x00\x10UserAgent\x00\x07\x00\x00\x00\x05URL\x00:\x00\x00\x00\x00http://bonprix.ru/index.ru/cinema/art/A00387,3797); ru)&bL\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x00\x03\x00\x00\x00\x10URLRegionID\x00\x00\x00\x00\x10ResolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\x0f\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00D�\x10CookieEnable\x00\x01\x00\x00\x00\x10JavascriptEnable\x00\x00\x00\x00\x00\x10IsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhoneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x00#(\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\x05PageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00\nQ\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00\x17\x07U\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00vv\x01\x10CLID\x00\x00\x00\x00\x00\x00\x07\x00\x00\x12WatchID\x00\x7f\x0e\x10\x17\\\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x00 Q\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x11\x00\x00\x00\x10ClientIP\x00g\x16U\x10RegionID\x00\x00\x00\x00\x12UserID\x00syyf\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00,\x00\x00\x00\x10UserAgent\x00\x03\x00\x00\x00\x05URL\x001\x00\x00\x00\x00http://tours/Ekategoriya%2F&sr=http://slovareniye\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x00\x00\x00\x00\x00\x10URLRegionID\x00\x00\x00\x00\x10esRolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\t\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00D�\x10CookieEnable\x00\x00\x00\x00\x00\x10JavascriptEnable\x00\x00\x00\x00\x00\x10IsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhoneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x00\x1d\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\x05PageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00YQ\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00\x03=k\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00h\x11\x159D\x10CLID\x00\x00\x00\x00\x00\x00^\x07\x00\x00\x12WatchID\x00/EJ{\x10JavaEnable\x00\x00\x00\x00\x00\x05Title\x00\x00\x00\x00\x00\x00\x10GoodEvent\x00\x01\x00\x00\x00\x12EventTime\x001Q\x00\x00\x00\x00\x10EventDate\x00\x1d>\x00\x00\x10CounterID\x00\x14\x00\x00\x00\x10ClientIP\x00z\x10RegionID\x00G\x03\x00\x00\x12UserID\x00 :6\x10CounterClass\x00\x00\x00\x00\x00\x10OS\x00\x00\x00\x00\x00\x10UserAgent\x00\x00\x00\x00\x00\x05URL\x00\x00\x00\x00\x00\x00\x05Referer\x00\x00\x00\x00\x00\x00\x10IsRefresh\x00\x00\x00\x00\x00\x10RefererCategoryID\x00\x00\x00\x00\x00\x10RefererRegionID\x00\x00\x00\x00\x00\x10URLCategoryID\x00\x00\x00\x00\x00\x10URLRegionID\x00\x00\x00\x00\x00\x10ResolutionWidth\x00\x00\x00\x00\x00\x10ResolutionHeight\x00\x00\x00\x00\x00\x10ResolutionDepth\x00\x00\x00\x00\x00\x10FlashMajor\x00\x00\x00\x00\x00\x10FlashMinor\x00\x00\x00\x00\x00\x05FlashMinor2\x00\x00\x00\x00\x00\x00\x10NetMajor\x00\x00\x00\x00\x00\x10NetMinor\x00\x00\x00\x00\x00\x10UserAgentMajor\x00\x00\x00\x00\x00\x05UserAgentMinor\x00\x04\x00\x00\x00\x00�O\x10CookieEnable\x00\x00\x00\x00\x00\x10JavascriptEnable\x00\x00\x00\x00\x00\x10IsMobile\x00\x00\x00\x00\x00\x10MobilePhone\x00\x00\x00\x00\x00\x05MobilePhkneModel\x00\x00\x00\x00\x00\x00\x05Params\x00\x00\x00\x00\x00\x00\x10IPNetworkID\x009\x00\x10TraficSourceID\x00\x04\x00\x00\x00\x10SearchEngineID\x00\x00\x00\x00\x00\x05SearchPhrase\x00\x00\x00\x00\x00\x00\x10AdvEngineID\x00\x00\x00\x00\x00\x10IsArtifical\x00\x00\x00\x00\x00\x10WindowClientWidth\x00\x00\x00\x00\x00\x10WindowClientHeight\x00\x00\x00\x00\x00\x10ClientTimeZone\x00\x12ClientEventTime\x00\x16\x01\x00\x00\x00\x00\x10SilverlightVersion1\x00\x00\x00\x00\x00\x10SilverlightVersion2\x00\x00\x00\x00\x00\x10SilverlightVersion3\x00\x00\x00\x00\x00\x10SilverlightVersion4\x00\x00\x00\x00\x00\x05PageCharset\x00\x00\x00\x00\x00\x00\x10CodeVersion\x00\x00\x00\x00\x00\x10IsLink\x00\x00\x00\x00\x00\x10IsDownload\x00\x00\x00\x00\x00\x10IsNotBounce\x00\x00\x00\x00\x00\x12FUniqID\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05OriginalURL\x00\x00\x00\x00\x00\x00\x10HID\x00\x00\x00\x00\x00\x10IsOldCounter\x00\x00\x00\x00\x00\x10IsEvent\x00\x00\x00\x00\x00\x10IsParameter\x00\x00\x00\x00\x00\x10DontCountHits\x00\x00\x00\x00\x00\x10WithHash\x00\x00\x00\x00\x00\x05HitColor\x00\x01\x00\x00\x00\x005\x12LocalEventTime\x00Q\x00\x00\x00\x00\x10Age\x00\x00\x00\x00\x00\x10Sex\x00\x00\x00\x00\x00\x10Income\x00\x00\x00\x00\x00\x10Interests\x00\x00\x00\x00\x00\x10Robotness\x00\x00\x00\x00\x00\x10RemoteIP\x00^DI\x10WindowName\x00\x10OpenerName\x00\x10HistoryLength\x00\x05BrowserLanguage\x00\x03\x00\x00\x00\x00�\x05BrowserCountry\x00\x04\x00\x00\x00\x00�\x0c\x05SocialNetwork\x00\x00\x00\x00\x00\x00\x05SocialAction\x00\x00\x00\x00\x00\x00\x10HTTPError\x00\x00\x00\x00\x00\x10SendTiming\x00\x00\x00\x00\x00\x10DNSTiming\x00\x00\x00\x00\x00\x10ConnectTiming\x00\x00\x00\x00\x00\x10ResponseStartTiming\x00\x00\x00\x00\x00\x10ResponseEndTiming\x00\x00\x00\x00\x00\x10FetchTiming\x00\x00\x00\x00\x00\x10SocialSourceNetworkID\x00\x00\x00\x00\x00\x05SocialSourcePage\x00\x00\x00\x00\x00\x00\x12ParamPrice\x00\x00\x00\x00\x00\x00\x00\x00\x00\x05ParamOrderID\x00\x00\x00\x00\x00\x00\x05ParamCurrency\x00\x03\x00\x00\x00\x00NH\x1c\x10ParamCurrencyID\x00\x00\x00\x00\x00\x05OpenstatServiceName\x00\x00\x00\x00\x00\x00\x05OpenstatCampaignID\x00\x00\x00\x00\x00\x00\x05OpenstatAdID\x00\x00\x00\x00\x00\x00\x05OpenstatSourceID\x00\x00\x00\x00\x00\x00\x05UTMSource\x00\x00\x00\x00\x00\x00\x05UTMMedium\x00\x00\x00\x00\x00\x00\x05UTMCampaign\x00\x00\x00\x00\x00\x00\x05UTMContent\x00\x00\x00\x00\x00\x00\x05UTMTerm\x00\x00\x00\x00\x00\x00\x05FromTag\x00\x00\x00\x00\x00\x00\x10HasGCLID\x00\x00\x00\x00\x00\x12RefererHash\x00X+\'\x12URLHash\x00|3b.\x10CLID\x00\x00\x00\x00\x00\x00$$); -- { serverError INCORRECT_DATA }\n\': the query contains a null character', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02752_custom_separated_ignore_spaces_bug.sql,clickhouse,"[{'query': ""select * from format(CustomSeparatedIgnoreSpaces, 'x String', ' unquoted_string\\n') settings format_custom_escaping_rule='CSV';\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 127 (end of query) (line 1, col 127): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'select * from format(CustomSeparatedIgnoreSpaces, \'x String\', \' unquoted_string\\n\') settings format_custom_escaping_rule=\'CSV\';\n\': near ""format_custom_escaping_rule"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02807_lower_utf8_msan.sql,clickhouse,"[{'query': ""SELECT lowerUTF8(arrayJoin(['©--------------------------------------', '©--------------------'])) ORDER BY 1;\nSELECT upperUTF8(materialize('aaaaАБВГaaaaaaaaaaaaАБВГAAAAaaAA')) FROM numbers(2);\n"", 'source_success': True, 'source_exception': '', 'source_result': ""  lowerUTF8(arrayJoin(['©--------------------------------------', '©--------------------']))\n0                                                    ©--------------------------------------\n1                                                                      ©--------------------"", 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'SELECT lowerUTF8(arrayJoin(['©--------------------------------------', '©--------------------'])) ORDER BY 1;\nSELECT upperUTF8(materialize('aaaaАБВГaaaaaaaaaaaaАБВГAAAAaaAA')) FROM numbers(2);\n': no such column: '©--------------------------------------', '©--------------------'"", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02814_create_index_uniq_noop.sql,clickhouse,"[{'query': 'SET allow_create_index_without_type=1;\nSET create_index_ignore_unique=1;\nCREATE UNIQUE INDEX idx_tab2_0 ON tab2 (col1);\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 40 (line 2, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'SET allow_create_index_without_type=1;\nSET create_index_ignore_unique=1;\nCREATE UNIQUE INDEX idx_tab2_0 ON tab2 (col1);\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02815_fix_not_found_constants_col_in_block.sql,clickhouse,"[{'query': 'DROP TABLE IF EXISTS t0;\nCREATE TABLE t0 (vkey UInt32, c0 Float32, primary key(c0)) engine = AggregatingMergeTree;\ninsert into t0 values (19000, 1);\nselect null as c_2_0, ref_2.c0 as c_2_1, ref_2.vkey as c_2_2 from t0 as ref_2 order by c_2_0 asc, c_2_1 asc, c_2_2 asc;\nselect null as c_2_0, ref_2.c0 as c_2_1, ref_2.vkey as c_2_2 from t0 as ref_2 order by c_2_0 asc, c_2_1 asc;\nDROP TABLE t0;\n', 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS t0;\nCREATE TABLE t0 (vkey UInt32, c0 Float32, primary key(c0)) engine = AggregatingMergeTree;\ninsert into t0 values (19000, 1);\nselect null as c_2_0, ref_2.c0 as c_2_1, ref_2.vkey as c_2_2 from t0 as ref_2 order by c_2_0 asc, c_2_1 asc, c_2_2 asc;\nselect null as c_2_0, ref_2.c0 as c_2_1, ref_2.vkey as c_2_2 from t0 as ref_2 order by c_2_0 asc, c_2_1 asc;\nDROP TABLE t0;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02861_index_set_incorrect_args.sql,clickhouse,"[{'query': ""-- https://github.com/ClickHouse/ClickHouse/issues/52019\nDROP TABLE IF EXISTS set_index__fuzz_41;\nCREATE TABLE set_index__fuzz_41 (`a` Date, `b` Nullable(DateTime64(3)), INDEX b_set b TYPE set(0) GRANULARITY 1) ENGINE = MergeTree ORDER BY tuple();\nINSERT INTO set_index__fuzz_41 (a) VALUES (today());\nSELECT b FROM set_index__fuzz_41 WHERE and(b = 256) SETTINGS force_data_skipping_indices = 'b_set', optimize_move_to_prewhere = 0, max_parallel_replicas=2, parallel_replicas_for_non_replicated_merge_tree=1, allow_experimental_parallel_reading_from_replicas=2; -- { serverError TOO_FEW_ARGUMENTS_FOR_FUNCTION }\nDROP TABLE set_index__fuzz_41;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql '-- https://github.com/ClickHouse/ClickHouse/issues/52019\nDROP TABLE IF EXISTS set_index__fuzz_41;\nCREATE TABLE set_index__fuzz_41 (`a` Date, `b` Nullable(DateTime64(3)), INDEX b_set b TYPE set(0) GRANULARITY 1) ENGINE = MergeTree ORDER BY tuple();\nINSERT INTO set_index__fuzz_41 (a) VALUES (today());\nSELECT b FROM set_index__fuzz_41 WHERE and(b = 256) SETTINGS force_data_skipping_indices = 'b_set', optimize_move_to_prewhere = 0, max_parallel_replicas=2, parallel_replicas_for_non_replicated_merge_tree=1, allow_experimental_parallel_reading_from_replicas=2; -- { serverError TOO_FEW_ARGUMENTS_FOR_FUNCTION }\nDROP TABLE set_index__fuzz_41;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02874_parse_json_as_json_each_row_on_no_metadata.sql,clickhouse,"[{'query': 'desc format(JSON, \'{""a"" : 10, ""b"" : ""Hello""}\');\nselect * from format(JSON, \'{""a"" : 10, ""b"" : ""Hello""}\');\n\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 404)\n Code: 46, e.displayText() = DB::Exception: Unknown table function format, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'desc format(JSON, \'{""a"" : 10, ""b"" : ""Hello""}\');\nselect * from format(JSON, \'{""a"" : 10, ""b"" : ""Hello""}\');\n\n\': near ""desc"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02900_date_time_check_overflow.sql,clickhouse,"[{'query': ""SET session_timezone = 'UTC';\n\nSELECT 'ignore';\nSET date_time_overflow_behavior = 'ignore';\nSELECT toDateTime(toDateTime64('1900-01-01 00:00:00.123', 3));\nSELECT toDateTime(toDateTime64('2299-12-31 23:59:59.999', 3));\n\nSELECT toDateTime(toDate32('1900-01-01'));\nSELECT toDateTime(toDate32('2299-12-31'));\n\nSELECT toDateTime(toDate('2149-06-06'));\n\nSELECT toDate(toDateTime64('1900-01-01 00:00:00.123', 3));\nSELECT toDate(toDateTime64('2149-06-07 00:00:00.123', 3));\nSELECT toDate(toDateTime64('2299-12-31 23:59:59.999', 3));\n\nSELECT toDate(toDate32('1900-01-01'));\nSELECT toDate(toDate32('2299-12-31'));\n\n\nSELECT 'No output on `throw`';\nSET date_time_overflow_behavior = 'throw';\nSELECT toDateTime(toDateTime64('1900-01-01 00:00:00.123', 3)); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\nSELECT toDateTime(toDateTime64('2299-12-31 23:59:59.999', 3)); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\nSELECT toDateTime(toDate32('1900-01-01')); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\nSELECT toDateTime(toDate32('2299-12-31')); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\nSELECT toDateTime(toDate('2149-06-06')); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\nSELECT toDate(toDateTime64('1900-01-01 00:00:00.123', 3)); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\nSELECT toDate(toDateTime64('2299-12-31 23:59:59.999', 3)); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\nSELECT toDate(toDate32('1900-01-01')); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\nSELECT toDate(toDate32('2299-12-31')); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\n\n\nSELECT 'saturate';\nSET date_time_overflow_behavior = 'saturate';\n\nSELECT toDateTime(toDateTime64('1900-01-01 00:00:00.123', 3));\nSELECT toDateTime(toDateTime64('2299-12-31 23:59:59.999', 3));\n\nSELECT toDateTime(toDate32('1900-01-01'));\nSELECT toDateTime(toDate32('2299-12-31'));\n\nSELECT toDateTime(toDate('2149-06-06'));\n\nSELECT toDate(toDateTime64('1900-01-01 00:00:00.123', 3));\nSELECT toDate(toDateTime64('2149-06-07 00:00:00.123', 3));\nSELECT toDate(toDateTime64('2299-12-31 23:59:59.999', 3));\n\nSELECT toDate(toDate32('1900-01-01'));\nSELECT toDate(toDate32('2299-12-31'));\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 31 (line 2, col 2): FORMAT Native. Expected one of: string literal, literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'SET session_timezone = \'UTC\';\n\nSELECT \'ignore\';\nSET date_time_overflow_behavior = \'ignore\';\nSELECT toDateTime(toDateTime64(\'1900-01-01 00:00:00.123\', 3));\nSELECT toDateTime(toDateTime64(\'2299-12-31 23:59:59.999\', 3));\n\nSELECT toDateTime(toDate32(\'1900-01-01\'));\nSELECT toDateTime(toDate32(\'2299-12-31\'));\n\nSELECT toDateTime(toDate(\'2149-06-06\'));\n\nSELECT toDate(toDateTime64(\'1900-01-01 00:00:00.123\', 3));\nSELECT toDate(toDateTime64(\'2149-06-07 00:00:00.123\', 3));\nSELECT toDate(toDateTime64(\'2299-12-31 23:59:59.999\', 3));\n\nSELECT toDate(toDate32(\'1900-01-01\'));\nSELECT toDate(toDate32(\'2299-12-31\'));\n\n\nSELECT \'No output on `throw`\';\nSET date_time_overflow_behavior = \'throw\';\nSELECT toDateTime(toDateTime64(\'1900-01-01 00:00:00.123\', 3)); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\nSELECT toDateTime(toDateTime64(\'2299-12-31 23:59:59.999\', 3)); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\nSELECT toDateTime(toDate32(\'1900-01-01\')); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\nSELECT toDateTime(toDate32(\'2299-12-31\')); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\nSELECT toDateTime(toDate(\'2149-06-06\')); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\nSELECT toDate(toDateTime64(\'1900-01-01 00:00:00.123\', 3)); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\nSELECT toDate(toDateTime64(\'2299-12-31 23:59:59.999\', 3)); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\nSELECT toDate(toDate32(\'1900-01-01\')); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\nSELECT toDate(toDate32(\'2299-12-31\')); -- { serverError VALUE_IS_OUT_OF_RANGE_OF_DATA_TYPE }\n\n\nSELECT \'saturate\';\nSET date_time_overflow_behavior = \'saturate\';\n\nSELECT toDateTime(toDateTime64(\'1900-01-01 00:00:00.123\', 3));\nSELECT toDateTime(toDateTime64(\'2299-12-31 23:59:59.999\', 3));\n\nSELECT toDateTime(toDate32(\'1900-01-01\'));\nSELECT toDateTime(toDate32(\'2299-12-31\'));\n\nSELECT toDateTime(toDate(\'2149-06-06\'));\n\nSELECT toDate(toDateTime64(\'1900-01-01 00:00:00.123\', 3));\nSELECT toDate(toDateTime64(\'2149-06-07 00:00:00.123\', 3));\nSELECT toDate(toDateTime64(\'2299-12-31 23:59:59.999\', 3));\n\nSELECT toDate(toDate32(\'1900-01-01\'));\nSELECT toDate(toDate32(\'2299-12-31\'));\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02910_rocksdb_optimize.sql,clickhouse,"[{'query': '-- Tags: use-rocksdb\n\nCREATE TABLE dict (key UInt64, value String) ENGINE = EmbeddedRocksDB PRIMARY KEY key;\nINSERT INTO dict SELECT number, toString(number) FROM numbers(1e3);\nOPTIMIZE TABLE dict;\n', 'source_success': False, 'source_exception': "":HTTPDriver for http://localhost:8123 returned response code 404)\n Code: 81, e.displayText() = DB::Exception: Database default doesn't exist, e.what() = DB::Exception\n"", 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- Tags: use-rocksdb\n\nCREATE TABLE dict (key UInt64, value String) ENGINE = EmbeddedRocksDB PRIMARY KEY key;\nINSERT INTO dict SELECT number, toString(number) FROM numbers(1e3);\nOPTIMIZE TABLE dict;\n\': near ""="": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02915_analyzer_fuzz_5.sql,clickhouse,"[{'query': ""set allow_experimental_analyzer=1;\nSET max_block_size = 1000;\nSET max_threads = 4;\nSET max_rows_to_group_by = 3000, group_by_overflow_mode = 'any';\nSELECT 'limit w/ GROUP BY', count(NULL), number FROM remote('127.{1,2}', view(SELECT intDiv(number, 2147483647)\n AS number FROM numbers(10))) GROUP BY number WITH ROLLUP ORDER BY count() ASC, number DESC NULLS LAST SETTINGS limit = 2;\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 36 (line 2, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'set allow_experimental_analyzer=1;\nSET max_block_size = 1000;\nSET max_threads = 4;\nSET max_rows_to_group_by = 3000, group_by_overflow_mode = \'any\';\nSELECT \'limit w/ GROUP BY\', count(NULL), number FROM remote(\'127.{1,2}\', view(SELECT intDiv(number, 2147483647)\n AS number FROM numbers(10))) GROUP BY number WITH ROLLUP ORDER BY count() ASC, number DESC NULLS LAST SETTINGS limit = 2;\n\': near ""set"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02916_distributed_skip_unavailable_shards.sql,clickhouse,"[{'query': ""-- Tags: shard, no-fasttest\n\nDROP TABLE IF EXISTS table_02916;\nDROP TABLE IF EXISTS table_02916_distributed;\n\nCREATE TABLE table_02916\n(\n    `ID` UInt32,\n    `Name` String\n)\nENGINE = MergeTree\nORDER BY ID;\n\nINSERT INTO table_02916 VALUES (1234, 'abcd');\n\nCREATE TABLE table_02916_distributed\n(\n    `ID` UInt32,\n    `Name` String\n)\nENGINE = Distributed(test_unavailable_shard, currentDatabase(), table_02916, rand())\nSETTINGS skip_unavailable_shards = 1;\n\nSET send_logs_level='fatal';\nSELECT *, _shard_num FROM table_02916_distributed;\n\nDROP TABLE table_02916_distributed;\nDROP TABLE table_02916;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql '-- Tags: shard, no-fasttest\n\nDROP TABLE IF EXISTS table_02916;\nDROP TABLE IF EXISTS table_02916_distributed;\n\nCREATE TABLE table_02916\n(\n    `ID` UInt32,\n    `Name` String\n)\nENGINE = MergeTree\nORDER BY ID;\n\nINSERT INTO table_02916 VALUES (1234, 'abcd');\n\nCREATE TABLE table_02916_distributed\n(\n    `ID` UInt32,\n    `Name` String\n)\nENGINE = Distributed(test_unavailable_shard, currentDatabase(), table_02916, rand())\nSETTINGS skip_unavailable_shards = 1;\n\nSET send_logs_level='fatal';\nSELECT *, _shard_num FROM table_02916_distributed;\n\nDROP TABLE table_02916_distributed;\nDROP TABLE table_02916;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
02932_set_ttl_where.sql,clickhouse,"[{'query': '-- Tags: no-ordinary-database\n\ncreate or replace table t_temp (\n    a UInt32,\n    timestamp DateTime\n)\nengine = MergeTree\norder by a\nTTL timestamp + INTERVAL 2 SECOND WHERE a in (select number from system.numbers limit 100_000);\n\nselect sleep(1);\ninsert into t_temp select rand(), now() from system.numbers limit 1_000_000;\nselect sleep(1);\ninsert into t_temp select rand(), now() from system.numbers limit 1_000_000;\nselect sleep(1);\noptimize table t_temp final;\n\nDROP TABLE t_temp;\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 179 (line 9, col 46): (select number from system.numbers limit 100_000)\n FORMAT Native. Unmatched parentheses: (, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- Tags: no-ordinary-database\n\ncreate or replace table t_temp (\n    a UInt32,\n    timestamp DateTime\n)\nengine = MergeTree\norder by a\nTTL timestamp + INTERVAL 2 SECOND WHERE a in (select number from system.numbers limit 100_000);\n\nselect sleep(1);\ninsert into t_temp select rand(), now() from system.numbers limit 1_000_000;\nselect sleep(1);\ninsert into t_temp select rand(), now() from system.numbers limit 1_000_000;\nselect sleep(1);\noptimize table t_temp final;\n\nDROP TABLE t_temp;\n\': near ""or"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02935_format_with_arbitrary_types.sql,clickhouse,"[{'query': '\n-- Tags: no-fasttest\n-- no-fasttest: json type needs rapidjson library, geo types need s2 geometry\n\nSET allow_experimental_object_type = 1;\nSET allow_suspicious_low_cardinality_types=1;\n\nSELECT \'-- Const string + non-const arbitrary type\';\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(42 :: Int8));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(43 :: Int16));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(44 :: Int32));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(45 :: Int64));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(46 :: Int128));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(47 :: Int256));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(48 :: UInt8));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(49 :: UInt16));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(50 :: UInt32));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(51 :: UInt64));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(52 :: UInt128));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(53 :: UInt256));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(42.42 :: Float32));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(43.43 :: Float64));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(44.44 :: Decimal(2)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(true :: Bool));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(false :: Bool));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'foo\' :: String));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'bar\' :: FixedString(3)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'foo\' :: Nullable(String)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'bar\' :: Nullable(FixedString(3))));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'foo\' :: LowCardinality(String)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'bar\' :: LowCardinality(FixedString(3))));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'foo\' :: LowCardinality(Nullable(String))));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'bar\' :: LowCardinality(Nullable(FixedString(3)))));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(42 :: LowCardinality(Nullable(UInt32))));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(42 :: LowCardinality(UInt32)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'fae310ca-d52a-4923-9e9b-02bf67f4b009\' :: UUID));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'2023-11-14\' :: Date));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'2123-11-14\' :: Date32));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'2023-11-14 05:50:12\' :: DateTime(\'Europe/Amsterdam\')));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'2023-11-14 05:50:12.123\' :: DateTime64(3, \'Europe/Amsterdam\')));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'hallo\' :: Enum(\'hallo\' = 1)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize([\'foo\', \'bar\'] :: Array(String)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'{""foo"": ""bar""}\' :: JSON));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize((42, \'foo\') :: Tuple(Int32, String)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(map(42, \'foo\') :: Map(Int32, String)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'122.233.64.201\' :: IPv4));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'2001:0001:130F:0002:0003:09C0:876A:130B\' :: IPv6));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize((42, 43) :: Point));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize([(0,0),(10,0),(10,10),(0,10)] :: Ring));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize([[(20, 20), (50, 20), (50, 50), (20, 50)], [(30, 30), (50, 50), (50, 30)]] :: Polygon));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize([[[(0, 0), (10, 0), (10, 10), (0, 10)]], [[(20, 20), (50, 20), (50, 50), (20, 50)],[(30, 30), (50, 50), (50, 30)]]] :: MultiPolygon));\n\nSELECT \'-- Nested\';\nDROP TABLE IF EXISTS format_nested;\nCREATE TABLE format_nested(attrs Nested(k String, v String)) ENGINE = MergeTree ORDER BY tuple();\nINSERT INTO format_nested VALUES ([\'foo\', \'bar\'], [\'qaz\', \'qux\']);\nSELECT format(\'The {0} to all questions is {1}.\', attrs.k, attrs.v) FROM format_nested;\nDROP TABLE format_nested;\n\nSELECT \'-- NULL arguments\';\nSELECT format(\'The {0} to all questions is {1}\', NULL, NULL);\nSELECT format(\'The {0} to all questions is {1}\', NULL, materialize(NULL :: Nullable(UInt64)));\nSELECT format(\'The {0} to all questions is {1}\', materialize(NULL :: Nullable(UInt64)), materialize(NULL :: Nullable(UInt64)));\nSELECT format(\'The {0} to all questions is {1}\', 42, materialize(NULL :: Nullable(UInt64)));\nSELECT format(\'The {0} to all questions is {1}\', \'42\', materialize(NULL :: Nullable(UInt64)));\nSELECT format(\'The {0} to all questions is {1}\', 42, materialize(NULL :: Nullable(UInt64)), materialize(NULL :: Nullable(UInt64)));\nSELECT format(\'The {0} to all questions is {1}\', \'42\', materialize(NULL :: Nullable(UInt64)), materialize(NULL :: Nullable(UInt64)));\n\nSELECT \'-- Various arguments tests\';\nSELECT format(\'The {0} to all questions is {1}\', materialize(\'Non-const\'), materialize(\' strings\'));\nSELECT format(\'The {0} to all questions is {1}\', \'Two arguments \', \'test\');\nSELECT format(\'The {0} to all questions is {1} and {2}\', \'Three \', \'arguments\', \' test\');\nSELECT format(\'The {0} to all questions is {1} and {2}\', materialize(3 :: Int64), \' arguments test\', \' with int type\');\nSELECT format(\'The {0} to all questions is {1}\', materialize(42 :: Int32), materialize(144 :: UInt64));\nSELECT format(\'The {0} to all questions is {1} and {2}\', materialize(42 :: Int32), materialize(144 :: UInt64), materialize(255 :: UInt32));\nSELECT format(\'The {0} to all questions is {1}\', 42, 144);\nSELECT format(\'The {0} to all questions is {1} and {2}\', 42, 144, 255);\n\nSELECT \'-- Single argument tests\';\nSELECT format(\'The answer to all questions is {0}.\', 42);\nSELECT format(\'The answer to all questions is {0}.\', materialize(42));\nSELECT format(\'The answer to all questions is {0}.\', \'foo\');\nSELECT format(\'The answer to all questions is {0}.\', materialize(\'foo\'));\nSELECT format(\'The answer to all questions is {0}.\', NULL);\nSELECT format(\'The answer to all questions is {0}.\', materialize(NULL :: Nullable(UInt64)));\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 142 (line 6, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'\n-- Tags: no-fasttest\n-- no-fasttest: json type needs rapidjson library, geo types need s2 geometry\n\nSET allow_experimental_object_type = 1;\nSET allow_suspicious_low_cardinality_types=1;\n\nSELECT \'-- Const string + non-const arbitrary type\';\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(42 :: Int8));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(43 :: Int16));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(44 :: Int32));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(45 :: Int64));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(46 :: Int128));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(47 :: Int256));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(48 :: UInt8));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(49 :: UInt16));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(50 :: UInt32));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(51 :: UInt64));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(52 :: UInt128));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(53 :: UInt256));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(42.42 :: Float32));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(43.43 :: Float64));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(44.44 :: Decimal(2)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(true :: Bool));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(false :: Bool));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'foo\' :: String));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'bar\' :: FixedString(3)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'foo\' :: Nullable(String)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'bar\' :: Nullable(FixedString(3))));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'foo\' :: LowCardinality(String)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'bar\' :: LowCardinality(FixedString(3))));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'foo\' :: LowCardinality(Nullable(String))));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'bar\' :: LowCardinality(Nullable(FixedString(3)))));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(42 :: LowCardinality(Nullable(UInt32))));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(42 :: LowCardinality(UInt32)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'fae310ca-d52a-4923-9e9b-02bf67f4b009\' :: UUID));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'2023-11-14\' :: Date));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'2123-11-14\' :: Date32));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'2023-11-14 05:50:12\' :: DateTime(\'Europe/Amsterdam\')));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'2023-11-14 05:50:12.123\' :: DateTime64(3, \'Europe/Amsterdam\')));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'hallo\' :: Enum(\'hallo\' = 1)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize([\'foo\', \'bar\'] :: Array(String)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'{""foo"": ""bar""}\' :: JSON));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize((42, \'foo\') :: Tuple(Int32, String)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(map(42, \'foo\') :: Map(Int32, String)));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'122.233.64.201\' :: IPv4));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize(\'2001:0001:130F:0002:0003:09C0:876A:130B\' :: IPv6));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize((42, 43) :: Point));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize([(0,0),(10,0),(10,10),(0,10)] :: Ring));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize([[(20, 20), (50, 20), (50, 50), (20, 50)], [(30, 30), (50, 50), (50, 30)]] :: Polygon));\nSELECT format(\'The {0} to all questions is {1}.\', \'answer\', materialize([[[(0, 0), (10, 0), (10, 10), (0, 10)]], [[(20, 20), (50, 20), (50, 50), (20, 50)],[(30, 30), (50, 50), (50, 30)]]] :: MultiPolygon));\n\nSELECT \'-- Nested\';\nDROP TABLE IF EXISTS format_nested;\nCREATE TABLE format_nested(attrs Nested(k String, v String)) ENGINE = MergeTree ORDER BY tuple();\nINSERT INTO format_nested VALUES ([\'foo\', \'bar\'], [\'qaz\', \'qux\']);\nSELECT format(\'The {0} to all questions is {1}.\', attrs.k, attrs.v) FROM format_nested;\nDROP TABLE format_nested;\n\nSELECT \'-- NULL arguments\';\nSELECT format(\'The {0} to all questions is {1}\', NULL, NULL);\nSELECT format(\'The {0} to all questions is {1}\', NULL, materialize(NULL :: Nullable(UInt64)));\nSELECT format(\'The {0} to all questions is {1}\', materialize(NULL :: Nullable(UInt64)), materialize(NULL :: Nullable(UInt64)));\nSELECT format(\'The {0} to all questions is {1}\', 42, materialize(NULL :: Nullable(UInt64)));\nSELECT format(\'The {0} to all questions is {1}\', \'42\', materialize(NULL :: Nullable(UInt64)));\nSELECT format(\'The {0} to all questions is {1}\', 42, materialize(NULL :: Nullable(UInt64)), materialize(NULL :: Nullable(UInt64)));\nSELECT format(\'The {0} to all questions is {1}\', \'42\', materialize(NULL :: Nullable(UInt64)), materialize(NULL :: Nullable(UInt64)));\n\nSELECT \'-- Various arguments tests\';\nSELECT format(\'The {0} to all questions is {1}\', materialize(\'Non-const\'), materialize(\' strings\'));\nSELECT format(\'The {0} to all questions is {1}\', \'Two arguments \', \'test\');\nSELECT format(\'The {0} to all questions is {1} and {2}\', \'Three \', \'arguments\', \' test\');\nSELECT format(\'The {0} to all questions is {1} and {2}\', materialize(3 :: Int64), \' arguments test\', \' with int type\');\nSELECT format(\'The {0} to all questions is {1}\', materialize(42 :: Int32), materialize(144 :: UInt64));\nSELECT format(\'The {0} to all questions is {1} and {2}\', materialize(42 :: Int32), materialize(144 :: UInt64), materialize(255 :: UInt32));\nSELECT format(\'The {0} to all questions is {1}\', 42, 144);\nSELECT format(\'The {0} to all questions is {1} and {2}\', 42, 144, 255);\n\nSELECT \'-- Single argument tests\';\nSELECT format(\'The answer to all questions is {0}.\', 42);\nSELECT format(\'The answer to all questions is {0}.\', materialize(42));\nSELECT format(\'The answer to all questions is {0}.\', \'foo\');\nSELECT format(\'The answer to all questions is {0}.\', materialize(\'foo\'));\nSELECT format(\'The answer to all questions is {0}.\', NULL);\nSELECT format(\'The answer to all questions is {0}.\', materialize(NULL :: Nullable(UInt64)));\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
02982_parallel_replicas_unexpected_cluster.sql,clickhouse,"[{'query': ""DROP TABLE IF EXISTS test_unexpected_cluster;\nCREATE TABLE test_unexpected_cluster (n UInt64) ENGINE=MergeTree() ORDER BY tuple();\nINSERT INTO test_unexpected_cluster SELECT * FROM numbers(10);\n\nSET allow_experimental_parallel_reading_from_replicas=2, max_parallel_replicas=2, cluster_for_parallel_replicas='test_cluster_two_shards', parallel_replicas_for_non_replicated_merge_tree=1;\nSELECT count() FROM test_unexpected_cluster WHERE NOT ignore(*); -- { serverError UNEXPECTED_CLUSTER }\n\nDROP TABLE test_unexpected_cluster;\n"", 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS test_unexpected_cluster;\nCREATE TABLE test_unexpected_cluster (n UInt64) ENGINE=MergeTree() ORDER BY tuple();\nINSERT INTO test_unexpected_cluster SELECT * FROM numbers(10);\n\nSET allow_experimental_parallel_reading_from_replicas=2, max_parallel_replicas=2, cluster_for_parallel_replicas='test_cluster_two_shards', parallel_replicas_for_non_replicated_merge_tree=1;\nSELECT count() FROM test_unexpected_cluster WHERE NOT ignore(*); -- { serverError UNEXPECTED_CLUSTER }\n\nDROP TABLE test_unexpected_cluster;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
03003_analyzer_setting.sql,clickhouse,"[{'query': ""CREATE TABLE test (dummy Int8) ENGINE = Distributed(test_cluster_two_shards, 'system', 'one');\n\nSET allow_experimental_analyzer = 0;\n\nSELECT * FROM (SELECT * FROM test SETTINGS allow_experimental_analyzer = 1); -- { serverError INCORRECT_QUERY }\n\nSET allow_experimental_analyzer = 1;\n\nSELECT * FROM (SELECT * FROM test SETTINGS allow_experimental_analyzer = 0); -- { serverError INCORRECT_QUERY }\n"", 'source_success': False, 'source_exception': "":HTTPDriver for http://localhost:8123 returned response code 404)\n Code: 81, e.displayText() = DB::Exception: Database default doesn't exist, e.what() = DB::Exception\n"", 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'CREATE TABLE test (dummy Int8) ENGINE = Distributed(test_cluster_two_shards, \'system\', \'one\');\n\nSET allow_experimental_analyzer = 0;\n\nSELECT * FROM (SELECT * FROM test SETTINGS allow_experimental_analyzer = 1); -- { serverError INCORRECT_QUERY }\n\nSET allow_experimental_analyzer = 1;\n\nSELECT * FROM (SELECT * FROM test SETTINGS allow_experimental_analyzer = 0); -- { serverError INCORRECT_QUERY }\n\': near ""="": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
03013_group_by_use_nulls_with_materialize_and_analyzer.sql,clickhouse,"[{'query': ""set allow_experimental_analyzer = 1;\nset group_by_use_nulls = 1;\nset optimize_group_by_function_keys = 1;\nset optimize_injective_functions_in_group_by = 1;\n\nSELECT 3 + 3 from numbers(10) GROUP BY GROUPING SETS (('str'), (3 + 3)) order by all;\nSELECT materialize(3) from numbers(10) GROUP BY GROUPING SETS (('str'), (materialize(3))) order by all;\nSELECT ignore(3) from numbers(10) GROUP BY GROUPING SETS (('str'), (ignore(3))) order by all;\nSELECT materialize(ignore(3)) from numbers(10) GROUP BY GROUPING SETS (('str'), (materialize(ignore(3)))) order by all;\nSELECT ignore(materialize(3)) from numbers(10) GROUP BY GROUPING SETS (('str'), (ignore(materialize(3)))) order by all;\n\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 38 (line 2, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'set allow_experimental_analyzer = 1;\nset group_by_use_nulls = 1;\nset optimize_group_by_function_keys = 1;\nset optimize_injective_functions_in_group_by = 1;\n\nSELECT 3 + 3 from numbers(10) GROUP BY GROUPING SETS ((\'str\'), (3 + 3)) order by all;\nSELECT materialize(3) from numbers(10) GROUP BY GROUPING SETS ((\'str\'), (materialize(3))) order by all;\nSELECT ignore(3) from numbers(10) GROUP BY GROUPING SETS ((\'str\'), (ignore(3))) order by all;\nSELECT materialize(ignore(3)) from numbers(10) GROUP BY GROUPING SETS ((\'str\'), (materialize(ignore(3)))) order by all;\nSELECT ignore(materialize(3)) from numbers(10) GROUP BY GROUPING SETS ((\'str\'), (ignore(materialize(3)))) order by all;\n\n\': near ""set"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
03035_morton_encode_no_rows.sql,clickhouse,"[{'query': 'SELECT mortonEncode(materialize((1, 1)), 65534, 65533);\nSELECT mortonEncode((1, 1), 65534, 65533);\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 404)\n Code: 46, e.displayText() = DB::Exception: Unknown function mortonEncode, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'SELECT mortonEncode(materialize((1, 1)), 65534, 65533);\nSELECT mortonEncode((1, 1), 65534, 65533);\n': no such function: materialize"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
03042_not_found_column_c1.sql,clickhouse,"[{'query': '-- https://github.com/ClickHouse/ClickHouse/issues/42399\nSET allow_experimental_analyzer=1;\n\nCREATE TABLE IF NOT EXISTS t0 (c0 Int32) ENGINE = Memory() ;\nCREATE TABLE t1 (c0 Int32, c1 Int32, c2 Int32) ENGINE = Memory() ;\nCREATE TABLE t2 (c0 String, c1 String MATERIALIZED (c2), c2 Int32) ENGINE = Memory() ;\nCREATE TABLE t3 (c0 String, c1 String, c2 String) ENGINE = Log() ;\nCREATE TABLE IF NOT EXISTS t4 (c0 Int32) ENGINE = Log() ;\nSELECT t3.c1, t3.c2, t1.c1, t1.c0, t2.c2, t0.c0, t1.c2, t2.c1, t4.c0 FROM t3, t0, t1, t2, t4;\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 93 (line 3, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- https://github.com/ClickHouse/ClickHouse/issues/42399\nSET allow_experimental_analyzer=1;\n\nCREATE TABLE IF NOT EXISTS t0 (c0 Int32) ENGINE = Memory() ;\nCREATE TABLE t1 (c0 Int32, c1 Int32, c2 Int32) ENGINE = Memory() ;\nCREATE TABLE t2 (c0 String, c1 String MATERIALIZED (c2), c2 Int32) ENGINE = Memory() ;\nCREATE TABLE t3 (c0 String, c1 String, c2 String) ENGINE = Log() ;\nCREATE TABLE IF NOT EXISTS t4 (c0 Int32) ENGINE = Log() ;\nSELECT t3.c1, t3.c2, t1.c1, t1.c0, t2.c2, t0.c0, t1.c2, t2.c1, t4.c0 FROM t3, t0, t1, t2, t4;\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
03057_analyzer_subquery_alias_join.sql,clickhouse,"[{'query': '-- https://github.com/ClickHouse/ClickHouse/issues/10276\nSET allow_experimental_analyzer=1;\nSELECT\n    sum(x.n) as n,\n    sum(z.n) as n2\nFROM\n(\n    SELECT 1000 AS n,1 as id\n) AS x\njoin (select 10000 as n,1 as id) as y\non x.id = y.id\nleft join (select 100000 as n,1 as id) as z\non x.id = z.id;\n', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 93 (line 3, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- https://github.com/ClickHouse/ClickHouse/issues/10276\nSET allow_experimental_analyzer=1;\nSELECT\n    sum(x.n) as n,\n    sum(z.n) as n2\nFROM\n(\n    SELECT 1000 AS n,1 as id\n) AS x\njoin (select 10000 as n,1 as id) as y\non x.id = y.id\nleft join (select 100000 as n,1 as id) as z\non x.id = z.id;\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
03100_analyzer_constants_in_multiif.sql,clickhouse,"[{'query': ""-- https://github.com/ClickHouse/ClickHouse/issues/59101\nSET allow_experimental_analyzer = 1;\n\nCREATE TABLE users (name String, age Int16) ENGINE=Memory;\nINSERT INTO users VALUES ('John', 33);\nINSERT INTO users VALUES ('Ksenia', 48);\nINSERT INTO users VALUES ('Alice', 50);\n\nSELECT\n    multiIf((age > 30) or (true), '1', '2') AS a,\n    max(name)\nFROM users\nGROUP BY a;\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 95 (line 3, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- https://github.com/ClickHouse/ClickHouse/issues/59101\nSET allow_experimental_analyzer = 1;\n\nCREATE TABLE users (name String, age Int16) ENGINE=Memory;\nINSERT INTO users VALUES (\'John\', 33);\nINSERT INTO users VALUES (\'Ksenia\', 48);\nINSERT INTO users VALUES (\'Alice\', 50);\n\nSELECT\n    multiIf((age > 30) or (true), \'1\', \'2\') AS a,\n    max(name)\nFROM users\nGROUP BY a;\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
03101_analyzer_identifiers_2.sql,clickhouse,"[{'query': ""-- https://github.com/ClickHouse/ClickHouse/issues/23194\nSET allow_experimental_analyzer = 1;\n\nCREATE TEMPORARY TABLE test1 (a String, nest Nested(x String, y String));\n\nSELECT a, nest.* FROM test1 ARRAY JOIN nest;\nSELECT a, n.* FROM test1 ARRAY JOIN nest AS n;\n\nCREATE TEMPORARY TABLE test2 (a String, nest Array(Tuple(x String, y String)));\n\nSELECT a, nest.* FROM test2 ARRAY JOIN nest;\nSELECT a, n.* FROM test2 ARRAY JOIN nest AS n;\n\n\nSELECT 1 AS x, x, x + 1;\nSELECT x, x + 1, 1 AS x;\nSELECT x, 1 + (2 + (3 AS x));\n\nSELECT '---';\n\nSELECT 123 AS x FROM (SELECT a, x FROM (SELECT 1 AS a, 2 AS b));\n\nSELECT '---';\n\nSELECT 123 AS x, (SELECT x) AS y;\nSELECT 123 AS x, 123 IN (SELECT x);\n\nSELECT '---';\n\nWITH 123 AS x SELECT 555 FROM (SELECT a, x FROM (SELECT 1 AS a, 2 AS b));\n\nSELECT '---';\n\n-- here we refer to table `test1` (defined as subquery) three times, one of them inside another scalar subquery.\nWITH t AS (SELECT 1) SELECT t, (SELECT * FROM t) FROM t; -- { serverError UNKNOWN_IDENTIFIER }\n\n-- throws, because x is not visible outside.\nSELECT x FROM (SELECT y FROM VALUES ('y UInt16', (2)) WHERE (1 AS x) = y) AS t;  -- { serverError UNKNOWN_IDENTIFIER }\n\n-- throws, because the table name `t` is not visible outside\nSELECT t.x FROM (SELECT * FROM (SELECT 1 AS x) AS t); -- { serverError UNKNOWN_IDENTIFIER }\nSELECT x FROM (SELECT * FROM (SELECT 99 AS x) AS t);\n\nSELECT '---';\n\nSELECT t.x FROM (SELECT 1 AS x) AS t;\nSELECT t.a FROM (SELECT a FROM test1) AS t;\nSELECT a FROM (SELECT a FROM test1) AS t;\n\nSELECT '---';\n\n-- this is wrong, the `tbl` name is not exported\nSELECT test1.a FROM (SELECT a FROM test1) AS t; -- { serverError UNKNOWN_IDENTIFIER }\n-- this is also wrong, the `t2` alias is not exported\nSELECT test1.a FROM (SELECT a FROM test1 AS t2) AS t; -- { serverError UNKNOWN_IDENTIFIER }\n\n\n-- does not work, `x` is not visible;\nSELECT x, (SELECT 1 AS x); -- { serverError UNKNOWN_IDENTIFIER }\n-- does not work either;\nSELECT x IN (SELECT 1 AS x); -- { serverError UNKNOWN_IDENTIFIER }\n-- this will work, but keep in mind that there are two different `x`.\nSELECT x IN (SELECT 1 AS x) FROM (SELECT 1 AS x);\n\nSELECT '---';\n\nSELECT x + 1 AS x, x FROM (SELECT 1 AS x);\nSELECT x, x + 1 AS x FROM (SELECT 1 AS x);\nSELECT 1 AS x, 2 AS x; -- { serverError MULTIPLE_EXPRESSIONS_FOR_ALIAS }\n\nSELECT '---';\n\n\nSELECT arrayMap(x -> x + 1, [1, 2]);\n\nSELECT x, arrayMap((x, y) -> x[1] + y + arrayFirst(x -> x != y, x), arr) FROM (SELECT 1 AS x, [([1, 2], 3), ([4, 5], 6)] AS arr);\n\nSELECT x1, arrayMap((x2, y2) -> x2[1] + y2 + arrayFirst(x3 -> x3 != y2, x2), arr) FROM (SELECT 1 AS x1, [([1, 2], 3), ([4, 5], 6)] AS arr);\n\nSELECT arrayMap(x -> [y * 2, (x + 1) AS y, 1 AS z], [1, 2]), y; -- { serverError UNKNOWN_IDENTIFIER }\n\n-- TODO: this must work\n--SELECT arrayMap(x -> [y * 2, (x + 1) AS y, 1 AS z], [1, 2]), z;\n\nSELECT arrayMap(x -> (x + 1) AS y, [3, 5]), arrayMap(x -> (x || 'hello') AS y, ['qq', 'ww']);  -- { serverError MULTIPLE_EXPRESSIONS_FOR_ALIAS }\n"", 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 95 (line 3, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- https://github.com/ClickHouse/ClickHouse/issues/23194\nSET allow_experimental_analyzer = 1;\n\nCREATE TEMPORARY TABLE test1 (a String, nest Nested(x String, y String));\n\nSELECT a, nest.* FROM test1 ARRAY JOIN nest;\nSELECT a, n.* FROM test1 ARRAY JOIN nest AS n;\n\nCREATE TEMPORARY TABLE test2 (a String, nest Array(Tuple(x String, y String)));\n\nSELECT a, nest.* FROM test2 ARRAY JOIN nest;\nSELECT a, n.* FROM test2 ARRAY JOIN nest AS n;\n\n\nSELECT 1 AS x, x, x + 1;\nSELECT x, x + 1, 1 AS x;\nSELECT x, 1 + (2 + (3 AS x));\n\nSELECT \'---\';\n\nSELECT 123 AS x FROM (SELECT a, x FROM (SELECT 1 AS a, 2 AS b));\n\nSELECT \'---\';\n\nSELECT 123 AS x, (SELECT x) AS y;\nSELECT 123 AS x, 123 IN (SELECT x);\n\nSELECT \'---\';\n\nWITH 123 AS x SELECT 555 FROM (SELECT a, x FROM (SELECT 1 AS a, 2 AS b));\n\nSELECT \'---\';\n\n-- here we refer to table `test1` (defined as subquery) three times, one of them inside another scalar subquery.\nWITH t AS (SELECT 1) SELECT t, (SELECT * FROM t) FROM t; -- { serverError UNKNOWN_IDENTIFIER }\n\n-- throws, because x is not visible outside.\nSELECT x FROM (SELECT y FROM VALUES (\'y UInt16\', (2)) WHERE (1 AS x) = y) AS t;  -- { serverError UNKNOWN_IDENTIFIER }\n\n-- throws, because the table name `t` is not visible outside\nSELECT t.x FROM (SELECT * FROM (SELECT 1 AS x) AS t); -- { serverError UNKNOWN_IDENTIFIER }\nSELECT x FROM (SELECT * FROM (SELECT 99 AS x) AS t);\n\nSELECT \'---\';\n\nSELECT t.x FROM (SELECT 1 AS x) AS t;\nSELECT t.a FROM (SELECT a FROM test1) AS t;\nSELECT a FROM (SELECT a FROM test1) AS t;\n\nSELECT \'---\';\n\n-- this is wrong, the `tbl` name is not exported\nSELECT test1.a FROM (SELECT a FROM test1) AS t; -- { serverError UNKNOWN_IDENTIFIER }\n-- this is also wrong, the `t2` alias is not exported\nSELECT test1.a FROM (SELECT a FROM test1 AS t2) AS t; -- { serverError UNKNOWN_IDENTIFIER }\n\n\n-- does not work, `x` is not visible;\nSELECT x, (SELECT 1 AS x); -- { serverError UNKNOWN_IDENTIFIER }\n-- does not work either;\nSELECT x IN (SELECT 1 AS x); -- { serverError UNKNOWN_IDENTIFIER }\n-- this will work, but keep in mind that there are two different `x`.\nSELECT x IN (SELECT 1 AS x) FROM (SELECT 1 AS x);\n\nSELECT \'---\';\n\nSELECT x + 1 AS x, x FROM (SELECT 1 AS x);\nSELECT x, x + 1 AS x FROM (SELECT 1 AS x);\nSELECT 1 AS x, 2 AS x; -- { serverError MULTIPLE_EXPRESSIONS_FOR_ALIAS }\n\nSELECT \'---\';\n\n\nSELECT arrayMap(x -> x + 1, [1, 2]);\n\nSELECT x, arrayMap((x, y) -> x[1] + y + arrayFirst(x -> x != y, x), arr) FROM (SELECT 1 AS x, [([1, 2], 3), ([4, 5], 6)] AS arr);\n\nSELECT x1, arrayMap((x2, y2) -> x2[1] + y2 + arrayFirst(x3 -> x3 != y2, x2), arr) FROM (SELECT 1 AS x1, [([1, 2], 3), ([4, 5], 6)] AS arr);\n\nSELECT arrayMap(x -> [y * 2, (x + 1) AS y, 1 AS z], [1, 2]), y; -- { serverError UNKNOWN_IDENTIFIER }\n\n-- TODO: this must work\n--SELECT arrayMap(x -> [y * 2, (x + 1) AS y, 1 AS z], [1, 2]), z;\n\nSELECT arrayMap(x -> (x + 1) AS y, [3, 5]), arrayMap(x -> (x || \'hello\') AS y, [\'qq\', \'ww\']);  -- { serverError MULTIPLE_EXPRESSIONS_FOR_ALIAS }\n\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
03108_describe_union_all.sql,clickhouse,"[{'query': '-- https://github.com/ClickHouse/ClickHouse/issues/8030\n\nSET allow_experimental_analyzer=1;\n\nDESCRIBE (SELECT 1, 1 UNION ALL SELECT 1, 2);', 'source_success': False, 'source_exception': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 93 (line 4, col 2): FORMAT Native. Expected one of: literal, number, NULL, e.what() = DB::Exception\n', 'source_result': None, 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': 'Execution failed on sql \'-- https://github.com/ClickHouse/ClickHouse/issues/8030\n\nSET allow_experimental_analyzer=1;\n\nDESCRIBE (SELECT 1, 1 UNION ALL SELECT 1, 2);\': near ""SET"": syntax error', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
03151_analyzer_view_read_only_necessary_columns.sql,clickhouse,"[{'query': 'DROP TABLE IF EXISTS test_table;\nCREATE TABLE test_table\n(\n    id UInt64,\n    value String\n) ENGINE=MergeTree ORDER BY id;\n\nDROP VIEW IF EXISTS test_view;\nCREATE VIEW test_view AS SELECT id, value FROM test_table;\n\nEXPLAIN header = 1 SELECT sum(id) FROM test_view settings allow_experimental_analyzer=1;\n\nDROP VIEW test_view;\nDROP TABLE test_table;\n', 'source_success': True, 'source_exception': '', 'source_result': 'Empty DataFrame\nColumns: []\nIndex: []', 'target_dbs': [{'db': 'sqlite', 'success': False, 'result': '', 'error': ""Execution failed on sql 'DROP TABLE IF EXISTS test_table;\nCREATE TABLE test_table\n(\n    id UInt64,\n    value String\n) ENGINE=MergeTree ORDER BY id;\n\nDROP VIEW IF EXISTS test_view;\nCREATE VIEW test_view AS SELECT id, value FROM test_table;\n\nEXPLAIN header = 1 SELECT sum(id) FROM test_view settings allow_experimental_analyzer=1;\n\nDROP VIEW test_view;\nDROP TABLE test_table;\n': You can only execute one statement at a time."", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
shared3,sqlite,"[{'query': 'PRAGMA auto_vacuum = 2;\nCREATE TABLE t1(x, y);\nINSERT INTO t1 VALUES(randomblob(500), randomblob(500));\nINSERT INTO t1 SELECT randomblob(500), randomblob(500) FROM t1;\nINSERT INTO t1 SELECT randomblob(500), randomblob(500) FROM t1;\nINSERT INTO t1 SELECT randomblob(500), randomblob(500) FROM t1;\nINSERT INTO t1 SELECT randomblob(500), randomblob(500) FROM t1;\nINSERT INTO t1 SELECT randomblob(500), randomblob(500) FROM t1;\nINSERT INTO t1 SELECT randomblob(500), randomblob(500) FROM t1;\nINSERT INTO t1 SELECT randomblob(500), randomblob(500) FROM t1;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'PRAGMA auto_vacuum = 2;\nCREATE TABLE t1(x, y);\nINSERT INTO t1 VALUES(randomblob(500), randomblob(500));\nINSERT INTO t1 SELECT randomblob(500), randomblob(500) FROM t1;\nINSERT INTO t1 SELECT randomblob(500), randomblob(500) FROM t1;\nINSERT INTO t1 SELECT randomblob(500), randomblob(500) FROM t1;\nINSERT INTO t1 SELECT randomblob(500), randomblob(500) FROM t1;\nINSERT INTO t1 SELECT randomblob(500), randomblob(500) FROM t1;\nINSERT INTO t1 SELECT randomblob(500), randomblob(500) FROM t1;\nINSERT INTO t1 SELECT randomblob(500), randomblob(500) FROM t1;\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): PRAGMA auto_vacuum = 2\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'BEGIN;\nDELETE FROM t1 WHERE 1;\nPRAGMA incremental_vacuum;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'BEGIN;\nDELETE FROM t1 WHERE 1;\nPRAGMA incremental_vacuum;\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): BEGIN\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
upfrom4,sqlite,"[{'query': ""DROP TABLE IF EXISTS t5;\nDROP TABLE IF EXISTS m1;\nDROP TABLE IF EXISTS m2;\nCREATE TABLE t5(a INTEGER PRIMARY KEY, b TEXT, c TEXT);\nCREATE TABLE m1(x INTEGER PRIMARY KEY, y TEXT);\nCREATE TABLE m2(u INTEGER PRIMARY KEY, v TEXT);\nINSERT INTO t5 VALUES(1, 'one', 'ONE');\nINSERT INTO t5 VALUES(2, 'two', 'TWO');\nINSERT INTO t5 VALUES(3, 'three', 'THREE');\nINSERT INTO t5 VALUES(4, 'four', 'FOUR');\nINSERT INTO m1 VALUES(1, 'i');\nINSERT INTO m1 VALUES(2, 'ii');\nINSERT INTO m1 VALUES(3, 'iii');\nINSERT INTO m2 VALUES(1, 'I');\nINSERT INTO m2 VALUES(3, 'II');\nINSERT INTO m2 VALUES(4, 'III');\nSELECT * FROM t5;\n"", 'source_success': False, 'source_exception': ""Execution failed on sql 'DROP TABLE IF EXISTS t5;\nDROP TABLE IF EXISTS m1;\nDROP TABLE IF EXISTS m2;\nCREATE TABLE t5(a INTEGER PRIMARY KEY, b TEXT, c TEXT);\nCREATE TABLE m1(x INTEGER PRIMARY KEY, y TEXT);\nCREATE TABLE m2(u INTEGER PRIMARY KEY, v TEXT);\nINSERT INTO t5 VALUES(1, 'one', 'ONE');\nINSERT INTO t5 VALUES(2, 'two', 'TWO');\nINSERT INTO t5 VALUES(3, 'three', 'THREE');\nINSERT INTO t5 VALUES(4, 'four', 'FOUR');\nINSERT INTO m1 VALUES(1, 'i');\nINSERT INTO m1 VALUES(2, 'ii');\nINSERT INTO m1 VALUES(3, 'iii');\nINSERT INTO m2 VALUES(1, 'I');\nINSERT INTO m2 VALUES(3, 'II');\nINSERT INTO m2 VALUES(4, 'III');\nSELECT * FROM t5;\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': True, 'result': 'Empty DataFrame\nColumns: []\nIndex: []', 'error': '', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'BEGIN;\nUPDATE t5 SET b=y, c=v FROM m1 LEFT JOIN m2 ON (x=u) WHERE x=a;\nSELECT * FROM t5 ORDER BY a;\nROLLBACK;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'BEGIN;\nUPDATE t5 SET b=y, c=v FROM m1 LEFT JOIN m2 ON (x=u) WHERE x=a;\nSELECT * FROM t5 ORDER BY a;\nROLLBACK;\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): BEGIN\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'BEGIN;\nUPDATE t5 SET b=y, c=v FROM m2 RIGHT JOIN m1 ON (x=u) WHERE x=a;\nSELECT * FROM t5 ORDER BY a;\nROLLBACK;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'BEGIN;\nUPDATE t5 SET b=y, c=v FROM m2 RIGHT JOIN m1 ON (x=u) WHERE x=a;\nSELECT * FROM t5 ORDER BY a;\nROLLBACK;\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): BEGIN\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': ""CREATE TABLE t1(a INT PRIMARY KEY, b INT, c INT);\nINSERT INTO t1(a) VALUES(1),(2),(8),(19);\nCREATE TABLE c1(x INTEGER PRIMARY KEY, b INT);\nINSERT INTO c1(x,b) VALUES(1,1),(8,8),(17,17),(NULL,NULL);\nCREATE TABLE c2(x INT,c INT);\nINSERT INTO c2(x,c) VALUES(2,2),(8,8),(NULL,NULL);\nCREATE TABLE dual(dummy TEXT);\nINSERT INTO dual VALUES('X');\n"", 'source_success': False, 'source_exception': ""Execution failed on sql 'CREATE TABLE t1(a INT PRIMARY KEY, b INT, c INT);\nINSERT INTO t1(a) VALUES(1),(2),(8),(19);\nCREATE TABLE c1(x INTEGER PRIMARY KEY, b INT);\nINSERT INTO c1(x,b) VALUES(1,1),(8,8),(17,17),(NULL,NULL);\nCREATE TABLE c2(x INT,c INT);\nINSERT INTO c2(x,c) VALUES(2,2),(8,8),(NULL,NULL);\nCREATE TABLE dual(dummy TEXT);\nINSERT INTO dual VALUES('X');\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 23 (line 1, col 23): PRIMARY KEY, b INT, c INT)\n FORMAT Native. Expected one of: COMMENT, DEFAULT, MATERIALIZED, ALIAS, ClosingRoundBracket, Comma, token, e.what() = DB::Exception\n', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'BEGIN;\nSELECT * FROM t1 ORDER BY a;\nUPDATE t1 SET b=c1.b, c=c2.c\nFROM dual, c1 NATURAL RIGHT JOIN c2\nWHERE x=a;\nSELECT * FROM t1 ORDER BY a;\nROLLBACK;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'BEGIN;\nSELECT * FROM t1 ORDER BY a;\nUPDATE t1 SET b=c1.b, c=c2.c\nFROM dual, c1 NATURAL RIGHT JOIN c2\nWHERE x=a;\nSELECT * FROM t1 ORDER BY a;\nROLLBACK;\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): BEGIN\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'CREATE TABLE t2(x);\nCREATE TRIGGER AFTER INSERT ON t2 BEGIN\nUPDATE t1 SET b=c1.b, c=c2.c\nFROM dual, c1 NATURAL RIGHT JOIN c2\nWHERE x=a;\nEND;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'CREATE TABLE t2(x);\nCREATE TRIGGER AFTER INSERT ON t2 BEGIN\nUPDATE t1 SET b=c1.b, c=c2.c\nFROM dual, c1 NATURAL RIGHT JOIN c2\nWHERE x=a;\nEND;\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 18 (line 1, col 18): )\n FORMAT Native. Expected one of: COMMENT, function, DEFAULT, MATERIALIZED, ALIAS, identifier, nested table, identifier with parameters, identifier with optional parameters, e.what() = DB::Exception\n', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'BEGIN;\nSELECT * FROM t1 ORDER BY a;\nINSERT INTO t2(x) VALUES(1);\nSELECT * FROM t1 ORDER BY a;\nROLLBACK;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'BEGIN;\nSELECT * FROM t1 ORDER BY a;\nINSERT INTO t2(x) VALUES(1);\nSELECT * FROM t1 ORDER BY a;\nROLLBACK;\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): BEGIN\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': ""CREATE TABLE t2(x,y,z PRIMARY KEY) WITHOUT ROWID;\nINSERT INTO t2 VALUES(89,-89,6);\nCREATE TABLE t1(a INT,b TEXT,c TEXT,d REAL) STRICT;\nINSERT INTO t1 VALUES(1,'xyz','def',4.5);\nCREATE TRIGGER t1tr BEFORE UPDATE ON t1 BEGIN\nINSERT INTO t1(a,b) VALUES(1000,'uvw');\nUPDATE t1 SET b=NULL FROM (SELECT CAST(a AS varchar) FROM t1 ORDER BY b) NATURAL LEFT FULL JOIN t1 AS text;\nEND;\nUPDATE t1 SET b=b|100;\nSELECT * FROM t1 ORDER BY a;\n"", 'source_success': False, 'source_exception': ""Execution failed on sql 'CREATE TABLE t2(x,y,z PRIMARY KEY) WITHOUT ROWID;\nINSERT INTO t2 VALUES(89,-89,6);\nCREATE TABLE t1(a INT,b TEXT,c TEXT,d REAL) STRICT;\nINSERT INTO t1 VALUES(1,'xyz','def',4.5);\nCREATE TRIGGER t1tr BEFORE UPDATE ON t1 BEGIN\nINSERT INTO t1(a,b) VALUES(1000,'uvw');\nUPDATE t1 SET b=NULL FROM (SELECT CAST(a AS varchar) FROM t1 ORDER BY b) NATURAL LEFT FULL JOIN t1 AS text;\nEND;\nUPDATE t1 SET b=b|100;\nSELECT * FROM t1 ORDER BY a;\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 18 (line 1, col 18): ,y,z PRIMARY KEY) WITHOUT ROWID\n FORMAT Native. Expected one of: COMMENT, function, DEFAULT, MATERIALIZED, ALIAS, identifier, nested table, identifier with parameters, identifier with optional parameters, e.what() = DB::Exception\n', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
func7,sqlite,"[{'query': 'SELECT ceil(99.9), ceiling(-99.01), floor(17), floor(-17.99);\n', 'source_success': True, 'source_exception': '', 'source_result': '   ceil(99.9)  ceiling(-99.01)  floor(17)  floor(-17.99)\n0       100.0            -99.0         17          -18.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 61 (end of query) (line 1, col 61): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': ""SELECT quote(ceil(NULL)), ceil('-99.99');\n"", 'source_success': True, 'source_exception': '', 'source_result': ""  quote(ceil(NULL))  ceil('-99.99')\n0              NULL           -99.0"", 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 41 (end of query) (line 1, col 41): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': ""SELECT round(ln(5),2), log(100.0), log(100), log(2,'256');\n"", 'source_success': True, 'source_exception': '', 'source_result': ""   round(ln(5),2)  log(100.0)  log(100)  log(2,'256')\n0            1.61         2.0       2.0           8.0"", 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 58 (end of query) (line 1, col 58): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT ln(-5), log(-5,100.0);\n', 'source_success': True, 'source_exception': '', 'source_result': '  ln(-5) log(-5,100.0)\n0   None          None', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 29 (end of query) (line 1, col 29): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT abs(-17.4)\n', 'source_success': True, 'source_exception': '', 'source_result': '   abs(-17.4)\n0        17.4', 'target_dbs': [{'db': 'clickhouse', 'success': True, 'result': '   abs(-17.4)\n0        17.4', 'error': '', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'SELECT ceil(42.2)\n', 'source_success': True, 'source_exception': '', 'source_result': '   ceil(42.2)\n0        43.0', 'target_dbs': [{'db': 'clickhouse', 'success': True, 'result': '   ceil(42.2)\n0        43.0', 'error': '', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'SELECT ceil(-42.2)\n', 'source_success': True, 'source_exception': '', 'source_result': '   ceil(-42.2)\n0        -42.0', 'target_dbs': [{'db': 'clickhouse', 'success': True, 'result': '   ceil(-42.2)\n0        -42.0', 'error': '', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'SELECT round(exp(1.0),7)\n', 'source_success': True, 'source_exception': '', 'source_result': '   round(exp(1.0),7)\n0           2.718282', 'target_dbs': [{'db': 'clickhouse', 'success': True, 'result': '   round(exp(1.), 7)\n0           2.718282', 'error': '', 'shape_equal': True, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT floor(42.8)\n', 'source_success': True, 'source_exception': '', 'source_result': '   floor(42.8)\n0         42.0', 'target_dbs': [{'db': 'clickhouse', 'success': True, 'result': '   floor(42.8)\n0         42.0', 'error': '', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'SELECT floor(-42.8)\n', 'source_success': True, 'source_exception': '', 'source_result': '   floor(-42.8)\n0         -43.0', 'target_dbs': [{'db': 'clickhouse', 'success': True, 'result': '   floor(-42.8)\n0         -43.0', 'error': '', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'SELECT round(ln(2.0),7)\n', 'source_success': True, 'source_exception': '', 'source_result': '   round(ln(2.0),7)\n0          0.693147', 'target_dbs': [{'db': 'clickhouse', 'success': True, 'result': '   round(ln(2.), 7)\n0          0.693147', 'error': '', 'shape_equal': True, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT log(100.0)\n', 'source_success': True, 'source_exception': '', 'source_result': '   log(100.0)\n0         2.0', 'target_dbs': [{'db': 'clickhouse', 'success': True, 'result': '   log(100.)\n0    4.60517', 'error': '', 'shape_equal': True, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT log10(1000.0)\n', 'source_success': True, 'source_exception': '', 'source_result': '   log10(1000.0)\n0            3.0', 'target_dbs': [{'db': 'clickhouse', 'success': True, 'result': '   log10(1000.)\n0           3.0', 'error': '', 'shape_equal': True, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': ""SELECT format('%.30f', log10(100.0) );\n"", 'source_success': True, 'source_exception': '', 'source_result': ""     format('%.30f', log10(100.0) )\n0  2.000000000000000000000000000000"", 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 38 (end of query) (line 1, col 38): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': ""SELECT format('%.30f', ln(exp(2.0)) );\n"", 'source_success': True, 'source_exception': '', 'source_result': ""     format('%.30f', ln(exp(2.0)) )\n0  2.000000000000000000000000000000"", 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 38 (end of query) (line 1, col 38): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT log(2.0, 64.0)\n', 'source_success': True, 'source_exception': '', 'source_result': '   log(2.0, 64.0)\n0             6.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 500)\n Code: 42, e.displayText() = DB::Exception: Number of arguments for function log doesn't match: passed 2, should be 1, e.what() = DB::Exception\n"", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT mod(9,4);\n', 'source_success': True, 'source_exception': '', 'source_result': '   mod(9,4)\n0       1.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 16 (end of query) (line 1, col 16): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round(pi(),7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round(pi(),7)\n0       3.141593', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 21 (end of query) (line 1, col 21): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT power(9,3);\n', 'source_success': True, 'source_exception': '', 'source_result': '   power(9,3)\n0       729.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 18 (end of query) (line 1, col 18): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round(radians(45.0),7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round(radians(45.0),7)\n0                0.785398', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 30 (end of query) (line 1, col 30): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round(42.4);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round(42.4)\n0         42.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 19 (end of query) (line 1, col 19): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round(42.4382,2);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round(42.4382,2)\n0             42.44', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 24 (end of query) (line 1, col 24): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT sign(-8.4);\n', 'source_success': True, 'source_exception': '', 'source_result': '   sign(-8.4)\n0          -1', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 18 (end of query) (line 1, col 18): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round( sqrt(2), 7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round( sqrt(2), 7)\n0            1.414214', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 26 (end of query) (line 1, col 26): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT trunc(42.8), trunc(-42.8);\n', 'source_success': True, 'source_exception': '', 'source_result': '   trunc(42.8)  trunc(-42.8)\n0         42.0         -42.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 33 (end of query) (line 1, col 33): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT acos(1);\n', 'source_success': True, 'source_exception': '', 'source_result': '   acos(1)\n0      0.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 15 (end of query) (line 1, col 15): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT degrees(acos(0.5));\n', 'source_success': True, 'source_exception': '', 'source_result': '   degrees(acos(0.5))\n0                60.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 26 (end of query) (line 1, col 26): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round( asin(1), 7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round( asin(1), 7)\n0            1.570796', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 26 (end of query) (line 1, col 26): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT degrees( asin(0.5) );\n', 'source_success': True, 'source_exception': '', 'source_result': '   degrees( asin(0.5) )\n0                  30.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 28 (end of query) (line 1, col 28): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round( atan(1), 7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round( atan(1), 7)\n0            0.785398', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 26 (end of query) (line 1, col 26): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT degrees( atan(1) );\n', 'source_success': True, 'source_exception': '', 'source_result': '   degrees( atan(1) )\n0                45.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 26 (end of query) (line 1, col 26): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round( atan2(1,0), 7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round( atan2(1,0), 7)\n0               1.570796', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 29 (end of query) (line 1, col 29): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT degrees( atan2(1,0) );\n', 'source_success': True, 'source_exception': '', 'source_result': '   degrees( atan2(1,0) )\n0                   90.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 29 (end of query) (line 1, col 29): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT cos(0);\n', 'source_success': True, 'source_exception': '', 'source_result': '   cos(0)\n0     1.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 14 (end of query) (line 1, col 14): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT cos( radians(60.0) );\n', 'source_success': True, 'source_exception': '', 'source_result': '   cos( radians(60.0) )\n0                   0.5', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 28 (end of query) (line 1, col 28): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT cos(0);\n', 'source_success': True, 'source_exception': '', 'source_result': '   cos(0)\n0     1.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 14 (end of query) (line 1, col 14): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round( sin(1), 7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round( sin(1), 7)\n0           0.841471', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 25 (end of query) (line 1, col 25): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT sin( radians(30) );\n', 'source_success': True, 'source_exception': '', 'source_result': '   sin( radians(30) )\n0                 0.5', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 26 (end of query) (line 1, col 26): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round( tan(1), 7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round( tan(1), 7)\n0           1.557408', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 25 (end of query) (line 1, col 25): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT tan( radians(45) );\n', 'source_success': True, 'source_exception': '', 'source_result': '   tan( radians(45) )\n0                 1.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 26 (end of query) (line 1, col 26): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round( sinh(1), 7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round( sinh(1), 7)\n0            1.175201', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 26 (end of query) (line 1, col 26): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round( cosh(0), 7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round( cosh(0), 7)\n0                 1.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 26 (end of query) (line 1, col 26): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round( tanh(1), 7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round( tanh(1), 7)\n0            0.761594', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 26 (end of query) (line 1, col 26): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round( asinh(1), 7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round( asinh(1), 7)\n0             0.881374', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 27 (end of query) (line 1, col 27): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round( acosh(1), 7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round( acosh(1), 7)\n0                  0.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 27 (end of query) (line 1, col 27): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round( atanh(0.5), 7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round( atanh(0.5), 7)\n0               0.549306', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 29 (end of query) (line 1, col 29): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT acos(1);\n', 'source_success': True, 'source_exception': '', 'source_result': '   acos(1)\n0      0.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 15 (end of query) (line 1, col 15): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT acos(1.0001);\n', 'source_success': True, 'source_exception': '', 'source_result': '  acos(1.0001)\n0         None', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 20 (end of query) (line 1, col 20): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round( acos(0.0), 7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round( acos(0.0), 7)\n0              1.570796', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 28 (end of query) (line 1, col 28): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round( asin(0.2), 7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round( asin(0.2), 7)\n0              0.201358', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 28 (end of query) (line 1, col 28): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': ""SELECT asin('foo');\n"", 'source_success': True, 'source_exception': '', 'source_result': ""  asin('foo')\n0        None"", 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 19 (end of query) (line 1, col 19): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round( atan(2), 7), round( atan(-2), 7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round( atan(2), 7)  round( atan(-2), 7)\n0            1.107149            -1.107149', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 47 (end of query) (line 1, col 47): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round( atan2(-2,2), 7), round( atan2(pi(),0), 7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round( atan2(-2,2), 7)  round( atan2(pi(),0), 7)\n0               -0.785398                  1.570796', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 56 (end of query) (line 1, col 56): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT ceiling(1.23), ceiling(-1.23);\n', 'source_success': True, 'source_exception': '', 'source_result': '   ceiling(1.23)  ceiling(-1.23)\n0            2.0            -1.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 37 (end of query) (line 1, col 37): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT cos(pi());\n', 'source_success': True, 'source_exception': '', 'source_result': '   cos(pi())\n0       -1.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 17 (end of query) (line 1, col 17): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT degrees(pi()), degrees(pi()/2);\n', 'source_success': True, 'source_exception': '', 'source_result': '   degrees(pi())  degrees(pi()/2)\n0          180.0             90.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 38 (end of query) (line 1, col 38): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round( exp(2), 7), round( exp(-2), 7), exp(0);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round( exp(2), 7)  round( exp(-2), 7)  exp(0)\n0           7.389056            0.135335     1.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 53 (end of query) (line 1, col 53): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT floor(1.23), floor(-1.23);\n', 'source_success': True, 'source_exception': '', 'source_result': '   floor(1.23)  floor(-1.23)\n0          1.0          -2.0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 33 (end of query) (line 1, col 33): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round(ln(2),7), quote(ln(-2));\n', 'source_success': True, 'source_exception': '', 'source_result': '   round(ln(2),7) quote(ln(-2))\n0        0.693147          NULL', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 37 (end of query) (line 1, col 37): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT log(2,65536), log(10,100), quote(log(1,100)), quote(log(0,100));\n', 'source_success': True, 'source_exception': '', 'source_result': '   log(2,65536)  log(10,100) quote(log(1,100)) quote(log(0,100))\n0          16.0          2.0              NULL              NULL', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 71 (end of query) (line 1, col 71): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT log2(65536), quote(log2(-100)), quote(log2(0));\n', 'source_success': True, 'source_exception': '', 'source_result': '   log2(65536) quote(log2(-100)) quote(log2(0))\n0         16.0              NULL           NULL', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 54 (end of query) (line 1, col 54): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round(log10(2),7), log10(100), quote(log10(-100));\n', 'source_success': True, 'source_exception': '', 'source_result': '   round(log10(2),7)  log10(100) quote(log10(-100))\n0            0.30103         2.0               NULL', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 57 (end of query) (line 1, col 57): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT mod(234,10), 253%7, mod(29,9), 29%9;\n', 'source_success': True, 'source_exception': '', 'source_result': '   mod(234,10)  253%7  mod(29,9)  29%9\n0          4.0      1        2.0     2', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 43 (end of query) (line 1, col 43): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT mod(34.5,3);\n', 'source_success': True, 'source_exception': '', 'source_result': '   mod(34.5,3)\n0          1.5', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 19 (end of query) (line 1, col 19): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT pow(2,2), pow(2,-2);\n', 'source_success': True, 'source_exception': '', 'source_result': '   pow(2,2)  pow(2,-2)\n0       4.0       0.25', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 27 (end of query) (line 1, col 27): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT power(2,2), power(2,-2);\n', 'source_success': True, 'source_exception': '', 'source_result': '   power(2,2)  power(2,-2)\n0         4.0         0.25', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 31 (end of query) (line 1, col 31): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round(radians(90),7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round(radians(90),7)\n0              1.570796', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 28 (end of query) (line 1, col 28): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT sign(-32), sign(0), sign(234);\n', 'source_success': True, 'source_exception': '', 'source_result': '   sign(-32)  sign(0)  sign(234)\n0         -1        0          1', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 37 (end of query) (line 1, col 37): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT sin(pi()) BETWEEN -1.0e-15 AND 1.0e-15;\n', 'source_success': True, 'source_exception': '', 'source_result': '   sin(pi()) BETWEEN -1.0e-15 AND 1.0e-15\n0                                       1', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 46 (end of query) (line 1, col 46): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT sqrt(4), round(sqrt(20),7), quote(sqrt(-16));\n', 'source_success': True, 'source_exception': '', 'source_result': '   sqrt(4)  round(sqrt(20),7) quote(sqrt(-16))\n0      2.0           4.472136             NULL', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 52 (end of query) (line 1, col 52): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT tan(pi()) BETWEEN -1.0e-15 AND 1.0e-15;\n', 'source_success': True, 'source_exception': '', 'source_result': '   tan(pi()) BETWEEN -1.0e-15 AND 1.0e-15\n0                                       1', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 46 (end of query) (line 1, col 46): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT round(tan(pi()+1),7);\n', 'source_success': True, 'source_exception': '', 'source_result': '   round(tan(pi()+1),7)\n0              1.557408', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 28 (end of query) (line 1, col 28): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}]"
vacuum5,sqlite,"[{'query': ""PRAGMA auto_vacuum = 0;\nCREATE TABLE main.t1(a,b);\nWITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x+1 FROM c WHERE x<1000)\nINSERT INTO t1(a,b) SELECT x, randomblob(1000) FROM c;\nCREATE TEMP TABLE ttemp(x,y);\nINSERT INTO ttemp SELECT * FROM t1;\nATTACH 'test2.db' AS x2;\nATTACH 'test3.db' AS x3;\nCREATE TABLE x2.t2(c,d);\nINSERT INTO t2 SELECT * FROM t1;\nCREATE TABLE x3.t3(e,f);\nINSERT INTO t3 SELECT * FROM t1;\nDELETE FROM t1 WHERE (rowid%3)!=0;\nDELETE FROM t2 WHERE (rowid%4)!=0;\nDELETE FROM t3 WHERE (rowid%5)!=0;\nPRAGMA main.integrity_check;\nPRAGMA x2.integrity_check;\nPRAGMA x3.integrity_check;\n"", 'source_success': False, 'source_exception': ""Execution failed on sql 'PRAGMA auto_vacuum = 0;\nCREATE TABLE main.t1(a,b);\nWITH RECURSIVE c(x) AS (VALUES(1) UNION ALL SELECT x+1 FROM c WHERE x<1000)\nINSERT INTO t1(a,b) SELECT x, randomblob(1000) FROM c;\nCREATE TEMP TABLE ttemp(x,y);\nINSERT INTO ttemp SELECT * FROM t1;\nATTACH 'test2.db' AS x2;\nATTACH 'test3.db' AS x3;\nCREATE TABLE x2.t2(c,d);\nINSERT INTO t2 SELECT * FROM t1;\nCREATE TABLE x3.t3(e,f);\nINSERT INTO t3 SELECT * FROM t1;\nDELETE FROM t1 WHERE (rowid%3)!=0;\nDELETE FROM t2 WHERE (rowid%4)!=0;\nDELETE FROM t3 WHERE (rowid%5)!=0;\nPRAGMA main.integrity_check;\nPRAGMA x2.integrity_check;\nPRAGMA x3.integrity_check;\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): PRAGMA auto_vacuum = 0\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'VACUUM main;\n', 'source_success': False, 'source_exception': ""'NoneType' object is not iterable"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): VACUUM main;\n\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'DELETE FROM t1;\nPRAGMA main.integrity_check;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'DELETE FROM t1;\nPRAGMA main.integrity_check;\n': no such table: t1"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): DELETE FROM t1\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'VACUUM x2;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'VACUUM x2;\n': unknown database x2"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): VACUUM x2;\n\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'DELETE FROM t2;\nPRAGMA x2.integrity_check;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'DELETE FROM t2;\nPRAGMA x2.integrity_check;\n': no such table: t2"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): DELETE FROM t2\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'VACUUM x3;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'VACUUM x3;\n': unknown database x3"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): VACUUM x3;\n\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'VACUUM temp;\n', 'source_success': False, 'source_exception': ""'NoneType' object is not iterable"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): VACUUM temp;\n\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'PRAGMA temp.page_count;\n', 'source_success': True, 'source_exception': '', 'source_result': '   page_count\n0           0', 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): PRAGMA temp.page_count;\n\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'PRAGMA temp_store = file;\nPRAGMA page_size = 1024;\nPRAGMA cache_size = 50;\nCREATE TABLE t1(i INTEGER PRIMARY KEY, j UNIQUE);\nWITH s(i) AS (\nVALUES(1) UNION ALL SELECT i+1 FROM s WHERE i<1000\n)\nINSERT INTO t1 SELECT NULL, randomblob(100) FROM s;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'PRAGMA temp_store = file;\nPRAGMA page_size = 1024;\nPRAGMA cache_size = 50;\nCREATE TABLE t1(i INTEGER PRIMARY KEY, j UNIQUE);\nWITH s(i) AS (\nVALUES(1) UNION ALL SELECT i+1 FROM s WHERE i<1000\n)\nINSERT INTO t1 SELECT NULL, randomblob(100) FROM s;\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): PRAGMA temp_store = file\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'VACUUM\n', 'source_success': False, 'source_exception': ""'NoneType' object is not iterable"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): VACUUM\n\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
tkt3731,sqlite,[]
upfrom1,sqlite,"[{'query': 'DROP TABLE IF EXISTS t2;\nCREATE TABLE t2(a INTEGER PRIMARY KEY, b INTEGER, c INTEGER) WITHOUT ROWID;\nINSERT INTO t2 VALUES(1, 2, 3);\nINSERT INTO t2 VALUES(4, 5, 6);\nINSERT INTO t2 VALUES(7, 8, 9);\nDROP TABLE IF EXISTS chng;\nCREATE TABLE chng(a INTEGER, b INTEGER, c INTEGER);\nINSERT INTO chng VALUES(1, 100, 1000);\nINSERT INTO chng VALUES(7, 700, 7000);\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'DROP TABLE IF EXISTS t2;\nCREATE TABLE t2(a INTEGER PRIMARY KEY, b INTEGER, c INTEGER) WITHOUT ROWID;\nINSERT INTO t2 VALUES(1, 2, 3);\nINSERT INTO t2 VALUES(4, 5, 6);\nINSERT INTO t2 VALUES(7, 8, 9);\nDROP TABLE IF EXISTS chng;\nCREATE TABLE chng(a INTEGER, b INTEGER, c INTEGER);\nINSERT INTO chng VALUES(1, 100, 1000);\nINSERT INTO chng VALUES(7, 700, 7000);\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': True, 'result': 'Empty DataFrame\nColumns: []\nIndex: []', 'error': '', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT * FROM t2;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'SELECT * FROM t2;\n': no such table: t2"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 17 (end of query) (line 1, col 17): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'UPDATE t2 SET b = chng.b, c = chng.c FROM chng WHERE chng.a = t2.a;\nSELECT * FROM t2 ORDER BY a;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'UPDATE t2 SET b = chng.b, c = chng.c FROM chng WHERE chng.a = t2.a;\nSELECT * FROM t2 ORDER BY a;\n': no such table: t2"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): UPDATE t2 SET b = chng.b, c = chng.c FROM chng WHERE chng.a = t2.a\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'DELETE FROM t2;\nINSERT INTO t2 VALUES(1, 2, 3);\nINSERT INTO t2 VALUES(4, 5, 6);\nINSERT INTO t2 VALUES(7, 8, 9);\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'DELETE FROM t2;\nINSERT INTO t2 VALUES(1, 2, 3);\nINSERT INTO t2 VALUES(4, 5, 6);\nINSERT INTO t2 VALUES(7, 8, 9);\n': no such table: t2"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): DELETE FROM t2\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'UPDATE t2 SET (b, c) = (SELECT b, c FROM chng WHERE a=t2.a)\nWHERE a IN (SELECT a FROM chng);\nSELECT * FROM t2 ORDER BY a;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'UPDATE t2 SET (b, c) = (SELECT b, c FROM chng WHERE a=t2.a)\nWHERE a IN (SELECT a FROM chng);\nSELECT * FROM t2 ORDER BY a;\n': no such table: t2"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): UPDATE t2 SET (b, c) = (SELECT b, c FROM chng WHERE a=t2.a)\nWHERE a IN (SELECT a FROM chng)\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': ""DROP TABLE IF EXISTS t3;\nCREATE TABLE t3(a INTEGER PRIMARY KEY, b INTEGER, c TEXT) WITHOUT ROWID;\nINSERT INTO t3 VALUES(1, 1, 'one');\nINSERT INTO t3 VALUES(2, 2, 'two');\nINSERT INTO t3 VALUES(3, 3, 'three');\nDROP TABLE IF EXISTS t4;\nCREATE TABLE t4(x TEXT);\nINSERT INTO t4 VALUES('five');\nSELECT * FROM t3 ORDER BY a;\n"", 'source_success': False, 'source_exception': ""Execution failed on sql 'DROP TABLE IF EXISTS t3;\nCREATE TABLE t3(a INTEGER PRIMARY KEY, b INTEGER, c TEXT) WITHOUT ROWID;\nINSERT INTO t3 VALUES(1, 1, 'one');\nINSERT INTO t3 VALUES(2, 2, 'two');\nINSERT INTO t3 VALUES(3, 3, 'three');\nDROP TABLE IF EXISTS t4;\nCREATE TABLE t4(x TEXT);\nINSERT INTO t4 VALUES('five');\nSELECT * FROM t3 ORDER BY a;\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': True, 'result': 'Empty DataFrame\nColumns: []\nIndex: []', 'error': '', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'UPDATE t3 SET c=x FROM t4;\nSELECT * FROM t3 ORDER BY a;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'UPDATE t3 SET c=x FROM t4;\nSELECT * FROM t3 ORDER BY a;\n': no such table: t3"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): UPDATE t3 SET c=x FROM t4\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'DROP TABLE IF EXISTS t2;\nCREATE TABLE t2(a INTEGER PRIMARY KEY, b INTEGER, c INTEGER) ;\nINSERT INTO t2 VALUES(1, 2, 3);\nINSERT INTO t2 VALUES(4, 5, 6);\nINSERT INTO t2 VALUES(7, 8, 9);\nDROP TABLE IF EXISTS chng;\nCREATE TABLE chng(a INTEGER, b INTEGER, c INTEGER);\nINSERT INTO chng VALUES(1, 100, 1000);\nINSERT INTO chng VALUES(7, 700, 7000);\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'DROP TABLE IF EXISTS t2;\nCREATE TABLE t2(a INTEGER PRIMARY KEY, b INTEGER, c INTEGER) ;\nINSERT INTO t2 VALUES(1, 2, 3);\nINSERT INTO t2 VALUES(4, 5, 6);\nINSERT INTO t2 VALUES(7, 8, 9);\nDROP TABLE IF EXISTS chng;\nCREATE TABLE chng(a INTEGER, b INTEGER, c INTEGER);\nINSERT INTO chng VALUES(1, 100, 1000);\nINSERT INTO chng VALUES(7, 700, 7000);\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': True, 'result': 'Empty DataFrame\nColumns: []\nIndex: []', 'error': '', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'SELECT * FROM t2;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'SELECT * FROM t2;\n': no such table: t2"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 17 (end of query) (line 1, col 17): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'UPDATE t2 SET b = chng.b, c = chng.c FROM chng WHERE chng.a = t2.a;\nSELECT * FROM t2 ORDER BY a;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'UPDATE t2 SET b = chng.b, c = chng.c FROM chng WHERE chng.a = t2.a;\nSELECT * FROM t2 ORDER BY a;\n': no such table: t2"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): UPDATE t2 SET b = chng.b, c = chng.c FROM chng WHERE chng.a = t2.a\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'DELETE FROM t2;\nINSERT INTO t2 VALUES(1, 2, 3);\nINSERT INTO t2 VALUES(4, 5, 6);\nINSERT INTO t2 VALUES(7, 8, 9);\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'DELETE FROM t2;\nINSERT INTO t2 VALUES(1, 2, 3);\nINSERT INTO t2 VALUES(4, 5, 6);\nINSERT INTO t2 VALUES(7, 8, 9);\n': no such table: t2"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): DELETE FROM t2\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'UPDATE t2 SET (b, c) = (SELECT b, c FROM chng WHERE a=t2.a)\nWHERE a IN (SELECT a FROM chng);\nSELECT * FROM t2 ORDER BY a;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'UPDATE t2 SET (b, c) = (SELECT b, c FROM chng WHERE a=t2.a)\nWHERE a IN (SELECT a FROM chng);\nSELECT * FROM t2 ORDER BY a;\n': no such table: t2"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): UPDATE t2 SET (b, c) = (SELECT b, c FROM chng WHERE a=t2.a)\nWHERE a IN (SELECT a FROM chng)\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': ""DROP TABLE IF EXISTS t3;\nCREATE TABLE t3(a INTEGER PRIMARY KEY, b INTEGER, c TEXT) ;\nINSERT INTO t3 VALUES(1, 1, 'one');\nINSERT INTO t3 VALUES(2, 2, 'two');\nINSERT INTO t3 VALUES(3, 3, 'three');\nDROP TABLE IF EXISTS t4;\nCREATE TABLE t4(x TEXT);\nINSERT INTO t4 VALUES('five');\nSELECT * FROM t3 ORDER BY a;\n"", 'source_success': False, 'source_exception': ""Execution failed on sql 'DROP TABLE IF EXISTS t3;\nCREATE TABLE t3(a INTEGER PRIMARY KEY, b INTEGER, c TEXT) ;\nINSERT INTO t3 VALUES(1, 1, 'one');\nINSERT INTO t3 VALUES(2, 2, 'two');\nINSERT INTO t3 VALUES(3, 3, 'three');\nDROP TABLE IF EXISTS t4;\nCREATE TABLE t4(x TEXT);\nINSERT INTO t4 VALUES('five');\nSELECT * FROM t3 ORDER BY a;\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': True, 'result': 'Empty DataFrame\nColumns: []\nIndex: []', 'error': '', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'UPDATE t3 SET c=x FROM t4;\nSELECT * FROM t3 ORDER BY a;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'UPDATE t3 SET c=x FROM t4;\nSELECT * FROM t3 ORDER BY a;\n': no such table: t3"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): UPDATE t3 SET c=x FROM t4\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': ""DROP TABLE IF EXISTS t5;\nDROP TABLE IF EXISTS m1;\nDROP TABLE IF EXISTS m2;\nCREATE TABLE t5(a INTEGER PRIMARY KEY, b TEXT, c TEXT);\nCREATE TABLE m1(x INTEGER PRIMARY KEY, y TEXT);\nCREATE TABLE m2(u INTEGER PRIMARY KEY, v TEXT);\nINSERT INTO t5 VALUES(1, 'one', 'ONE');\nINSERT INTO t5 VALUES(2, 'two', 'TWO');\nINSERT INTO t5 VALUES(3, 'three', 'THREE');\nINSERT INTO t5 VALUES(4, 'four', 'FOUR');\nINSERT INTO m1 VALUES(1, 'i');\nINSERT INTO m1 VALUES(2, 'ii');\nINSERT INTO m1 VALUES(3, 'iii');\nINSERT INTO m2 VALUES(1, 'I');\nINSERT INTO m2 VALUES(3, 'II');\nINSERT INTO m2 VALUES(4, 'III');\n"", 'source_success': False, 'source_exception': ""Execution failed on sql 'DROP TABLE IF EXISTS t5;\nDROP TABLE IF EXISTS m1;\nDROP TABLE IF EXISTS m2;\nCREATE TABLE t5(a INTEGER PRIMARY KEY, b TEXT, c TEXT);\nCREATE TABLE m1(x INTEGER PRIMARY KEY, y TEXT);\nCREATE TABLE m2(u INTEGER PRIMARY KEY, v TEXT);\nINSERT INTO t5 VALUES(1, 'one', 'ONE');\nINSERT INTO t5 VALUES(2, 'two', 'TWO');\nINSERT INTO t5 VALUES(3, 'three', 'THREE');\nINSERT INTO t5 VALUES(4, 'four', 'FOUR');\nINSERT INTO m1 VALUES(1, 'i');\nINSERT INTO m1 VALUES(2, 'ii');\nINSERT INTO m1 VALUES(3, 'iii');\nINSERT INTO m2 VALUES(1, 'I');\nINSERT INTO m2 VALUES(3, 'II');\nINSERT INTO m2 VALUES(4, 'III');\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': True, 'result': 'Empty DataFrame\nColumns: []\nIndex: []', 'error': '', 'shape_equal': False, 'columns_equal': False, 'dtypes_equal': False, 'values_equal': False, 'full_match': False}]}, {'query': 'UPDATE t5 SET b=y, c=v FROM m1 LEFT JOIN m2 ON (x=u) WHERE x=a;\nSELECT * FROM t5 ORDER BY a;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'UPDATE t5 SET b=y, c=v FROM m1 LEFT JOIN m2 ON (x=u) WHERE x=a;\nSELECT * FROM t5 ORDER BY a;\n': no such table: t5"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': "":HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 1 (line 1, col 1): UPDATE t5 SET b=y, c=v FROM m1 LEFT JOIN m2 ON (x=u) WHERE x=a\n FORMAT Native. Expected one of: SYSTEM query, SELECT subquery, DESC, KILL QUERY, DETACH, DROP, ATTACH, list of elements, ALTER query, DESCRIBE query, DROP query, INSERT query, KILL QUERY query, OPTIMIZE query, Query with output, SHOW PROCESSLIST query, RENAME query, SELECT query, SET query, EXISTS or SHOW CREATE query, USE query, SHOW PROCESSLIST, WITH, ALTER TABLE, CHECK TABLE, CREATE, EXISTS, TRUNCATE, INSERT INTO, SELECT, OPTIMIZE TABLE, RENAME TABLE, SET, SHOW, USE, CREATE TABLE or ATTACH TABLE query, SELECT query, possibly with UNION, SHOW [TEMPORARY] TABLES|DATABASES [[NOT] LIKE 'str'], SELECT query, subquery, possibly with UNION, DESCRIBE, Query, e.what() = DB::Exception\n"", 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'CREATE TABLE t0(a);\nCREATE TABLE t1(b);\nUPDATE t1 SET b=sum(a) FROM t0;\nSELECT * FROM t0, t1;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'CREATE TABLE t0(a);\nCREATE TABLE t1(b);\nUPDATE t1 SET b=sum(a) FROM t0;\nSELECT * FROM t0, t1;\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 18 (line 1, col 18): )\n FORMAT Native. Expected one of: COMMENT, function, DEFAULT, MATERIALIZED, ALIAS, identifier, nested table, identifier with parameters, identifier with optional parameters, e.what() = DB::Exception\n', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'CREATE TABLE t1(x INT);  INSERT INTO t1 VALUES(1);\nCREATE TABLE t2(y INT);  INSERT INTO t2 VALUES(2);\nWITH t1 AS (SELECT y+100 AS x FROM t2)\nUPDATE t1 SET x=(SELECT x FROM t1);\nSELECT x, y FROM t1, t2;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'CREATE TABLE t1(x INT);  INSERT INTO t1 VALUES(1);\nCREATE TABLE t2(y INT);  INSERT INTO t2 VALUES(2);\nWITH t1 AS (SELECT y+100 AS x FROM t2)\nUPDATE t1 SET x=(SELECT x FROM t1);\nSELECT x, y FROM t1, t2;\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 25 (line 2, col 2): FORMAT Native. Expected one of: ENGINE, storage definition, e.what() = DB::Exception\n', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'WITH t1 AS (SELECT y+100 AS x FROM t2)\nUPDATE t1 SET x=x+y FROM t2;\nSELECT x, y FROM t1, t2;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'WITH t1 AS (SELECT y+100 AS x FROM t2)\nUPDATE t1 SET x=x+y FROM t2;\nSELECT x, y FROM t1, t2;\n': no such table: t1"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 12 (line 1, col 12): (SELECT y+100 AS x FROM t2)\nUPDATE t1 SET x=x+y FROM t2\n FORMAT Native. Expected identifier, e.what() = DB::Exception\n', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'CREATE TABLE t1(a);\nINSERT INTO t1(a) VALUES(5);\nCREATE VIEW t2 AS SELECT a FROM t1 UNION ALL SELECT a FROM t1;\nCREATE TABLE t3(b,c);\nINSERT INTO t3(b,c) VALUES(1,2);\nUPDATE t3 SET (c,b) = (SELECT 3,4) FROM t1, t2;\nSELECT * FROM t3;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'CREATE TABLE t1(a);\nINSERT INTO t1(a) VALUES(5);\nCREATE VIEW t2 AS SELECT a FROM t1 UNION ALL SELECT a FROM t1;\nCREATE TABLE t3(b,c);\nINSERT INTO t3(b,c) VALUES(1,2);\nUPDATE t3 SET (c,b) = (SELECT 3,4) FROM t1, t2;\nSELECT * FROM t3;\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 18 (line 1, col 18): )\n FORMAT Native. Expected one of: COMMENT, function, DEFAULT, MATERIALIZED, ALIAS, identifier, nested table, identifier with parameters, identifier with optional parameters, e.what() = DB::Exception\n', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
schemafault,sqlite,"[{'query': 'CREATE TABLE t2(aaa INTTT);\nCREATE VIEW v2(xxx , yyy) AS SELECT aaa, aaa+1 FROM t2;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'CREATE TABLE t2(aaa INTTT);\nCREATE VIEW v2(xxx , yyy) AS SELECT aaa, aaa+1 FROM t2;\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 29 (line 2, col 2): FORMAT Native. Expected one of: ENGINE, storage definition, e.what() = DB::Exception\n', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
tkt-2ea2425d34,sqlite,[]
cksumvfs,sqlite,"[{'query': 'CREATE TABLE t1(a INTEGER PRIMARY KEY, b);\nINSERT INTO t1 VALUES(1, $text);\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'CREATE TABLE t1(a INTEGER PRIMARY KEY, b);\nINSERT INTO t1 VALUES(1, $text);\n': You can only execute one statement at a time."", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error: failed at position 27 (line 1, col 27): PRIMARY KEY, b)\n FORMAT Native. Expected one of: COMMENT, DEFAULT, MATERIALIZED, ALIAS, ClosingRoundBracket, Comma, token, e.what() = DB::Exception\n', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}, {'query': 'SELECT * FROM t1;\n', 'source_success': False, 'source_exception': ""Execution failed on sql 'SELECT * FROM t1;\n': no such table: t1"", 'source_result': None, 'target_dbs': [{'db': 'clickhouse', 'success': False, 'result': '', 'error': ':HTTPDriver for http://localhost:8123 returned response code 400)\n Code: 62, e.displayText() = DB::Exception: Syntax error (Multi-statements are not allowed): failed at position 17 (end of query) (line 1, col 17): ;\n\n FORMAT Native. , e.what() = DB::Exception\n', 'shape_equal': True, 'columns_equal': True, 'dtypes_equal': True, 'values_equal': True, 'full_match': True}]}]"
