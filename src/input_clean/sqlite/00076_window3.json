{
    "name": "window3",
    "tests": [
        {
            "name": "reset_db",
            "query": "reset_db"
        },
        {
            "name": "window3-1.0",
            "query": "DROP TABLE IF EXISTS t2;"
        },
        {
            "name": "window3-1.0",
            "query": "CREATE TABLE t2(a INTEGER PRIMARY KEY, b INTEGER);"
        },
        {
            "name": "window3-1.0",
            "query": "INSERT INTO t2(a, b) VALUES\n(10,89), (11,81), (12,96), (13,59), (14,38), (15,68), (16,39), (17,62),\n(18,91), (19,46), (20,6), (21,99), (22,97), (23,27), (24,46), (25,78),\n(26,54), (27,97), (28,8), (29,67), (30,29), (31,93), (32,84), (33,77),\n(34,23), (35,16), (36,16), (37,93), (38,65), (39,35), (40,47), (41,7),\n(42,86), (43,74), (44,61), (45,91), (46,85), (47,24), (48,85), (49,43),\n(50,59), (51,12), (52,32), (53,56), (54,3), (55,91), (56,22), (57,90),\n(58,55), (59,15), (60,28), (61,89), (62,25), (63,47), (64,1), (65,56),\n(66,40), (67,43), (68,56), (69,16), (70,75), (71,36), (72,89), (73,98),\n(74,76), (75,81), (76,4), (77,94), (78,42), (79,30), (80,78), (81,33),\n(82,29), (83,53), (84,63), (85,2), (86,87), (87,37), (88,80), (89,84),\n(90,72), (91,41), (92,9), (93,61), (94,73), (95,95), (96,65), (97,13),\n(98,58), (99,96), (100,98), (101,1), (102,21), (103,74), (104,65), (105,35),\n(106,5), (107,73), (108,11), (109,51), (110,87), (111,41), (112,12), (113,8),\n(114,20), (115,31), (116,31), (117,15), (118,95), (119,22), (120,73),\n(121,79), (122,88), (123,34), (124,8), (125,11), (126,49), (127,34),\n(128,90), (129,59), (130,96), (131,60), (132,55), (133,75), (134,77),\n(135,44), (136,2), (137,7), (138,85), (139,57), (140,74), (141,29), (142,70),\n(143,59), (144,19), (145,39), (146,26), (147,26), (148,47), (149,80),\n(150,90), (151,36), (152,58), (153,47), (154,9), (155,72), (156,72), (157,66),\n(158,33), (159,93), (160,75), (161,64), (162,81), (163,9), (164,23), (165,37),\n(166,13), (167,12), (168,14), (169,62), (170,91), (171,36), (172,91),\n(173,33), (174,15), (175,34), (176,36), (177,99), (178,3), (179,95), (180,69),\n(181,58), (182,52), (183,30), (184,50), (185,84), (186,10), (187,84),\n(188,33), (189,21), (190,39), (191,44), (192,58), (193,30), (194,38),\n(195,34), (196,83), (197,27), (198,82), (199,17), (200,7);"
        },
        {
            "name": "window3-1.1",
            "query": "SELECT max(b) OVER (\nORDER BY a\n) FROM t2;"
        },
        {
            "name": "window3-1.1.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.3.3",
            "query": "SELECT row_number() OVER ( RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW )\nFROM t2;"
        },
        {
            "name": "window3-1.1.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.1.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.1.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.1.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.1.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.1.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.1.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.1.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.1.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.1.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.1.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.1.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.1.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.1.14.1",
            "query": "SELECT string_agg(CAST(b AS TEXT), '.') OVER (ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.1.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.1.14.3",
            "query": "SELECT string_agg(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.14.5",
            "query": "SELECT string_agg(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.1.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.1.14.7",
            "query": "SELECT string_agg(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.1.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.1.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)\nORDER BY 1;"
        },
        {
            "name": "window3-1.1.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW);"
        },
        {
            "name": "window3-1.1.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW);"
        },
        {
            "name": "window3-1.1.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW);"
        },
        {
            "name": "window3-1.1.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW);"
        },
        {
            "name": "window3-1.2.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.3.3",
            "query": "SELECT row_number() OVER ( RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )\nFROM t2;"
        },
        {
            "name": "window3-1.2.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.2.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.2.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.2.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.2.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.2.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.2.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.2.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.2.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.2.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.2.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.2.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.2.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.2.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.2.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.2.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.2.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.2.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.2.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.2.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\nORDER BY 1;"
        },
        {
            "name": "window3-1.2.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.2.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.2.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.2.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.3.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.3.3",
            "query": "SELECT row_number() OVER ( RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND CURRENT ROW )\nFROM t2;"
        },
        {
            "name": "window3-1.3.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.3.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.3.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.3.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.3.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.3.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.3.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.3.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.3.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.3.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.3.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.3.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.3.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.3.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.3.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.3.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.3.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.3.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND CURRENT ROW)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.3.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 RANGE BETWEEN CURRENT ROW         AND CURRENT ROW)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.3.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 RANGE BETWEEN CURRENT ROW         AND CURRENT ROW)\nORDER BY 1;"
        },
        {
            "name": "window3-1.3.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW);"
        },
        {
            "name": "window3-1.3.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW);"
        },
        {
            "name": "window3-1.3.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW);"
        },
        {
            "name": "window3-1.3.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a RANGE BETWEEN CURRENT ROW         AND CURRENT ROW);"
        },
        {
            "name": "window3-1.4.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.3.3",
            "query": "SELECT row_number() OVER ( RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING )\nFROM t2;"
        },
        {
            "name": "window3-1.4.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.4.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.4.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.4.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.4.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.4.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.4.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.4.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.4.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.4.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.4.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.4.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.4.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.4.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.4.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.4.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.4.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.4.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.4.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.4.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING)\nORDER BY 1;"
        },
        {
            "name": "window3-1.4.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.4.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.4.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.4.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a RANGE BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.5.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.3.3",
            "query": "SELECT row_number() OVER ( ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING )\nFROM t2;"
        },
        {
            "name": "window3-1.5.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.5.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.5.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.5.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.5.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.5.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.5.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.5.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.5.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.5.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.5.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.5.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.5.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.5.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.5.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.5.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.5.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.5.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.5.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.5.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING)\nORDER BY 1;"
        },
        {
            "name": "window3-1.5.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING);"
        },
        {
            "name": "window3-1.5.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING);"
        },
        {
            "name": "window3-1.5.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING);"
        },
        {
            "name": "window3-1.5.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 PRECEDING);"
        },
        {
            "name": "window3-1.6.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.3.3",
            "query": "SELECT row_number() OVER ( ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING )\nFROM t2;"
        },
        {
            "name": "window3-1.6.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.6.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.6.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.6.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.6.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.6.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.6.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.6.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.6.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.6.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.6.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.6.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.6.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.6.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.6.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.6.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING ) FROM t2;"
        },
        {
            "name": "window3-1.6.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING) FROM t2;"
        },
        {
            "name": "window3-1.6.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.6.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.6.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING)\nORDER BY 1;"
        },
        {
            "name": "window3-1.6.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING);"
        },
        {
            "name": "window3-1.6.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING);"
        },
        {
            "name": "window3-1.6.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING);"
        },
        {
            "name": "window3-1.6.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 PRECEDING);"
        },
        {
            "name": "window3-1.7.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.3.3",
            "query": "SELECT row_number() OVER ( ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW )\nFROM t2;"
        },
        {
            "name": "window3-1.7.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.7.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.7.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.7.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.7.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.7.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.7.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.7.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.7.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.7.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.7.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.7.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.7.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.7.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.7.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.7.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.7.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.7.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.7.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.7.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)\nORDER BY 1;"
        },
        {
            "name": "window3-1.7.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW);"
        },
        {
            "name": "window3-1.7.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW);"
        },
        {
            "name": "window3-1.7.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW);"
        },
        {
            "name": "window3-1.7.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW);"
        },
        {
            "name": "window3-1.8.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.3.3",
            "query": "SELECT row_number() OVER ( ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW )\nFROM t2;"
        },
        {
            "name": "window3-1.8.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.8.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.8.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.8.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.8.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.8.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.8.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.8.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.8.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.8.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.8.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.8.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.8.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.8.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.8.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.8.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.8.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.8.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.8.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.8.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW)\nORDER BY 1;"
        },
        {
            "name": "window3-1.8.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW);"
        },
        {
            "name": "window3-1.8.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW);"
        },
        {
            "name": "window3-1.8.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW);"
        },
        {
            "name": "window3-1.8.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 4 PRECEDING    AND CURRENT ROW);"
        },
        {
            "name": "window3-1.9.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.3.3",
            "query": "SELECT row_number() OVER ( ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND CURRENT ROW )\nFROM t2;"
        },
        {
            "name": "window3-1.9.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.9.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.9.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.9.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.9.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.9.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.9.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.9.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.9.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.9.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.9.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.9.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.9.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.9.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.9.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.9.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.9.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.9.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND CURRENT ROW)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.9.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ROWS BETWEEN CURRENT ROW         AND CURRENT ROW)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.9.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 ROWS BETWEEN CURRENT ROW         AND CURRENT ROW)\nORDER BY 1;"
        },
        {
            "name": "window3-1.9.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW);"
        },
        {
            "name": "window3-1.9.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW);"
        },
        {
            "name": "window3-1.9.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW);"
        },
        {
            "name": "window3-1.9.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN CURRENT ROW         AND CURRENT ROW);"
        },
        {
            "name": "window3-1.10.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.3.3",
            "query": "SELECT row_number() OVER ( ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING )\nFROM t2;"
        },
        {
            "name": "window3-1.10.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.10.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.10.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.10.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.10.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.10.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.10.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.10.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.10.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.10.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.10.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.10.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.10.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.10.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.10.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.10.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.10.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.10.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.10.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.10.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING)\nORDER BY 1;"
        },
        {
            "name": "window3-1.10.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING);"
        },
        {
            "name": "window3-1.10.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING);"
        },
        {
            "name": "window3-1.10.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING);"
        },
        {
            "name": "window3-1.10.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND 4 FOLLOWING);"
        },
        {
            "name": "window3-1.11.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.3.3",
            "query": "SELECT row_number() OVER ( ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING )\nFROM t2;"
        },
        {
            "name": "window3-1.11.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.11.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.11.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.11.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.11.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.11.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.11.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.11.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.11.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.11.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.11.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.11.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.11.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.11.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.11.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.11.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.11.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.11.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.11.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.11.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING)\nORDER BY 1;"
        },
        {
            "name": "window3-1.11.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING);"
        },
        {
            "name": "window3-1.11.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING);"
        },
        {
            "name": "window3-1.11.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING);"
        },
        {
            "name": "window3-1.11.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 4 PRECEDING    AND 2 FOLLOWING);"
        },
        {
            "name": "window3-1.12.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.3.3",
            "query": "SELECT row_number() OVER ( ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING )\nFROM t2;"
        },
        {
            "name": "window3-1.12.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.12.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.12.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.12.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.12.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.12.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.12.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.12.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.12.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.12.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.12.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.12.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.12.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.12.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.12.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.12.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.12.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.12.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.12.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.12.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING)\nORDER BY 1;"
        },
        {
            "name": "window3-1.12.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING);"
        },
        {
            "name": "window3-1.12.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING);"
        },
        {
            "name": "window3-1.12.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING);"
        },
        {
            "name": "window3-1.12.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN CURRENT ROW         AND 4 FOLLOWING);"
        },
        {
            "name": "window3-1.13.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.3.3",
            "query": "SELECT row_number() OVER ( ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING )\nFROM t2;"
        },
        {
            "name": "window3-1.13.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.13.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.13.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.13.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.13.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.13.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.13.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.13.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.13.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.13.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.13.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.13.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.13.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.13.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.13.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.13.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.13.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.13.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.13.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.13.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING)\nORDER BY 1;"
        },
        {
            "name": "window3-1.13.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING);"
        },
        {
            "name": "window3-1.13.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING);"
        },
        {
            "name": "window3-1.13.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING);"
        },
        {
            "name": "window3-1.13.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 2 FOLLOWING    AND 4 FOLLOWING);"
        },
        {
            "name": "window3-1.14.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.3.3",
            "query": "SELECT row_number() OVER ( ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING )\nFROM t2;"
        },
        {
            "name": "window3-1.14.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.14.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.14.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.14.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.14.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.14.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.14.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.14.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.14.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.14.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.14.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.14.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.14.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.14.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.14.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.14.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.14.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.14.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.14.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.14.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING)\nORDER BY 1;"
        },
        {
            "name": "window3-1.14.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.14.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.14.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.14.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.15.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.3.3",
            "query": "SELECT row_number() OVER ( ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING )\nFROM t2;"
        },
        {
            "name": "window3-1.15.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.15.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.15.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.15.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.15.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.15.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.15.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.15.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.15.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.15.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.15.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.15.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.15.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.15.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.15.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.15.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.15.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.15.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.15.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.15.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING)\nORDER BY 1;"
        },
        {
            "name": "window3-1.15.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.15.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.15.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.15.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.16.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.3.3",
            "query": "SELECT row_number() OVER ( ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING )\nFROM t2;"
        },
        {
            "name": "window3-1.16.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.16.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.16.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.16.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.16.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.16.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.16.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.16.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.16.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.16.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.16.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.16.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.16.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.16.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.16.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.16.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.16.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.16.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.16.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.16.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING)\nORDER BY 1;"
        },
        {
            "name": "window3-1.16.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.16.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.16.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.16.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN CURRENT ROW         AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.17.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.3.3",
            "query": "SELECT row_number() OVER ( ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING )\nFROM t2;"
        },
        {
            "name": "window3-1.17.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.17.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.17.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.17.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.17.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.17.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.17.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.17.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.17.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.17.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.17.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.17.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.17.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.17.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.17.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.17.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING ) FROM t2;"
        },
        {
            "name": "window3-1.17.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING) FROM t2;"
        },
        {
            "name": "window3-1.17.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.17.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.17.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING)\nORDER BY 1;"
        },
        {
            "name": "window3-1.17.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.17.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.17.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.17.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 4 FOLLOWING    AND UNBOUNDED FOLLOWING);"
        },
        {
            "name": "window3-1.18.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.3.3",
            "query": "SELECT row_number() OVER ( ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW )\nFROM t2;"
        },
        {
            "name": "window3-1.18.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.18.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.18.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.18.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.18.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.18.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.18.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.18.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.18.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.18.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.18.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.18.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.18.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.18.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.18.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.18.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM t2;"
        },
        {
            "name": "window3-1.18.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t2;"
        },
        {
            "name": "window3-1.18.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.18.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.18.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW)\nORDER BY 1;"
        },
        {
            "name": "window3-1.18.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW);"
        },
        {
            "name": "window3-1.18.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW);"
        },
        {
            "name": "window3-1.18.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW);"
        },
        {
            "name": "window3-1.18.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW);"
        },
        {
            "name": "window3-1.19.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.3.3",
            "query": "SELECT row_number() OVER ( ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES )\nFROM t2;"
        },
        {
            "name": "window3-1.19.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t2;"
        },
        {
            "name": "window3-1.19.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t2;"
        },
        {
            "name": "window3-1.19.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t2;"
        },
        {
            "name": "window3-1.19.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t2;"
        },
        {
            "name": "window3-1.19.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t2;"
        },
        {
            "name": "window3-1.19.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t2;"
        },
        {
            "name": "window3-1.19.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t2;"
        },
        {
            "name": "window3-1.19.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t2;"
        },
        {
            "name": "window3-1.19.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t2;"
        },
        {
            "name": "window3-1.19.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t2;"
        },
        {
            "name": "window3-1.19.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t2;"
        },
        {
            "name": "window3-1.19.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t2;"
        },
        {
            "name": "window3-1.19.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t2;"
        },
        {
            "name": "window3-1.19.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t2;"
        },
        {
            "name": "window3-1.19.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t2;"
        },
        {
            "name": "window3-1.19.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES ) FROM t2;"
        },
        {
            "name": "window3-1.19.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t2;"
        },
        {
            "name": "window3-1.19.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.19.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.19.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES)\nORDER BY 1;"
        },
        {
            "name": "window3-1.19.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES);"
        },
        {
            "name": "window3-1.19.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES);"
        },
        {
            "name": "window3-1.19.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES);"
        },
        {
            "name": "window3-1.19.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE TIES);"
        },
        {
            "name": "window3-1.20.2.1",
            "query": "SELECT max(b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.2.2",
            "query": "SELECT min(b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.3.1",
            "query": "SELECT row_number() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.3.2",
            "query": "SELECT row_number() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.3.3",
            "query": "SELECT row_number() OVER ( ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.4.1",
            "query": "SELECT dense_rank() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.4.2",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.4.3",
            "query": "SELECT dense_rank() OVER ( ORDER BY b ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.4.4",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.4.5",
            "query": "SELECT dense_rank() OVER ( ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.4.6",
            "query": "SELECT dense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.5.1",
            "query": "SELECT rank() OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.5.2",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.5.3",
            "query": "SELECT rank() OVER ( ORDER BY b ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.5.4",
            "query": "SELECT rank() OVER ( PARTITION BY b%10 ORDER BY b ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.5.5",
            "query": "SELECT rank() OVER ( ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.5.6",
            "query": "SELECT rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.6.1",
            "query": "SELECT\nrow_number() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ),\nrank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ),\ndense_rank() OVER ( PARTITION BY b%2 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP )\nFROM t2;"
        },
        {
            "name": "window3-1.20.9.1",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.9.2",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.9.3",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.9.4",
            "query": "SELECT last_value(a+b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.9.5",
            "query": "SELECT last_value(a+b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.9.6",
            "query": "SELECT last_value(a+b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM t2;"
        },
        {
            "name": "window3-1.20.10.1",
            "query": "SELECT nth_value(b,b+1) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM t2;"
        },
        {
            "name": "window3-1.20.10.2",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM t2;"
        },
        {
            "name": "window3-1.20.10.3",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.10.4",
            "query": "SELECT nth_value(b,b+1) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.10.5",
            "query": "SELECT nth_value(b,b+1) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.10.6",
            "query": "SELECT nth_value(b,b+1) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM t2;"
        },
        {
            "name": "window3-1.20.11.1",
            "query": "SELECT first_value(b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM t2;"
        },
        {
            "name": "window3-1.20.11.2",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM t2;"
        },
        {
            "name": "window3-1.20.11.3",
            "query": "SELECT first_value(b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.11.4",
            "query": "SELECT first_value(b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.11.5",
            "query": "SELECT first_value(b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.11.6",
            "query": "SELECT first_value(b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM t2;"
        },
        {
            "name": "window3-1.20.12.1",
            "query": "SELECT lead(b,b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM t2;"
        },
        {
            "name": "window3-1.20.12.2",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM t2;"
        },
        {
            "name": "window3-1.20.12.3",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.12.4",
            "query": "SELECT lead(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.12.5",
            "query": "SELECT lead(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.12.6",
            "query": "SELECT lead(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM t2;"
        },
        {
            "name": "window3-1.20.13.1",
            "query": "SELECT lag(b,b) OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM t2;"
        },
        {
            "name": "window3-1.20.13.2",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM t2;"
        },
        {
            "name": "window3-1.20.13.3",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.13.4",
            "query": "SELECT lag(b,b) OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.13.5",
            "query": "SELECT lag(b,b) OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.13.6",
            "query": "SELECT lag(b,b) OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM t2;"
        },
        {
            "name": "window3-1.20.14.1",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM t2;"
        },
        {
            "name": "window3-1.20.14.2",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%10 ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM t2;"
        },
        {
            "name": "window3-1.20.14.3",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.14.4",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( PARTITION BY b%10 ORDER BY b,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.14.5",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER ( ORDER BY b%10,a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP ) FROM t2;"
        },
        {
            "name": "window3-1.20.14.6",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (PARTITION BY b%2,a ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM t2;"
        },
        {
            "name": "window3-1.20.14.7",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ORDER BY b%10 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a)\nORDER BY 1;"
        },
        {
            "name": "window3-1.20.14.8",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER (win1 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP)\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10)\nORDER BY 1;"
        },
        {
            "name": "window3-1.20.14.9",
            "query": "SELECT group_concat(CAST(b AS TEXT), '.') OVER win2\nFROM t2\nWINDOW win1 AS (PARTITION BY b%2,a ORDER BY b%10),\nwin2 AS (win1 ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP)\nORDER BY 1;"
        },
        {
            "name": "window3-1.20.15.1",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP);"
        },
        {
            "name": "window3-1.20.15.2",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 0=1) OVER win FROM t2\nWINDOW win AS (ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP);"
        },
        {
            "name": "window3-1.20.15.3",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE 1=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP);"
        },
        {
            "name": "window3-1.20.15.4",
            "query": "SELECT count(*) OVER win, group_concat(CAST(b AS TEXT), '.')\nFILTER (WHERE a%2=0) OVER win FROM t2\nWINDOW win AS (PARTITION BY (a%10) ORDER BY a ROWS BETWEEN 4 PRECEDING    AND UNBOUNDED FOLLOWING EXCLUDE GROUP);"
        },
        {
            "name": "reset_db",
            "query": "reset_db"
        },
        {
            "name": "temptable2-1.1",
            "query": "CREATE TEMP TABLE t1(a, b);"
        },
        {
            "name": "temptable2-1.1",
            "query": "CREATE INDEX i1 ON t1(a, b);"
        },
        {
            "name": "temptable2-1.2",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<100000 )\nINSERT INTO t1 SELECT randomblob(100), randomblob(100) FROM X;"
        },
        {
            "name": "temptable2-1.3",
            "query": "PRAGMA temp.integrity_check;"
        },
        {
            "name": "reset_db",
            "query": "reset_db"
        },
        {
            "name": "temptable2-2.1",
            "query": "CREATE TEMP TABLE t2(a, b);"
        },
        {
            "name": "temptable2-2.1",
            "query": "INSERT INTO t2 VALUES(1, 2);"
        },
        {
            "name": "temptable2-2.2",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-2.2",
            "query": "INSERT INTO t2 VALUES(3, 4);"
        },
        {
            "name": "temptable2-2.2",
            "query": "SELECT * FROM t2;"
        },
        {
            "name": "temptable2-2.3",
            "query": "ROLLBACK;"
        },
        {
            "name": "temptable2-2.3",
            "query": "SELECT * FROM t2;"
        },
        {
            "name": "reset_db",
            "query": "reset_db"
        },
        {
            "name": "temptable2-3.1.1",
            "query": "PRAGMA main.cache_size = 10;"
        },
        {
            "name": "temptable2-3.1.1",
            "query": "PRAGMA temp.cache_size = 10;"
        },
        {
            "name": "temptable2-3.1.1",
            "query": "CREATE TEMP TABLE t1(a, b);"
        },
        {
            "name": "temptable2-3.1.1",
            "query": "CREATE INDEX i1 ON t1(a, b);"
        },
        {
            "name": "temptable2-3.1.1",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<1000 )\nINSERT INTO t1 SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-3.1.1",
            "query": "SELECT count(*) FROM t1;"
        },
        {
            "name": "temptable2-3.1.2",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-3.1.2",
            "query": "UPDATE t1 SET b=randomblob(100) WHERE (rowid%10)==0;"
        },
        {
            "name": "temptable2-3.1.2",
            "query": "ROLLBACK;"
        },
        {
            "name": "temptable2-3.1.3",
            "query": "SELECT count(*) FROM t1;"
        },
        {
            "name": "temptable2-3.1.4",
            "query": "PRAGMA temp.integrity_check;"
        },
        {
            "name": "temptable2-3.2.1",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-3.2.1",
            "query": "UPDATE t1 SET b=randomblob(100) WHERE (rowid%10)==0;"
        },
        {
            "name": "temptable2-3.2.1",
            "query": "SAVEPOINT abc;"
        },
        {
            "name": "temptable2-3.2.1",
            "query": "UPDATE t1 SET b=randomblob(100) WHERE (rowid%10)==1;"
        },
        {
            "name": "temptable2-3.2.1",
            "query": "ROLLBACK TO abc;"
        },
        {
            "name": "temptable2-3.2.1",
            "query": "UPDATE t1 SET b=randomblob(100) WHERE (rowid%10)==2;"
        },
        {
            "name": "temptable2-3.2.1",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-3.2.2",
            "query": "PRAGMA temp.integrity_check;"
        },
        {
            "name": "reset_db",
            "query": "reset_db"
        },
        {
            "name": "temptable2-4.1.1",
            "query": "PRAGMA main.cache_size = 10;"
        },
        {
            "name": "temptable2-4.1.1",
            "query": "PRAGMA temp.cache_size = 10;"
        },
        {
            "name": "temptable2-4.1.1",
            "query": "CREATE TEMP TABLE t1(a, b);"
        },
        {
            "name": "temptable2-4.1.1",
            "query": "CREATE INDEX i1 ON t1(a, b);"
        },
        {
            "name": "temptable2-4.1.1",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<10 )\nINSERT INTO t1 SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-4.1.1",
            "query": "SELECT count(*) FROM t1;"
        },
        {
            "name": "temptable2-4.1.1",
            "query": "PRAGMA temp.page_count;"
        },
        {
            "name": "temptable2-4.1.2",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-4.1.2",
            "query": "UPDATE t1 SET b=randomblob(100);"
        },
        {
            "name": "temptable2-4.1.2",
            "query": "ROLLBACK;"
        },
        {
            "name": "temptable2-4.1.3",
            "query": "CREATE TEMP TABLE t2(a, b);"
        },
        {
            "name": "temptable2-4.1.3",
            "query": "CREATE INDEX i2 ON t2(a, b);"
        },
        {
            "name": "temptable2-4.1.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO t2 SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-4.1.3",
            "query": "SELECT count(*) FROM t2;"
        },
        {
            "name": "temptable2-4.1.3",
            "query": "SELECT count(*) FROM t1;"
        },
        {
            "name": "temptable2-4.1.4",
            "query": "PRAGMA temp.integrity_check;"
        },
        {
            "name": "reset_db",
            "query": "reset_db"
        },
        {
            "name": "temptable2-5.1.1",
            "query": "PRAGMA main.cache_size = 10;"
        },
        {
            "name": "temptable2-5.1.1",
            "query": "PRAGMA temp.cache_size = 10;"
        },
        {
            "name": "temptable2-5.1.1",
            "query": "CREATE TEMP TABLE t2(a, b);"
        },
        {
            "name": "temptable2-5.1.1",
            "query": "CREATE INDEX i2 ON t2(a, b);"
        },
        {
            "name": "temptable2-5.1.1",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO t2 SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-5.1.1",
            "query": "CREATE TEMP TABLE t1(a, b);"
        },
        {
            "name": "temptable2-5.1.1",
            "query": "CREATE INDEX i1 ON t1(a, b);"
        },
        {
            "name": "temptable2-5.1.1",
            "query": "INSERT INTO t1 VALUES(1, 2);"
        },
        {
            "name": "temptable2-5.1.3",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-5.1.3",
            "query": "UPDATE t1 SET a=2;"
        },
        {
            "name": "temptable2-5.1.3",
            "query": "UPDATE t2 SET a=randomblob(100);"
        },
        {
            "name": "temptable2-5.1.3",
            "query": "SELECT count(*) FROM t1;"
        },
        {
            "name": "temptable2-5.1.3",
            "query": "ROLLBACK;"
        },
        {
            "name": "temptable2-5.1.4",
            "query": "UPDATE t2 SET a=randomblob(100);"
        },
        {
            "name": "temptable2-5.1.4",
            "query": "SELECT * FROM t1;"
        },
        {
            "name": "temptable2-5.1.5",
            "query": "PRAGMA temp.integrity_check;"
        },
        {
            "name": "reset_db",
            "query": "reset_db"
        },
        {
            "name": "temptable2-6.1",
            "query": "PRAGMA main.cache_size = 10;"
        },
        {
            "name": "temptable2-6.1",
            "query": "PRAGMA temp.cache_size = 10;"
        },
        {
            "name": "temptable2-6.1",
            "query": "CREATE TEMP TABLE t1(x);"
        },
        {
            "name": "temptable2-6.1",
            "query": "INSERT INTO t1 VALUES('one');"
        },
        {
            "name": "temptable2-6.1",
            "query": "CREATE TEMP TABLE t2(a, b);"
        },
        {
            "name": "temptable2-6.1",
            "query": "CREATE INDEX i2 ON t2(a, b);"
        },
        {
            "name": "temptable2-6.1",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO t2 SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-6.2",
            "query": "UPDATE t1 SET x='two';"
        },
        {
            "name": "temptable2-6.2",
            "query": "-- step 1\nBEGIN;"
        },
        {
            "name": "temptable2-6.2",
            "query": "UPDATE t2 SET a=randomblob(100);"
        },
        {
            "name": "temptable2-6.2",
            "query": "-- step 2\nSELECT * FROM t1;"
        },
        {
            "name": "temptable2-6.2",
            "query": "-- step 3\nROLLBACK;"
        },
        {
            "name": "temptable2-6.2",
            "query": "-- step 4\nSELECT count(*) FROM t2;"
        },
        {
            "name": "temptable2-6.2",
            "query": "SELECT * FROM t1;"
        },
        {
            "name": "reset_db",
            "query": "reset_db"
        },
        {
            "name": "temptable2-7.1",
            "query": "PRAGMA auto_vacuum=INCREMENTAL;"
        },
        {
            "name": "temptable2-7.1",
            "query": "CREATE TABLE t1(x);"
        },
        {
            "name": "temptable2-7.1",
            "query": "INSERT INTO t1 VALUES(zeroblob(900));"
        },
        {
            "name": "temptable2-7.1",
            "query": "INSERT INTO t1 VALUES(zeroblob(900));"
        },
        {
            "name": "temptable2-7.1",
            "query": "INSERT INTO t1 SELECT x FROM t1;"
        },
        {
            "name": "temptable2-7.1",
            "query": "INSERT INTO t1 SELECT x FROM t1;"
        },
        {
            "name": "temptable2-7.1",
            "query": "INSERT INTO t1 SELECT x FROM t1;"
        },
        {
            "name": "temptable2-7.1",
            "query": "INSERT INTO t1 SELECT x FROM t1;"
        },
        {
            "name": "temptable2-7.1",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-7.1",
            "query": "DELETE FROM t1 WHERE rowid%2;"
        },
        {
            "name": "temptable2-7.1",
            "query": "PRAGMA incremental_vacuum(4);"
        },
        {
            "name": "temptable2-7.1",
            "query": "ROLLBACK;"
        },
        {
            "name": "temptable2-7.1",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "reset_db",
            "query": "reset_db"
        },
        {
            "name": "temptable2-8.1",
            "query": "PRAGMA auto_vacuum = OFF;"
        },
        {
            "name": "temptable2-8.1",
            "query": "CREATE TABLE t2(a, b);"
        },
        {
            "name": "temptable2-8.1",
            "query": "CREATE INDEX i2 ON t2(a, b);"
        },
        {
            "name": "temptable2-8.1",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<20 )\nINSERT INTO t2 SELECT randomblob(100), randomblob(100) FROM x ORDER BY 1, 2;"
        },
        {
            "name": "temptable2-8.1",
            "query": "PRAGMA page_count;"
        },
        {
            "name": "reset_db",
            "query": "reset_db"
        },
        {
            "name": "temptable2-9.1.1.1",
            "query": "PRAGMA cache_size = 15;"
        },
        {
            "name": "temptable2-9.1.1.1",
            "query": "PRAGMA auto_vacuum = 1;"
        },
        {
            "name": "temptable2-9.1.1.2",
            "query": "CREATE TABLE tx(a, b);"
        },
        {
            "name": "temptable2-9.1.1.2",
            "query": "CREATE INDEX i1 ON tx(a);"
        },
        {
            "name": "temptable2-9.1.1.2",
            "query": "CREATE INDEX i2 ON tx(b);"
        },
        {
            "name": "temptable2-9.1.1.2",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<1000 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.2.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.2.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.2.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.2.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.2.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.2.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.2.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.2.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.2.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.3.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.3.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.3.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.3.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.3.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.3.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.3.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.3.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.3.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.4.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.4.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.4.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.4.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.4.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.4.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.4.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.4.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.4.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.5.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.5.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.5.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.5.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.5.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.5.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.5.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.5.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.5.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.6.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.6.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.6.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.6.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.6.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.6.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.6.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.6.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.6.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.7.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.7.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.7.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.7.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.7.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.7.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.7.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.7.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.7.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.8.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.8.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.8.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.8.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.8.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.8.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.8.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.8.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.8.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.9.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.9.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.9.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.9.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.9.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.9.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.9.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.9.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.9.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.10.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.10.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.10.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.10.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.10.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.10.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.10.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.10.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.10.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.11.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.11.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.11.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.11.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.11.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.11.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.11.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.11.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.11.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.12.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.12.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.12.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.12.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.12.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.12.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.12.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.12.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.12.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.13.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.13.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.13.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.13.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.13.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.13.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.13.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.13.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.13.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.14.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.14.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.14.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.14.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.14.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.14.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.14.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.14.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.14.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.15.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.15.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.15.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.15.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.15.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.15.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.15.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.15.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.15.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.16.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.16.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.16.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.16.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.16.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.16.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.16.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.16.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.16.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.17.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.17.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.17.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.17.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.17.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.17.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.17.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.17.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.17.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.18.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.18.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.18.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.18.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.18.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.18.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.18.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.18.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.18.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.19.1",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.19.2",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.19.3",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<400 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.19.4",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "temptable2-9.1.19.5",
            "query": "BEGIN;"
        },
        {
            "name": "temptable2-9.1.19.5",
            "query": "DELETE FROM tx WHERE (random()%3)==0;"
        },
        {
            "name": "temptable2-9.1.19.5",
            "query": "WITH x(i) AS ( SELECT 1 UNION ALL SELECT i+1 FROM x WHERE i<500 )\nINSERT INTO tx SELECT randomblob(100), randomblob(100) FROM x;"
        },
        {
            "name": "temptable2-9.1.19.5",
            "query": "COMMIT;"
        },
        {
            "name": "temptable2-9.1.19.6",
            "query": "PRAGMA integrity_check;"
        },
        {
            "name": "reset_db",
            "query": "reset_db"
        }
    ]
}